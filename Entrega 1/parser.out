Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    L

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON a b bloque END
Rule 2     a -> variable
Rule 3     a -> <empty>
Rule 4     b -> funcion b
Rule 5     b -> <empty>
Rule 6     bloque -> LCURLY c RCURLY
Rule 7     c -> estatuto c
Rule 8     c -> <empty>
Rule 9     tipo -> INTTYPE
Rule 10    tipo -> FLOATTYPE
Rule 11    tipo -> CHARTYPE
Rule 12    tipo -> BOOLTYPE
Rule 13    tipo -> STRINGTYPE
Rule 14    estatuto -> asignacion
Rule 15    estatuto -> condicion
Rule 16    estatuto -> escritura
Rule 17    estatuto -> ciclo
Rule 18    variable -> VAR d
Rule 19    d -> e COLON tipo SEMICOLON f
Rule 20    e -> ID
Rule 21    e -> ID LBRACKET RBRACKET COMA e
Rule 22    e -> ID COMA e
Rule 23    f -> d
Rule 24    f -> <empty>
Rule 25    asignacion -> ID g
Rule 26    g -> ASSIGN expresion
Rule 27    g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON
Rule 28    h -> expresion
Rule 29    h -> expresion COMA h
Rule 30    exp -> termino i
Rule 31    i -> j
Rule 32    i -> <empty>
Rule 33    j -> ADDITION exp
Rule 34    j -> SUBTRACTION exp
Rule 35    termino -> factor k
Rule 36    k -> l
Rule 37    k -> <empty>
Rule 38    l -> MULTIPLICATION termino
Rule 39    l -> DIVISION termino
Rule 40    factor -> m
Rule 41    factor -> n
Rule 42    m -> varcte
Rule 43    n -> LPARENTHESIS expresion RPARENTHESIS
Rule 44    expresion -> exp o
Rule 45    o -> LESS exp
Rule 46    o -> GREATER exp
Rule 47    o -> LESSEQUAL exp
Rule 48    o -> GREATEREQUAL exp
Rule 49    o -> NOTEQUAL exp
Rule 50    o -> EQUAL exp
Rule 51    o -> <empty>
Rule 52    varcte -> p
Rule 53    p -> ID q
Rule 54    p -> INT
Rule 55    p -> FLOAT
Rule 56    p -> CHAR
Rule 57    p -> STRING
Rule 58    p -> BOOL
Rule 59    q -> LBRACKET RBRACKET
Rule 60    q -> <empty>
Rule 61    condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r
Rule 62    r -> ELSE bloque
Rule 63    r -> <empty>
Rule 64    escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON
Rule 65    s -> expresion
Rule 66    s -> QUOTE CTESTRING QUOTE
Rule 67    ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque
Rule 68    funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque
Rule 69    t -> argumentos
Rule 70    t -> <empty>
Rule 71    argumentos -> u
Rule 72    u -> ID tipo
Rule 73    u -> ID tipo COMA u

Terminals, with rules where they appear

ADDITION             : 33
ASSIGN               : 26 27
BOOL                 : 58
BOOLTYPE             : 12
CHAR                 : 56
CHARTYPE             : 11
COLON                : 19
COMA                 : 21 22 29 73
CTESTRING            : 66
DIVISION             : 39
ELSE                 : 62
END                  : 1
EQUAL                : 50
FLOAT                : 55
FLOATTYPE            : 10
FUNC                 : 68
GREATER              : 46
GREATEREQUAL         : 48
ID                   : 1 20 21 22 25 53 68 72 73
IF                   : 61
INT                  : 54
INTTYPE              : 9
L                    : 
LBRACKET             : 21 27 27 59
LCURLY               : 6
LESS                 : 45
LESSEQUAL            : 47
LPARENTHESIS         : 43 61 64 67 68
MULTIPLICATION       : 38
NOTEQUAL             : 49
PRINT                : 64
PROGRAM              : 1
QUOTE                : 66 66
RBRACKET             : 21 27 27 59
RCURLY               : 6
RPARENTHESIS         : 43 61 64 67 68
SEMICOLON            : 1 19 27 64
STRING               : 57
STRINGTYPE           : 13
SUBTRACTION          : 34
VAR                  : 18
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

a                    : 1
argumentos           : 69
asignacion           : 14
b                    : 1 4
bloque               : 1 61 62 67 68
c                    : 6 7
ciclo                : 17
condicion            : 15
d                    : 18 23
e                    : 19 21 22
escritura            : 16
estatuto             : 7
exp                  : 33 34 44 45 46 47 48 49 50
expresion            : 26 28 29 43 61 65 67
f                    : 19
factor               : 35
funcion              : 4
g                    : 25
h                    : 27 29
i                    : 30
j                    : 31
k                    : 35
l                    : 36
m                    : 40
n                    : 41
o                    : 44
p                    : 52
programa             : 0
q                    : 53
r                    : 61
s                    : 64
t                    : 68
termino              : 30 38 39
tipo                 : 19 68 72 73
u                    : 71 73
varcte               : 42
variable             : 2

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON a b bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON a b bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON a b bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . a b bloque END
    (2) a -> . variable
    (3) a -> .
    (18) variable -> . VAR d

    INTTYPE         reduce using rule 3 (a -> .)
    FLOATTYPE       reduce using rule 3 (a -> .)
    CHARTYPE        reduce using rule 3 (a -> .)
    BOOLTYPE        reduce using rule 3 (a -> .)
    STRINGTYPE      reduce using rule 3 (a -> .)
    LCURLY          reduce using rule 3 (a -> .)
    VAR             shift and go to state 6

    a                              shift and go to state 5
    variable                       shift and go to state 7

state 5

    (1) programa -> PROGRAM ID SEMICOLON a . b bloque END
    (4) b -> . funcion b
    (5) b -> .
    (68) funcion -> . tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque
    (9) tipo -> . INTTYPE
    (10) tipo -> . FLOATTYPE
    (11) tipo -> . CHARTYPE
    (12) tipo -> . BOOLTYPE
    (13) tipo -> . STRINGTYPE

    LCURLY          reduce using rule 5 (b -> .)
    INTTYPE         shift and go to state 14
    FLOATTYPE       shift and go to state 11
    CHARTYPE        shift and go to state 13
    BOOLTYPE        shift and go to state 8
    STRINGTYPE      shift and go to state 12

    b                              shift and go to state 9
    tipo                           shift and go to state 10
    funcion                        shift and go to state 15

state 6

    (18) variable -> VAR . d
    (19) d -> . e COLON tipo SEMICOLON f
    (20) e -> . ID
    (21) e -> . ID LBRACKET RBRACKET COMA e
    (22) e -> . ID COMA e

    ID              shift and go to state 18

    e                              shift and go to state 16
    d                              shift and go to state 17

state 7

    (2) a -> variable .

    INTTYPE         reduce using rule 2 (a -> variable .)
    FLOATTYPE       reduce using rule 2 (a -> variable .)
    CHARTYPE        reduce using rule 2 (a -> variable .)
    BOOLTYPE        reduce using rule 2 (a -> variable .)
    STRINGTYPE      reduce using rule 2 (a -> variable .)
    LCURLY          reduce using rule 2 (a -> variable .)


state 8

    (12) tipo -> BOOLTYPE .

    FUNC            reduce using rule 12 (tipo -> BOOLTYPE .)
    SEMICOLON       reduce using rule 12 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 12 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> BOOLTYPE .)


state 9

    (1) programa -> PROGRAM ID SEMICOLON a b . bloque END
    (6) bloque -> . LCURLY c RCURLY

    LCURLY          shift and go to state 19

    bloque                         shift and go to state 20

state 10

    (68) funcion -> tipo . FUNC ID LPARENTHESIS t RPARENTHESIS bloque

    FUNC            shift and go to state 21


state 11

    (10) tipo -> FLOATTYPE .

    FUNC            reduce using rule 10 (tipo -> FLOATTYPE .)
    SEMICOLON       reduce using rule 10 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 10 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 10 (tipo -> FLOATTYPE .)


state 12

    (13) tipo -> STRINGTYPE .

    FUNC            reduce using rule 13 (tipo -> STRINGTYPE .)
    SEMICOLON       reduce using rule 13 (tipo -> STRINGTYPE .)
    COMA            reduce using rule 13 (tipo -> STRINGTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> STRINGTYPE .)


state 13

    (11) tipo -> CHARTYPE .

    FUNC            reduce using rule 11 (tipo -> CHARTYPE .)
    SEMICOLON       reduce using rule 11 (tipo -> CHARTYPE .)
    COMA            reduce using rule 11 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 11 (tipo -> CHARTYPE .)


state 14

    (9) tipo -> INTTYPE .

    FUNC            reduce using rule 9 (tipo -> INTTYPE .)
    SEMICOLON       reduce using rule 9 (tipo -> INTTYPE .)
    COMA            reduce using rule 9 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 9 (tipo -> INTTYPE .)


state 15

    (4) b -> funcion . b
    (4) b -> . funcion b
    (5) b -> .
    (68) funcion -> . tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque
    (9) tipo -> . INTTYPE
    (10) tipo -> . FLOATTYPE
    (11) tipo -> . CHARTYPE
    (12) tipo -> . BOOLTYPE
    (13) tipo -> . STRINGTYPE

    LCURLY          reduce using rule 5 (b -> .)
    INTTYPE         shift and go to state 14
    FLOATTYPE       shift and go to state 11
    CHARTYPE        shift and go to state 13
    BOOLTYPE        shift and go to state 8
    STRINGTYPE      shift and go to state 12

    b                              shift and go to state 22
    tipo                           shift and go to state 10
    funcion                        shift and go to state 15

state 16

    (19) d -> e . COLON tipo SEMICOLON f

    COLON           shift and go to state 23


state 17

    (18) variable -> VAR d .

    INTTYPE         reduce using rule 18 (variable -> VAR d .)
    FLOATTYPE       reduce using rule 18 (variable -> VAR d .)
    CHARTYPE        reduce using rule 18 (variable -> VAR d .)
    BOOLTYPE        reduce using rule 18 (variable -> VAR d .)
    STRINGTYPE      reduce using rule 18 (variable -> VAR d .)
    LCURLY          reduce using rule 18 (variable -> VAR d .)


state 18

    (20) e -> ID .
    (21) e -> ID . LBRACKET RBRACKET COMA e
    (22) e -> ID . COMA e

    COLON           reduce using rule 20 (e -> ID .)
    LBRACKET        shift and go to state 24
    COMA            shift and go to state 25


state 19

    (6) bloque -> LCURLY . c RCURLY
    (7) c -> . estatuto c
    (8) c -> .
    (14) estatuto -> . asignacion
    (15) estatuto -> . condicion
    (16) estatuto -> . escritura
    (17) estatuto -> . ciclo
    (25) asignacion -> . ID g
    (61) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque r
    (64) escritura -> . PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON
    (67) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 8 (c -> .)
    ID              shift and go to state 34
    IF              shift and go to state 33
    PRINT           shift and go to state 32
    WHILE           shift and go to state 30

    c                              shift and go to state 26
    ciclo                          shift and go to state 27
    asignacion                     shift and go to state 28
    estatuto                       shift and go to state 29
    condicion                      shift and go to state 31
    escritura                      shift and go to state 35

state 20

    (1) programa -> PROGRAM ID SEMICOLON a b bloque . END

    END             shift and go to state 36


state 21

    (68) funcion -> tipo FUNC . ID LPARENTHESIS t RPARENTHESIS bloque

    ID              shift and go to state 37


state 22

    (4) b -> funcion b .

    LCURLY          reduce using rule 4 (b -> funcion b .)


state 23

    (19) d -> e COLON . tipo SEMICOLON f
    (9) tipo -> . INTTYPE
    (10) tipo -> . FLOATTYPE
    (11) tipo -> . CHARTYPE
    (12) tipo -> . BOOLTYPE
    (13) tipo -> . STRINGTYPE

    INTTYPE         shift and go to state 14
    FLOATTYPE       shift and go to state 11
    CHARTYPE        shift and go to state 13
    BOOLTYPE        shift and go to state 8
    STRINGTYPE      shift and go to state 12

    tipo                           shift and go to state 38

state 24

    (21) e -> ID LBRACKET . RBRACKET COMA e

    RBRACKET        shift and go to state 39


state 25

    (22) e -> ID COMA . e
    (20) e -> . ID
    (21) e -> . ID LBRACKET RBRACKET COMA e
    (22) e -> . ID COMA e

    ID              shift and go to state 18

    e                              shift and go to state 40

state 26

    (6) bloque -> LCURLY c . RCURLY

    RCURLY          shift and go to state 41


state 27

    (17) estatuto -> ciclo .

    ID              reduce using rule 17 (estatuto -> ciclo .)
    IF              reduce using rule 17 (estatuto -> ciclo .)
    PRINT           reduce using rule 17 (estatuto -> ciclo .)
    WHILE           reduce using rule 17 (estatuto -> ciclo .)
    RCURLY          reduce using rule 17 (estatuto -> ciclo .)


state 28

    (14) estatuto -> asignacion .

    ID              reduce using rule 14 (estatuto -> asignacion .)
    IF              reduce using rule 14 (estatuto -> asignacion .)
    PRINT           reduce using rule 14 (estatuto -> asignacion .)
    WHILE           reduce using rule 14 (estatuto -> asignacion .)
    RCURLY          reduce using rule 14 (estatuto -> asignacion .)


state 29

    (7) c -> estatuto . c
    (7) c -> . estatuto c
    (8) c -> .
    (14) estatuto -> . asignacion
    (15) estatuto -> . condicion
    (16) estatuto -> . escritura
    (17) estatuto -> . ciclo
    (25) asignacion -> . ID g
    (61) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque r
    (64) escritura -> . PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON
    (67) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 8 (c -> .)
    ID              shift and go to state 34
    IF              shift and go to state 33
    PRINT           shift and go to state 32
    WHILE           shift and go to state 30

    c                              shift and go to state 42
    ciclo                          shift and go to state 27
    asignacion                     shift and go to state 28
    estatuto                       shift and go to state 29
    condicion                      shift and go to state 31
    escritura                      shift and go to state 35

state 30

    (67) ciclo -> WHILE . LPARENTHESIS expresion RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 43


state 31

    (15) estatuto -> condicion .

    ID              reduce using rule 15 (estatuto -> condicion .)
    IF              reduce using rule 15 (estatuto -> condicion .)
    PRINT           reduce using rule 15 (estatuto -> condicion .)
    WHILE           reduce using rule 15 (estatuto -> condicion .)
    RCURLY          reduce using rule 15 (estatuto -> condicion .)


state 32

    (64) escritura -> PRINT . LPARENTHESIS s RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 44


state 33

    (61) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS bloque r

    LPARENTHESIS    shift and go to state 45


state 34

    (25) asignacion -> ID . g
    (26) g -> . ASSIGN expresion
    (27) g -> . LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON

    ASSIGN          shift and go to state 47
    LBRACKET        shift and go to state 48

    g                              shift and go to state 46

state 35

    (16) estatuto -> escritura .

    ID              reduce using rule 16 (estatuto -> escritura .)
    IF              reduce using rule 16 (estatuto -> escritura .)
    PRINT           reduce using rule 16 (estatuto -> escritura .)
    WHILE           reduce using rule 16 (estatuto -> escritura .)
    RCURLY          reduce using rule 16 (estatuto -> escritura .)


state 36

    (1) programa -> PROGRAM ID SEMICOLON a b bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON a b bloque END .)


state 37

    (68) funcion -> tipo FUNC ID . LPARENTHESIS t RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 49


state 38

    (19) d -> e COLON tipo . SEMICOLON f

    SEMICOLON       shift and go to state 50


state 39

    (21) e -> ID LBRACKET RBRACKET . COMA e

    COMA            shift and go to state 51


state 40

    (22) e -> ID COMA e .

    COLON           reduce using rule 22 (e -> ID COMA e .)


state 41

    (6) bloque -> LCURLY c RCURLY .

    END             reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    ELSE            reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    ID              reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    IF              reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    PRINT           reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    WHILE           reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    RCURLY          reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    INTTYPE         reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    FLOATTYPE       reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    CHARTYPE        reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    BOOLTYPE        reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    STRINGTYPE      reduce using rule 6 (bloque -> LCURLY c RCURLY .)
    LCURLY          reduce using rule 6 (bloque -> LCURLY c RCURLY .)


state 42

    (7) c -> estatuto c .

    RCURLY          reduce using rule 7 (c -> estatuto c .)


state 43

    (67) ciclo -> WHILE LPARENTHESIS . expresion RPARENTHESIS bloque
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 59
    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 44

    (64) escritura -> PRINT LPARENTHESIS . s RPARENTHESIS SEMICOLON
    (65) s -> . expresion
    (66) s -> . QUOTE CTESTRING QUOTE
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    QUOTE           shift and go to state 67
    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 68
    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    s                              shift and go to state 69
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 45

    (61) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS bloque r
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 70
    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 46

    (25) asignacion -> ID g .

    ID              reduce using rule 25 (asignacion -> ID g .)
    IF              reduce using rule 25 (asignacion -> ID g .)
    PRINT           reduce using rule 25 (asignacion -> ID g .)
    WHILE           reduce using rule 25 (asignacion -> ID g .)
    RCURLY          reduce using rule 25 (asignacion -> ID g .)


state 47

    (26) g -> ASSIGN . expresion
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 71
    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 48

    (27) g -> LBRACKET . RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON

    RBRACKET        shift and go to state 72


state 49

    (68) funcion -> tipo FUNC ID LPARENTHESIS . t RPARENTHESIS bloque
    (69) t -> . argumentos
    (70) t -> .
    (71) argumentos -> . u
    (72) u -> . ID tipo
    (73) u -> . ID tipo COMA u

    RPARENTHESIS    reduce using rule 70 (t -> .)
    ID              shift and go to state 76

    argumentos                     shift and go to state 75
    u                              shift and go to state 73
    t                              shift and go to state 74

state 50

    (19) d -> e COLON tipo SEMICOLON . f
    (23) f -> . d
    (24) f -> .
    (19) d -> . e COLON tipo SEMICOLON f
    (20) e -> . ID
    (21) e -> . ID LBRACKET RBRACKET COMA e
    (22) e -> . ID COMA e

    INTTYPE         reduce using rule 24 (f -> .)
    FLOATTYPE       reduce using rule 24 (f -> .)
    CHARTYPE        reduce using rule 24 (f -> .)
    BOOLTYPE        reduce using rule 24 (f -> .)
    STRINGTYPE      reduce using rule 24 (f -> .)
    LCURLY          reduce using rule 24 (f -> .)
    ID              shift and go to state 18

    e                              shift and go to state 16
    d                              shift and go to state 77
    f                              shift and go to state 78

state 51

    (21) e -> ID LBRACKET RBRACKET COMA . e
    (20) e -> . ID
    (21) e -> . ID LBRACKET RBRACKET COMA e
    (22) e -> . ID COMA e

    ID              shift and go to state 18

    e                              shift and go to state 79

state 52

    (56) p -> CHAR .

    MULTIPLICATION  reduce using rule 56 (p -> CHAR .)
    DIVISION        reduce using rule 56 (p -> CHAR .)
    ADDITION        reduce using rule 56 (p -> CHAR .)
    SUBTRACTION     reduce using rule 56 (p -> CHAR .)
    RPARENTHESIS    reduce using rule 56 (p -> CHAR .)
    ID              reduce using rule 56 (p -> CHAR .)
    IF              reduce using rule 56 (p -> CHAR .)
    PRINT           reduce using rule 56 (p -> CHAR .)
    WHILE           reduce using rule 56 (p -> CHAR .)
    RCURLY          reduce using rule 56 (p -> CHAR .)
    COMA            reduce using rule 56 (p -> CHAR .)
    RBRACKET        reduce using rule 56 (p -> CHAR .)
    LESS            reduce using rule 56 (p -> CHAR .)
    GREATER         reduce using rule 56 (p -> CHAR .)
    LESSEQUAL       reduce using rule 56 (p -> CHAR .)
    GREATEREQUAL    reduce using rule 56 (p -> CHAR .)
    NOTEQUAL        reduce using rule 56 (p -> CHAR .)
    EQUAL           reduce using rule 56 (p -> CHAR .)


state 53

    (30) exp -> termino . i
    (31) i -> . j
    (32) i -> .
    (33) j -> . ADDITION exp
    (34) j -> . SUBTRACTION exp

    LESS            reduce using rule 32 (i -> .)
    GREATER         reduce using rule 32 (i -> .)
    LESSEQUAL       reduce using rule 32 (i -> .)
    GREATEREQUAL    reduce using rule 32 (i -> .)
    NOTEQUAL        reduce using rule 32 (i -> .)
    EQUAL           reduce using rule 32 (i -> .)
    RPARENTHESIS    reduce using rule 32 (i -> .)
    ID              reduce using rule 32 (i -> .)
    IF              reduce using rule 32 (i -> .)
    PRINT           reduce using rule 32 (i -> .)
    WHILE           reduce using rule 32 (i -> .)
    RCURLY          reduce using rule 32 (i -> .)
    COMA            reduce using rule 32 (i -> .)
    RBRACKET        reduce using rule 32 (i -> .)
    ADDITION        shift and go to state 82
    SUBTRACTION     shift and go to state 83

    i                              shift and go to state 80
    j                              shift and go to state 81

state 54

    (42) m -> varcte .

    MULTIPLICATION  reduce using rule 42 (m -> varcte .)
    DIVISION        reduce using rule 42 (m -> varcte .)
    ADDITION        reduce using rule 42 (m -> varcte .)
    SUBTRACTION     reduce using rule 42 (m -> varcte .)
    RPARENTHESIS    reduce using rule 42 (m -> varcte .)
    ID              reduce using rule 42 (m -> varcte .)
    IF              reduce using rule 42 (m -> varcte .)
    PRINT           reduce using rule 42 (m -> varcte .)
    WHILE           reduce using rule 42 (m -> varcte .)
    RCURLY          reduce using rule 42 (m -> varcte .)
    COMA            reduce using rule 42 (m -> varcte .)
    RBRACKET        reduce using rule 42 (m -> varcte .)
    LESS            reduce using rule 42 (m -> varcte .)
    GREATER         reduce using rule 42 (m -> varcte .)
    LESSEQUAL       reduce using rule 42 (m -> varcte .)
    GREATEREQUAL    reduce using rule 42 (m -> varcte .)
    NOTEQUAL        reduce using rule 42 (m -> varcte .)
    EQUAL           reduce using rule 42 (m -> varcte .)


state 55

    (35) termino -> factor . k
    (36) k -> . l
    (37) k -> .
    (38) l -> . MULTIPLICATION termino
    (39) l -> . DIVISION termino

    ADDITION        reduce using rule 37 (k -> .)
    SUBTRACTION     reduce using rule 37 (k -> .)
    LESS            reduce using rule 37 (k -> .)
    GREATER         reduce using rule 37 (k -> .)
    LESSEQUAL       reduce using rule 37 (k -> .)
    GREATEREQUAL    reduce using rule 37 (k -> .)
    NOTEQUAL        reduce using rule 37 (k -> .)
    EQUAL           reduce using rule 37 (k -> .)
    RPARENTHESIS    reduce using rule 37 (k -> .)
    ID              reduce using rule 37 (k -> .)
    IF              reduce using rule 37 (k -> .)
    PRINT           reduce using rule 37 (k -> .)
    WHILE           reduce using rule 37 (k -> .)
    RCURLY          reduce using rule 37 (k -> .)
    COMA            reduce using rule 37 (k -> .)
    RBRACKET        reduce using rule 37 (k -> .)
    MULTIPLICATION  shift and go to state 87
    DIVISION        shift and go to state 84

    k                              shift and go to state 85
    l                              shift and go to state 86

state 56

    (57) p -> STRING .

    MULTIPLICATION  reduce using rule 57 (p -> STRING .)
    DIVISION        reduce using rule 57 (p -> STRING .)
    ADDITION        reduce using rule 57 (p -> STRING .)
    SUBTRACTION     reduce using rule 57 (p -> STRING .)
    RPARENTHESIS    reduce using rule 57 (p -> STRING .)
    ID              reduce using rule 57 (p -> STRING .)
    IF              reduce using rule 57 (p -> STRING .)
    PRINT           reduce using rule 57 (p -> STRING .)
    WHILE           reduce using rule 57 (p -> STRING .)
    RCURLY          reduce using rule 57 (p -> STRING .)
    COMA            reduce using rule 57 (p -> STRING .)
    RBRACKET        reduce using rule 57 (p -> STRING .)
    LESS            reduce using rule 57 (p -> STRING .)
    GREATER         reduce using rule 57 (p -> STRING .)
    LESSEQUAL       reduce using rule 57 (p -> STRING .)
    GREATEREQUAL    reduce using rule 57 (p -> STRING .)
    NOTEQUAL        reduce using rule 57 (p -> STRING .)
    EQUAL           reduce using rule 57 (p -> STRING .)


state 57

    (43) n -> LPARENTHESIS . expresion RPARENTHESIS
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 88
    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 58

    (53) p -> ID . q
    (59) q -> . LBRACKET RBRACKET
    (60) q -> .

    LBRACKET        shift and go to state 90
    MULTIPLICATION  reduce using rule 60 (q -> .)
    DIVISION        reduce using rule 60 (q -> .)
    ADDITION        reduce using rule 60 (q -> .)
    SUBTRACTION     reduce using rule 60 (q -> .)
    LESS            reduce using rule 60 (q -> .)
    GREATER         reduce using rule 60 (q -> .)
    LESSEQUAL       reduce using rule 60 (q -> .)
    GREATEREQUAL    reduce using rule 60 (q -> .)
    NOTEQUAL        reduce using rule 60 (q -> .)
    EQUAL           reduce using rule 60 (q -> .)
    RPARENTHESIS    reduce using rule 60 (q -> .)
    ID              reduce using rule 60 (q -> .)
    IF              reduce using rule 60 (q -> .)
    PRINT           reduce using rule 60 (q -> .)
    WHILE           reduce using rule 60 (q -> .)
    RCURLY          reduce using rule 60 (q -> .)
    COMA            reduce using rule 60 (q -> .)
    RBRACKET        reduce using rule 60 (q -> .)

    q                              shift and go to state 89

state 59

    (67) ciclo -> WHILE LPARENTHESIS expresion . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 91


state 60

    (55) p -> FLOAT .

    MULTIPLICATION  reduce using rule 55 (p -> FLOAT .)
    DIVISION        reduce using rule 55 (p -> FLOAT .)
    ADDITION        reduce using rule 55 (p -> FLOAT .)
    SUBTRACTION     reduce using rule 55 (p -> FLOAT .)
    RPARENTHESIS    reduce using rule 55 (p -> FLOAT .)
    ID              reduce using rule 55 (p -> FLOAT .)
    IF              reduce using rule 55 (p -> FLOAT .)
    PRINT           reduce using rule 55 (p -> FLOAT .)
    WHILE           reduce using rule 55 (p -> FLOAT .)
    RCURLY          reduce using rule 55 (p -> FLOAT .)
    COMA            reduce using rule 55 (p -> FLOAT .)
    RBRACKET        reduce using rule 55 (p -> FLOAT .)
    LESS            reduce using rule 55 (p -> FLOAT .)
    GREATER         reduce using rule 55 (p -> FLOAT .)
    LESSEQUAL       reduce using rule 55 (p -> FLOAT .)
    GREATEREQUAL    reduce using rule 55 (p -> FLOAT .)
    NOTEQUAL        reduce using rule 55 (p -> FLOAT .)
    EQUAL           reduce using rule 55 (p -> FLOAT .)


state 61

    (40) factor -> m .

    MULTIPLICATION  reduce using rule 40 (factor -> m .)
    DIVISION        reduce using rule 40 (factor -> m .)
    ADDITION        reduce using rule 40 (factor -> m .)
    SUBTRACTION     reduce using rule 40 (factor -> m .)
    LESS            reduce using rule 40 (factor -> m .)
    GREATER         reduce using rule 40 (factor -> m .)
    LESSEQUAL       reduce using rule 40 (factor -> m .)
    GREATEREQUAL    reduce using rule 40 (factor -> m .)
    NOTEQUAL        reduce using rule 40 (factor -> m .)
    EQUAL           reduce using rule 40 (factor -> m .)
    COMA            reduce using rule 40 (factor -> m .)
    RBRACKET        reduce using rule 40 (factor -> m .)
    RPARENTHESIS    reduce using rule 40 (factor -> m .)
    ID              reduce using rule 40 (factor -> m .)
    IF              reduce using rule 40 (factor -> m .)
    PRINT           reduce using rule 40 (factor -> m .)
    WHILE           reduce using rule 40 (factor -> m .)
    RCURLY          reduce using rule 40 (factor -> m .)


state 62

    (41) factor -> n .

    MULTIPLICATION  reduce using rule 41 (factor -> n .)
    DIVISION        reduce using rule 41 (factor -> n .)
    ADDITION        reduce using rule 41 (factor -> n .)
    SUBTRACTION     reduce using rule 41 (factor -> n .)
    LESS            reduce using rule 41 (factor -> n .)
    GREATER         reduce using rule 41 (factor -> n .)
    LESSEQUAL       reduce using rule 41 (factor -> n .)
    GREATEREQUAL    reduce using rule 41 (factor -> n .)
    NOTEQUAL        reduce using rule 41 (factor -> n .)
    EQUAL           reduce using rule 41 (factor -> n .)
    COMA            reduce using rule 41 (factor -> n .)
    RBRACKET        reduce using rule 41 (factor -> n .)
    RPARENTHESIS    reduce using rule 41 (factor -> n .)
    ID              reduce using rule 41 (factor -> n .)
    IF              reduce using rule 41 (factor -> n .)
    PRINT           reduce using rule 41 (factor -> n .)
    WHILE           reduce using rule 41 (factor -> n .)
    RCURLY          reduce using rule 41 (factor -> n .)


state 63

    (52) varcte -> p .

    MULTIPLICATION  reduce using rule 52 (varcte -> p .)
    DIVISION        reduce using rule 52 (varcte -> p .)
    ADDITION        reduce using rule 52 (varcte -> p .)
    SUBTRACTION     reduce using rule 52 (varcte -> p .)
    LESS            reduce using rule 52 (varcte -> p .)
    GREATER         reduce using rule 52 (varcte -> p .)
    LESSEQUAL       reduce using rule 52 (varcte -> p .)
    GREATEREQUAL    reduce using rule 52 (varcte -> p .)
    NOTEQUAL        reduce using rule 52 (varcte -> p .)
    EQUAL           reduce using rule 52 (varcte -> p .)
    COMA            reduce using rule 52 (varcte -> p .)
    RBRACKET        reduce using rule 52 (varcte -> p .)
    RPARENTHESIS    reduce using rule 52 (varcte -> p .)
    ID              reduce using rule 52 (varcte -> p .)
    IF              reduce using rule 52 (varcte -> p .)
    PRINT           reduce using rule 52 (varcte -> p .)
    WHILE           reduce using rule 52 (varcte -> p .)
    RCURLY          reduce using rule 52 (varcte -> p .)


state 64

    (58) p -> BOOL .

    MULTIPLICATION  reduce using rule 58 (p -> BOOL .)
    DIVISION        reduce using rule 58 (p -> BOOL .)
    ADDITION        reduce using rule 58 (p -> BOOL .)
    SUBTRACTION     reduce using rule 58 (p -> BOOL .)
    RPARENTHESIS    reduce using rule 58 (p -> BOOL .)
    ID              reduce using rule 58 (p -> BOOL .)
    IF              reduce using rule 58 (p -> BOOL .)
    PRINT           reduce using rule 58 (p -> BOOL .)
    WHILE           reduce using rule 58 (p -> BOOL .)
    RCURLY          reduce using rule 58 (p -> BOOL .)
    COMA            reduce using rule 58 (p -> BOOL .)
    RBRACKET        reduce using rule 58 (p -> BOOL .)
    LESS            reduce using rule 58 (p -> BOOL .)
    GREATER         reduce using rule 58 (p -> BOOL .)
    LESSEQUAL       reduce using rule 58 (p -> BOOL .)
    GREATEREQUAL    reduce using rule 58 (p -> BOOL .)
    NOTEQUAL        reduce using rule 58 (p -> BOOL .)
    EQUAL           reduce using rule 58 (p -> BOOL .)


state 65

    (44) expresion -> exp . o
    (45) o -> . LESS exp
    (46) o -> . GREATER exp
    (47) o -> . LESSEQUAL exp
    (48) o -> . GREATEREQUAL exp
    (49) o -> . NOTEQUAL exp
    (50) o -> . EQUAL exp
    (51) o -> .

    LESS            shift and go to state 95
    GREATER         shift and go to state 94
    LESSEQUAL       shift and go to state 98
    GREATEREQUAL    shift and go to state 93
    NOTEQUAL        shift and go to state 92
    EQUAL           shift and go to state 96
    RPARENTHESIS    reduce using rule 51 (o -> .)
    ID              reduce using rule 51 (o -> .)
    IF              reduce using rule 51 (o -> .)
    PRINT           reduce using rule 51 (o -> .)
    WHILE           reduce using rule 51 (o -> .)
    RCURLY          reduce using rule 51 (o -> .)
    COMA            reduce using rule 51 (o -> .)
    RBRACKET        reduce using rule 51 (o -> .)

    o                              shift and go to state 97

state 66

    (54) p -> INT .

    MULTIPLICATION  reduce using rule 54 (p -> INT .)
    DIVISION        reduce using rule 54 (p -> INT .)
    ADDITION        reduce using rule 54 (p -> INT .)
    SUBTRACTION     reduce using rule 54 (p -> INT .)
    RPARENTHESIS    reduce using rule 54 (p -> INT .)
    ID              reduce using rule 54 (p -> INT .)
    IF              reduce using rule 54 (p -> INT .)
    PRINT           reduce using rule 54 (p -> INT .)
    WHILE           reduce using rule 54 (p -> INT .)
    RCURLY          reduce using rule 54 (p -> INT .)
    COMA            reduce using rule 54 (p -> INT .)
    RBRACKET        reduce using rule 54 (p -> INT .)
    LESS            reduce using rule 54 (p -> INT .)
    GREATER         reduce using rule 54 (p -> INT .)
    LESSEQUAL       reduce using rule 54 (p -> INT .)
    GREATEREQUAL    reduce using rule 54 (p -> INT .)
    NOTEQUAL        reduce using rule 54 (p -> INT .)
    EQUAL           reduce using rule 54 (p -> INT .)


state 67

    (66) s -> QUOTE . CTESTRING QUOTE

    CTESTRING       shift and go to state 99


state 68

    (65) s -> expresion .

    RPARENTHESIS    reduce using rule 65 (s -> expresion .)


state 69

    (64) escritura -> PRINT LPARENTHESIS s . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 100


state 70

    (61) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS bloque r

    RPARENTHESIS    shift and go to state 101


state 71

    (26) g -> ASSIGN expresion .

    ID              reduce using rule 26 (g -> ASSIGN expresion .)
    IF              reduce using rule 26 (g -> ASSIGN expresion .)
    PRINT           reduce using rule 26 (g -> ASSIGN expresion .)
    WHILE           reduce using rule 26 (g -> ASSIGN expresion .)
    RCURLY          reduce using rule 26 (g -> ASSIGN expresion .)


state 72

    (27) g -> LBRACKET RBRACKET . ASSIGN LBRACKET h RBRACKET SEMICOLON

    ASSIGN          shift and go to state 102


state 73

    (71) argumentos -> u .

    RPARENTHESIS    reduce using rule 71 (argumentos -> u .)


state 74

    (68) funcion -> tipo FUNC ID LPARENTHESIS t . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 103


state 75

    (69) t -> argumentos .

    RPARENTHESIS    reduce using rule 69 (t -> argumentos .)


state 76

    (72) u -> ID . tipo
    (73) u -> ID . tipo COMA u
    (9) tipo -> . INTTYPE
    (10) tipo -> . FLOATTYPE
    (11) tipo -> . CHARTYPE
    (12) tipo -> . BOOLTYPE
    (13) tipo -> . STRINGTYPE

    INTTYPE         shift and go to state 14
    FLOATTYPE       shift and go to state 11
    CHARTYPE        shift and go to state 13
    BOOLTYPE        shift and go to state 8
    STRINGTYPE      shift and go to state 12

    tipo                           shift and go to state 104

state 77

    (23) f -> d .

    INTTYPE         reduce using rule 23 (f -> d .)
    FLOATTYPE       reduce using rule 23 (f -> d .)
    CHARTYPE        reduce using rule 23 (f -> d .)
    BOOLTYPE        reduce using rule 23 (f -> d .)
    STRINGTYPE      reduce using rule 23 (f -> d .)
    LCURLY          reduce using rule 23 (f -> d .)


state 78

    (19) d -> e COLON tipo SEMICOLON f .

    INTTYPE         reduce using rule 19 (d -> e COLON tipo SEMICOLON f .)
    FLOATTYPE       reduce using rule 19 (d -> e COLON tipo SEMICOLON f .)
    CHARTYPE        reduce using rule 19 (d -> e COLON tipo SEMICOLON f .)
    BOOLTYPE        reduce using rule 19 (d -> e COLON tipo SEMICOLON f .)
    STRINGTYPE      reduce using rule 19 (d -> e COLON tipo SEMICOLON f .)
    LCURLY          reduce using rule 19 (d -> e COLON tipo SEMICOLON f .)


state 79

    (21) e -> ID LBRACKET RBRACKET COMA e .

    COLON           reduce using rule 21 (e -> ID LBRACKET RBRACKET COMA e .)


state 80

    (30) exp -> termino i .

    LESS            reduce using rule 30 (exp -> termino i .)
    GREATER         reduce using rule 30 (exp -> termino i .)
    LESSEQUAL       reduce using rule 30 (exp -> termino i .)
    GREATEREQUAL    reduce using rule 30 (exp -> termino i .)
    NOTEQUAL        reduce using rule 30 (exp -> termino i .)
    EQUAL           reduce using rule 30 (exp -> termino i .)
    COMA            reduce using rule 30 (exp -> termino i .)
    RBRACKET        reduce using rule 30 (exp -> termino i .)
    RPARENTHESIS    reduce using rule 30 (exp -> termino i .)
    ID              reduce using rule 30 (exp -> termino i .)
    IF              reduce using rule 30 (exp -> termino i .)
    PRINT           reduce using rule 30 (exp -> termino i .)
    WHILE           reduce using rule 30 (exp -> termino i .)
    RCURLY          reduce using rule 30 (exp -> termino i .)


state 81

    (31) i -> j .

    LESS            reduce using rule 31 (i -> j .)
    GREATER         reduce using rule 31 (i -> j .)
    LESSEQUAL       reduce using rule 31 (i -> j .)
    GREATEREQUAL    reduce using rule 31 (i -> j .)
    NOTEQUAL        reduce using rule 31 (i -> j .)
    EQUAL           reduce using rule 31 (i -> j .)
    RPARENTHESIS    reduce using rule 31 (i -> j .)
    ID              reduce using rule 31 (i -> j .)
    IF              reduce using rule 31 (i -> j .)
    PRINT           reduce using rule 31 (i -> j .)
    WHILE           reduce using rule 31 (i -> j .)
    RCURLY          reduce using rule 31 (i -> j .)
    COMA            reduce using rule 31 (i -> j .)
    RBRACKET        reduce using rule 31 (i -> j .)


state 82

    (33) j -> ADDITION . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 105
    factor                         shift and go to state 55

state 83

    (34) j -> SUBTRACTION . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 106
    factor                         shift and go to state 55

state 84

    (39) l -> DIVISION . termino
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 107
    factor                         shift and go to state 55

state 85

    (35) termino -> factor k .

    ADDITION        reduce using rule 35 (termino -> factor k .)
    SUBTRACTION     reduce using rule 35 (termino -> factor k .)
    LESS            reduce using rule 35 (termino -> factor k .)
    GREATER         reduce using rule 35 (termino -> factor k .)
    LESSEQUAL       reduce using rule 35 (termino -> factor k .)
    GREATEREQUAL    reduce using rule 35 (termino -> factor k .)
    NOTEQUAL        reduce using rule 35 (termino -> factor k .)
    EQUAL           reduce using rule 35 (termino -> factor k .)
    RPARENTHESIS    reduce using rule 35 (termino -> factor k .)
    ID              reduce using rule 35 (termino -> factor k .)
    IF              reduce using rule 35 (termino -> factor k .)
    PRINT           reduce using rule 35 (termino -> factor k .)
    WHILE           reduce using rule 35 (termino -> factor k .)
    RCURLY          reduce using rule 35 (termino -> factor k .)
    COMA            reduce using rule 35 (termino -> factor k .)
    RBRACKET        reduce using rule 35 (termino -> factor k .)


state 86

    (36) k -> l .

    ADDITION        reduce using rule 36 (k -> l .)
    SUBTRACTION     reduce using rule 36 (k -> l .)
    LESS            reduce using rule 36 (k -> l .)
    GREATER         reduce using rule 36 (k -> l .)
    LESSEQUAL       reduce using rule 36 (k -> l .)
    GREATEREQUAL    reduce using rule 36 (k -> l .)
    NOTEQUAL        reduce using rule 36 (k -> l .)
    EQUAL           reduce using rule 36 (k -> l .)
    RPARENTHESIS    reduce using rule 36 (k -> l .)
    ID              reduce using rule 36 (k -> l .)
    IF              reduce using rule 36 (k -> l .)
    PRINT           reduce using rule 36 (k -> l .)
    WHILE           reduce using rule 36 (k -> l .)
    RCURLY          reduce using rule 36 (k -> l .)
    COMA            reduce using rule 36 (k -> l .)
    RBRACKET        reduce using rule 36 (k -> l .)


state 87

    (38) l -> MULTIPLICATION . termino
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 108
    factor                         shift and go to state 55

state 88

    (43) n -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 109


state 89

    (53) p -> ID q .

    MULTIPLICATION  reduce using rule 53 (p -> ID q .)
    DIVISION        reduce using rule 53 (p -> ID q .)
    ADDITION        reduce using rule 53 (p -> ID q .)
    SUBTRACTION     reduce using rule 53 (p -> ID q .)
    RPARENTHESIS    reduce using rule 53 (p -> ID q .)
    ID              reduce using rule 53 (p -> ID q .)
    IF              reduce using rule 53 (p -> ID q .)
    PRINT           reduce using rule 53 (p -> ID q .)
    WHILE           reduce using rule 53 (p -> ID q .)
    RCURLY          reduce using rule 53 (p -> ID q .)
    COMA            reduce using rule 53 (p -> ID q .)
    RBRACKET        reduce using rule 53 (p -> ID q .)
    LESS            reduce using rule 53 (p -> ID q .)
    GREATER         reduce using rule 53 (p -> ID q .)
    LESSEQUAL       reduce using rule 53 (p -> ID q .)
    GREATEREQUAL    reduce using rule 53 (p -> ID q .)
    NOTEQUAL        reduce using rule 53 (p -> ID q .)
    EQUAL           reduce using rule 53 (p -> ID q .)


state 90

    (59) q -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 110


state 91

    (67) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS . bloque
    (6) bloque -> . LCURLY c RCURLY

    LCURLY          shift and go to state 19

    bloque                         shift and go to state 111

state 92

    (49) o -> NOTEQUAL . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 112
    factor                         shift and go to state 55

state 93

    (48) o -> GREATEREQUAL . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 113
    factor                         shift and go to state 55

state 94

    (46) o -> GREATER . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 114
    factor                         shift and go to state 55

state 95

    (45) o -> LESS . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 115
    factor                         shift and go to state 55

state 96

    (50) o -> EQUAL . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 116
    factor                         shift and go to state 55

state 97

    (44) expresion -> exp o .

    ID              reduce using rule 44 (expresion -> exp o .)
    IF              reduce using rule 44 (expresion -> exp o .)
    PRINT           reduce using rule 44 (expresion -> exp o .)
    WHILE           reduce using rule 44 (expresion -> exp o .)
    RCURLY          reduce using rule 44 (expresion -> exp o .)
    COMA            reduce using rule 44 (expresion -> exp o .)
    RBRACKET        reduce using rule 44 (expresion -> exp o .)
    RPARENTHESIS    reduce using rule 44 (expresion -> exp o .)


state 98

    (47) o -> LESSEQUAL . exp
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    varcte                         shift and go to state 54
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 117
    factor                         shift and go to state 55

state 99

    (66) s -> QUOTE CTESTRING . QUOTE

    QUOTE           shift and go to state 118


state 100

    (64) escritura -> PRINT LPARENTHESIS s RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 119


state 101

    (61) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . bloque r
    (6) bloque -> . LCURLY c RCURLY

    LCURLY          shift and go to state 19

    bloque                         shift and go to state 120

state 102

    (27) g -> LBRACKET RBRACKET ASSIGN . LBRACKET h RBRACKET SEMICOLON

    LBRACKET        shift and go to state 121


state 103

    (68) funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS . bloque
    (6) bloque -> . LCURLY c RCURLY

    LCURLY          shift and go to state 19

    bloque                         shift and go to state 122

state 104

    (72) u -> ID tipo .
    (73) u -> ID tipo . COMA u

    RPARENTHESIS    reduce using rule 72 (u -> ID tipo .)
    COMA            shift and go to state 123


state 105

    (33) j -> ADDITION exp .

    LESS            reduce using rule 33 (j -> ADDITION exp .)
    GREATER         reduce using rule 33 (j -> ADDITION exp .)
    LESSEQUAL       reduce using rule 33 (j -> ADDITION exp .)
    GREATEREQUAL    reduce using rule 33 (j -> ADDITION exp .)
    NOTEQUAL        reduce using rule 33 (j -> ADDITION exp .)
    EQUAL           reduce using rule 33 (j -> ADDITION exp .)
    RPARENTHESIS    reduce using rule 33 (j -> ADDITION exp .)
    ID              reduce using rule 33 (j -> ADDITION exp .)
    IF              reduce using rule 33 (j -> ADDITION exp .)
    PRINT           reduce using rule 33 (j -> ADDITION exp .)
    WHILE           reduce using rule 33 (j -> ADDITION exp .)
    RCURLY          reduce using rule 33 (j -> ADDITION exp .)
    COMA            reduce using rule 33 (j -> ADDITION exp .)
    RBRACKET        reduce using rule 33 (j -> ADDITION exp .)


state 106

    (34) j -> SUBTRACTION exp .

    LESS            reduce using rule 34 (j -> SUBTRACTION exp .)
    GREATER         reduce using rule 34 (j -> SUBTRACTION exp .)
    LESSEQUAL       reduce using rule 34 (j -> SUBTRACTION exp .)
    GREATEREQUAL    reduce using rule 34 (j -> SUBTRACTION exp .)
    NOTEQUAL        reduce using rule 34 (j -> SUBTRACTION exp .)
    EQUAL           reduce using rule 34 (j -> SUBTRACTION exp .)
    RPARENTHESIS    reduce using rule 34 (j -> SUBTRACTION exp .)
    ID              reduce using rule 34 (j -> SUBTRACTION exp .)
    IF              reduce using rule 34 (j -> SUBTRACTION exp .)
    PRINT           reduce using rule 34 (j -> SUBTRACTION exp .)
    WHILE           reduce using rule 34 (j -> SUBTRACTION exp .)
    RCURLY          reduce using rule 34 (j -> SUBTRACTION exp .)
    COMA            reduce using rule 34 (j -> SUBTRACTION exp .)
    RBRACKET        reduce using rule 34 (j -> SUBTRACTION exp .)


state 107

    (39) l -> DIVISION termino .

    ADDITION        reduce using rule 39 (l -> DIVISION termino .)
    SUBTRACTION     reduce using rule 39 (l -> DIVISION termino .)
    LESS            reduce using rule 39 (l -> DIVISION termino .)
    GREATER         reduce using rule 39 (l -> DIVISION termino .)
    LESSEQUAL       reduce using rule 39 (l -> DIVISION termino .)
    GREATEREQUAL    reduce using rule 39 (l -> DIVISION termino .)
    NOTEQUAL        reduce using rule 39 (l -> DIVISION termino .)
    EQUAL           reduce using rule 39 (l -> DIVISION termino .)
    RPARENTHESIS    reduce using rule 39 (l -> DIVISION termino .)
    ID              reduce using rule 39 (l -> DIVISION termino .)
    IF              reduce using rule 39 (l -> DIVISION termino .)
    PRINT           reduce using rule 39 (l -> DIVISION termino .)
    WHILE           reduce using rule 39 (l -> DIVISION termino .)
    RCURLY          reduce using rule 39 (l -> DIVISION termino .)
    COMA            reduce using rule 39 (l -> DIVISION termino .)
    RBRACKET        reduce using rule 39 (l -> DIVISION termino .)


state 108

    (38) l -> MULTIPLICATION termino .

    ADDITION        reduce using rule 38 (l -> MULTIPLICATION termino .)
    SUBTRACTION     reduce using rule 38 (l -> MULTIPLICATION termino .)
    LESS            reduce using rule 38 (l -> MULTIPLICATION termino .)
    GREATER         reduce using rule 38 (l -> MULTIPLICATION termino .)
    LESSEQUAL       reduce using rule 38 (l -> MULTIPLICATION termino .)
    GREATEREQUAL    reduce using rule 38 (l -> MULTIPLICATION termino .)
    NOTEQUAL        reduce using rule 38 (l -> MULTIPLICATION termino .)
    EQUAL           reduce using rule 38 (l -> MULTIPLICATION termino .)
    RPARENTHESIS    reduce using rule 38 (l -> MULTIPLICATION termino .)
    ID              reduce using rule 38 (l -> MULTIPLICATION termino .)
    IF              reduce using rule 38 (l -> MULTIPLICATION termino .)
    PRINT           reduce using rule 38 (l -> MULTIPLICATION termino .)
    WHILE           reduce using rule 38 (l -> MULTIPLICATION termino .)
    RCURLY          reduce using rule 38 (l -> MULTIPLICATION termino .)
    COMA            reduce using rule 38 (l -> MULTIPLICATION termino .)
    RBRACKET        reduce using rule 38 (l -> MULTIPLICATION termino .)


state 109

    (43) n -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    ADDITION        reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    SUBTRACTION     reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    LESS            reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    GREATER         reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    LESSEQUAL       reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    GREATEREQUAL    reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    NOTEQUAL        reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    EQUAL           reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    ID              reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    IF              reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    PRINT           reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    WHILE           reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    RCURLY          reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    COMA            reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)
    RBRACKET        reduce using rule 43 (n -> LPARENTHESIS expresion RPARENTHESIS .)


state 110

    (59) q -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 59 (q -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 59 (q -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 59 (q -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 59 (q -> LBRACKET RBRACKET .)
    LESS            reduce using rule 59 (q -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 59 (q -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 59 (q -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 59 (q -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 59 (q -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 59 (q -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 59 (q -> LBRACKET RBRACKET .)
    ID              reduce using rule 59 (q -> LBRACKET RBRACKET .)
    IF              reduce using rule 59 (q -> LBRACKET RBRACKET .)
    PRINT           reduce using rule 59 (q -> LBRACKET RBRACKET .)
    WHILE           reduce using rule 59 (q -> LBRACKET RBRACKET .)
    RCURLY          reduce using rule 59 (q -> LBRACKET RBRACKET .)
    COMA            reduce using rule 59 (q -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 59 (q -> LBRACKET RBRACKET .)


state 111

    (67) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .

    ID              reduce using rule 67 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    IF              reduce using rule 67 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    PRINT           reduce using rule 67 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    WHILE           reduce using rule 67 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RCURLY          reduce using rule 67 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)


state 112

    (49) o -> NOTEQUAL exp .

    RPARENTHESIS    reduce using rule 49 (o -> NOTEQUAL exp .)
    ID              reduce using rule 49 (o -> NOTEQUAL exp .)
    IF              reduce using rule 49 (o -> NOTEQUAL exp .)
    PRINT           reduce using rule 49 (o -> NOTEQUAL exp .)
    WHILE           reduce using rule 49 (o -> NOTEQUAL exp .)
    RCURLY          reduce using rule 49 (o -> NOTEQUAL exp .)
    COMA            reduce using rule 49 (o -> NOTEQUAL exp .)
    RBRACKET        reduce using rule 49 (o -> NOTEQUAL exp .)


state 113

    (48) o -> GREATEREQUAL exp .

    RPARENTHESIS    reduce using rule 48 (o -> GREATEREQUAL exp .)
    ID              reduce using rule 48 (o -> GREATEREQUAL exp .)
    IF              reduce using rule 48 (o -> GREATEREQUAL exp .)
    PRINT           reduce using rule 48 (o -> GREATEREQUAL exp .)
    WHILE           reduce using rule 48 (o -> GREATEREQUAL exp .)
    RCURLY          reduce using rule 48 (o -> GREATEREQUAL exp .)
    COMA            reduce using rule 48 (o -> GREATEREQUAL exp .)
    RBRACKET        reduce using rule 48 (o -> GREATEREQUAL exp .)


state 114

    (46) o -> GREATER exp .

    RPARENTHESIS    reduce using rule 46 (o -> GREATER exp .)
    ID              reduce using rule 46 (o -> GREATER exp .)
    IF              reduce using rule 46 (o -> GREATER exp .)
    PRINT           reduce using rule 46 (o -> GREATER exp .)
    WHILE           reduce using rule 46 (o -> GREATER exp .)
    RCURLY          reduce using rule 46 (o -> GREATER exp .)
    COMA            reduce using rule 46 (o -> GREATER exp .)
    RBRACKET        reduce using rule 46 (o -> GREATER exp .)


state 115

    (45) o -> LESS exp .

    RPARENTHESIS    reduce using rule 45 (o -> LESS exp .)
    ID              reduce using rule 45 (o -> LESS exp .)
    IF              reduce using rule 45 (o -> LESS exp .)
    PRINT           reduce using rule 45 (o -> LESS exp .)
    WHILE           reduce using rule 45 (o -> LESS exp .)
    RCURLY          reduce using rule 45 (o -> LESS exp .)
    COMA            reduce using rule 45 (o -> LESS exp .)
    RBRACKET        reduce using rule 45 (o -> LESS exp .)


state 116

    (50) o -> EQUAL exp .

    RPARENTHESIS    reduce using rule 50 (o -> EQUAL exp .)
    ID              reduce using rule 50 (o -> EQUAL exp .)
    IF              reduce using rule 50 (o -> EQUAL exp .)
    PRINT           reduce using rule 50 (o -> EQUAL exp .)
    WHILE           reduce using rule 50 (o -> EQUAL exp .)
    RCURLY          reduce using rule 50 (o -> EQUAL exp .)
    COMA            reduce using rule 50 (o -> EQUAL exp .)
    RBRACKET        reduce using rule 50 (o -> EQUAL exp .)


state 117

    (47) o -> LESSEQUAL exp .

    RPARENTHESIS    reduce using rule 47 (o -> LESSEQUAL exp .)
    ID              reduce using rule 47 (o -> LESSEQUAL exp .)
    IF              reduce using rule 47 (o -> LESSEQUAL exp .)
    PRINT           reduce using rule 47 (o -> LESSEQUAL exp .)
    WHILE           reduce using rule 47 (o -> LESSEQUAL exp .)
    RCURLY          reduce using rule 47 (o -> LESSEQUAL exp .)
    COMA            reduce using rule 47 (o -> LESSEQUAL exp .)
    RBRACKET        reduce using rule 47 (o -> LESSEQUAL exp .)


state 118

    (66) s -> QUOTE CTESTRING QUOTE .

    RPARENTHESIS    reduce using rule 66 (s -> QUOTE CTESTRING QUOTE .)


state 119

    (64) escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON .

    ID              reduce using rule 64 (escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 64 (escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 64 (escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 64 (escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 64 (escritura -> PRINT LPARENTHESIS s RPARENTHESIS SEMICOLON .)


state 120

    (61) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque . r
    (62) r -> . ELSE bloque
    (63) r -> .

    ELSE            shift and go to state 124
    ID              reduce using rule 63 (r -> .)
    IF              reduce using rule 63 (r -> .)
    PRINT           reduce using rule 63 (r -> .)
    WHILE           reduce using rule 63 (r -> .)
    RCURLY          reduce using rule 63 (r -> .)

    r                              shift and go to state 125

state 121

    (27) g -> LBRACKET RBRACKET ASSIGN LBRACKET . h RBRACKET SEMICOLON
    (28) h -> . expresion
    (29) h -> . expresion COMA h
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 126
    varcte                         shift and go to state 54
    h                              shift and go to state 127
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 122

    (68) funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .

    INTTYPE         reduce using rule 68 (funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .)
    FLOATTYPE       reduce using rule 68 (funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .)
    CHARTYPE        reduce using rule 68 (funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .)
    BOOLTYPE        reduce using rule 68 (funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .)
    STRINGTYPE      reduce using rule 68 (funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .)
    LCURLY          reduce using rule 68 (funcion -> tipo FUNC ID LPARENTHESIS t RPARENTHESIS bloque .)


state 123

    (73) u -> ID tipo COMA . u
    (72) u -> . ID tipo
    (73) u -> . ID tipo COMA u

    ID              shift and go to state 76

    u                              shift and go to state 128

state 124

    (62) r -> ELSE . bloque
    (6) bloque -> . LCURLY c RCURLY

    LCURLY          shift and go to state 19

    bloque                         shift and go to state 129

state 125

    (61) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r .

    ID              reduce using rule 61 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r .)
    IF              reduce using rule 61 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r .)
    PRINT           reduce using rule 61 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r .)
    WHILE           reduce using rule 61 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r .)
    RCURLY          reduce using rule 61 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque r .)


state 126

    (28) h -> expresion .
    (29) h -> expresion . COMA h

    RBRACKET        reduce using rule 28 (h -> expresion .)
    COMA            shift and go to state 130


state 127

    (27) g -> LBRACKET RBRACKET ASSIGN LBRACKET h . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 131


state 128

    (73) u -> ID tipo COMA u .

    RPARENTHESIS    reduce using rule 73 (u -> ID tipo COMA u .)


state 129

    (62) r -> ELSE bloque .

    ID              reduce using rule 62 (r -> ELSE bloque .)
    IF              reduce using rule 62 (r -> ELSE bloque .)
    PRINT           reduce using rule 62 (r -> ELSE bloque .)
    WHILE           reduce using rule 62 (r -> ELSE bloque .)
    RCURLY          reduce using rule 62 (r -> ELSE bloque .)


state 130

    (29) h -> expresion COMA . h
    (28) h -> . expresion
    (29) h -> . expresion COMA h
    (44) expresion -> . exp o
    (30) exp -> . termino i
    (35) termino -> . factor k
    (40) factor -> . m
    (41) factor -> . n
    (42) m -> . varcte
    (43) n -> . LPARENTHESIS expresion RPARENTHESIS
    (52) varcte -> . p
    (53) p -> . ID q
    (54) p -> . INT
    (55) p -> . FLOAT
    (56) p -> . CHAR
    (57) p -> . STRING
    (58) p -> . BOOL

    LPARENTHESIS    shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 66
    FLOAT           shift and go to state 60
    CHAR            shift and go to state 52
    STRING          shift and go to state 56
    BOOL            shift and go to state 64

    expresion                      shift and go to state 126
    varcte                         shift and go to state 54
    h                              shift and go to state 132
    m                              shift and go to state 61
    n                              shift and go to state 62
    p                              shift and go to state 63
    termino                        shift and go to state 53
    exp                            shift and go to state 65
    factor                         shift and go to state 55

state 131

    (27) g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 133


state 132

    (29) h -> expresion COMA h .

    RBRACKET        reduce using rule 29 (h -> expresion COMA h .)


state 133

    (27) g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON .

    ID              reduce using rule 27 (g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON .)
    IF              reduce using rule 27 (g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON .)
    PRINT           reduce using rule 27 (g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON .)
    WHILE           reduce using rule 27 (g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 27 (g -> LBRACKET RBRACKET ASSIGN LBRACKET h RBRACKET SEMICOLON .)

