Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     createProcDir -> <empty>
Rule 3     addProcDir -> <empty>
Rule 4     addMainProc -> <empty>
Rule 5     programa_var_loop -> variable programa_var_loop
Rule 6     programa_var_loop -> <empty>
Rule 7     programa_func_loop -> funcion programa_func_loop
Rule 8     programa_func_loop -> <empty>
Rule 9     bloque -> LCURLY bloque_est_loop RCURLY
Rule 10    bloque_est_loop -> estatuto bloque_est_loop
Rule 11    bloque_est_loop -> <empty>
Rule 12    tipo -> INTTYPE
Rule 13    tipo -> FLOATTYPE
Rule 14    tipo -> CHARTYPE
Rule 15    tipo -> BOOLTYPE
Rule 16    tipo -> STRINGTYPE
Rule 17    tipo -> VOIDTYPE
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> escritura
Rule 21    estatuto -> regreso
Rule 22    estatuto -> ciclo
Rule 23    regreso -> RETURN exp SEMICOLON
Rule 24    variable -> VAR createVarDir variable_loop
Rule 25    createVarDir -> <empty>
Rule 26    variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop
Rule 27    addType -> <empty>
Rule 28    variable_id_loop -> ID addVarDir
Rule 29    variable_id_loop -> ID addVarDir LBRACKET RBRACKET COMA variable_id_loop
Rule 30    variable_id_loop -> ID addVarDir LBRACKET RBRACKET
Rule 31    variable_id_loop -> ID addVarDir COMA variable_id_loop
Rule 32    addVarDir -> <empty>
Rule 33    variable_end_loop -> variable_loop
Rule 34    variable_end_loop -> <empty>
Rule 35    asignacion -> ID asignacion_option
Rule 36    asignacion_option -> ASSIGN expresion SEMICOLON
Rule 37    asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 38    asignacion_type -> INT
Rule 39    asignacion_type -> FLOAT
Rule 40    asignacion_type -> INT COMA asignacion_type
Rule 41    asignacion_type -> FLOAT COMA asignacion_type
Rule 42    exp -> termino exp_loop
Rule 43    exp_loop -> exp_type_loop
Rule 44    exp_loop -> <empty>
Rule 45    exp_type_loop -> ADDITION exp
Rule 46    exp_type_loop -> SUBTRACTION exp
Rule 47    termino -> factor termino_loop
Rule 48    termino_loop -> termino_type_loop
Rule 49    termino_loop -> <empty>
Rule 50    termino_type_loop -> MULTIPLICATION termino
Rule 51    termino_type_loop -> DIVISION termino
Rule 52    factor -> factor_var
Rule 53    factor -> factor_exp
Rule 54    factor_var -> varcte
Rule 55    factor_exp -> LPARENTHESIS expresion RPARENTHESIS
Rule 56    expresion -> nuevaexp expresion_option expresion_loop
Rule 57    expresion_option -> AND nuevaexp
Rule 58    expresion_option -> OR nuevaexp
Rule 59    expresion_option -> <empty>
Rule 60    expresion_loop -> expresion
Rule 61    expresion_loop -> <empty>
Rule 62    nuevaexp -> exp nuevaexp_type
Rule 63    nuevaexp_type -> LESS exp
Rule 64    nuevaexp_type -> GREATER exp
Rule 65    nuevaexp_type -> LESSEQUAL exp
Rule 66    nuevaexp_type -> GREATEREQUAL exp
Rule 67    nuevaexp_type -> NOTEQUAL exp
Rule 68    nuevaexp_type -> EQUAL exp
Rule 69    nuevaexp_type -> <empty>
Rule 70    varcte -> varcte_type
Rule 71    varcte_type -> ID varcte_arr
Rule 72    varcte_type -> INT
Rule 73    varcte_type -> FLOAT
Rule 74    varcte_type -> CHAR
Rule 75    varcte_type -> STRING
Rule 76    varcte_type -> BOOL
Rule 77    varcte_arr -> LBRACKET RBRACKET
Rule 78    varcte_arr -> <empty>
Rule 79    condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
Rule 80    condicion_option -> ELSE bloque
Rule 81    condicion_option -> <empty>
Rule 82    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 83    escritura_type -> expresion
Rule 84    escritura_type -> QUOTE CTESTRING QUOTE
Rule 85    ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque
Rule 86    funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque
Rule 87    addProcDirFunc -> <empty>
Rule 88    funcion_option -> argumentos
Rule 89    funcion_option -> <empty>
Rule 90    argumentos -> ID addVarDirFunc COLON tipo addTypeFunc argumentos_loop
Rule 91    argumentos_loop -> COMA argumentos
Rule 92    argumentos_loop -> <empty>
Rule 93    addVarDirFunc -> <empty>
Rule 94    addTypeFunc -> <empty>

Terminals, with rules where they appear

ADDITION             : 45
AND                  : 57
ASSIGN               : 36 37
BOOL                 : 76
BOOLTYPE             : 15
CHAR                 : 74
CHARTYPE             : 14
COLON                : 26 90
COMA                 : 29 31 40 41 91
CTESTRING            : 84
DIVISION             : 51
ELSE                 : 80
END                  : 1
EQUAL                : 68
FLOAT                : 39 41 73
FLOATTYPE            : 13
FUNC                 : 86
GREATER              : 64
GREATEREQUAL         : 66
ID                   : 1 28 29 30 31 35 71 86 90
IF                   : 79
INT                  : 37 38 40 72
INTTYPE              : 12
LBRACKET             : 29 30 37 37 77
LCURLY               : 9
LESS                 : 63
LESSEQUAL            : 65
LPARENTHESIS         : 1 55 79 82 85 86
MAIN                 : 1
MULTIPLICATION       : 50
NOTEQUAL             : 67
OR                   : 58
PRINT                : 82
PROGRAM              : 1
QUOTE                : 84 84
RBRACKET             : 29 30 37 37 77
RCURLY               : 9
RETURN               : 23
RPARENTHESIS         : 1 55 79 82 85 86
SEMICOLON            : 1 23 26 36 37 82
STRING               : 75
STRINGTYPE           : 16
SUBTRACTION          : 46
VAR                  : 24
VOIDTYPE             : 17
WHILE                : 85
error                : 

Nonterminals, with rules where they appear

addMainProc          : 1
addProcDir           : 1
addProcDirFunc       : 86
addType              : 26
addTypeFunc          : 90
addVarDir            : 28 29 30 31
addVarDirFunc        : 90
argumentos           : 88 91
argumentos_loop      : 90
asignacion           : 18
asignacion_option    : 35
asignacion_type      : 37 40 41
bloque               : 1 79 80 85 86
bloque_est_loop      : 9 10
ciclo                : 22
condicion            : 19
condicion_option     : 79
createProcDir        : 1
createVarDir         : 24
escritura            : 20
escritura_type       : 82
estatuto             : 10
exp                  : 23 45 46 62 63 64 65 66 67 68
exp_loop             : 42
exp_type_loop        : 43
expresion            : 36 55 60 79 83 85
expresion_loop       : 56
expresion_option     : 56
factor               : 47
factor_exp           : 53
factor_var           : 52
funcion              : 7
funcion_option       : 86
nuevaexp             : 56 57 58
nuevaexp_type        : 62
programa             : 0
programa_func_loop   : 1 7
programa_var_loop    : 1 5
regreso              : 21
termino              : 42 50 51
termino_loop         : 47
termino_type_loop    : 48
tipo                 : 26 86 90
varcte               : 54
varcte_arr           : 71
varcte_type          : 70
variable             : 5
variable_end_loop    : 26
variable_id_loop     : 26 29 31
variable_loop        : 24 33

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) createProcDir -> .

    ID              reduce using rule 2 (createProcDir -> .)

    createProcDir                  shift and go to state 3

state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM createProcDir . ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 4


state 4

    (1) programa -> PROGRAM createProcDir ID . addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addProcDir -> .

    SEMICOLON       reduce using rule 3 (addProcDir -> .)

    addProcDir                     shift and go to state 5

state 5

    (1) programa -> PROGRAM createProcDir ID addProcDir . SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 6


state 6

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON . programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (5) programa_var_loop -> . variable programa_var_loop
    (6) programa_var_loop -> .
    (24) variable -> . VAR createVarDir variable_loop

    INTTYPE         reduce using rule 6 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 6 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 6 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 6 (programa_var_loop -> .)
    STRINGTYPE      reduce using rule 6 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 6 (programa_var_loop -> .)
    MAIN            reduce using rule 6 (programa_var_loop -> .)
    VAR             shift and go to state 7

    programa_var_loop              shift and go to state 8
    variable                       shift and go to state 9

state 7

    (24) variable -> VAR . createVarDir variable_loop
    (25) createVarDir -> .

    ID              reduce using rule 25 (createVarDir -> .)

    createVarDir                   shift and go to state 10

state 8

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop . programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (7) programa_func_loop -> . funcion programa_func_loop
    (8) programa_func_loop -> .
    (86) funcion -> . tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . STRINGTYPE
    (17) tipo -> . VOIDTYPE

    MAIN            reduce using rule 8 (programa_func_loop -> .)
    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 14
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 13
    STRINGTYPE      shift and go to state 11
    VOIDTYPE        shift and go to state 18

    tipo                           shift and go to state 17
    programa_func_loop             shift and go to state 15
    funcion                        shift and go to state 12

state 9

    (5) programa_var_loop -> variable . programa_var_loop
    (5) programa_var_loop -> . variable programa_var_loop
    (6) programa_var_loop -> .
    (24) variable -> . VAR createVarDir variable_loop

    INTTYPE         reduce using rule 6 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 6 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 6 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 6 (programa_var_loop -> .)
    STRINGTYPE      reduce using rule 6 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 6 (programa_var_loop -> .)
    MAIN            reduce using rule 6 (programa_var_loop -> .)
    VAR             shift and go to state 7

    variable                       shift and go to state 9
    programa_var_loop              shift and go to state 20

state 10

    (24) variable -> VAR createVarDir . variable_loop
    (26) variable_loop -> . variable_id_loop COLON tipo addType SEMICOLON variable_end_loop
    (28) variable_id_loop -> . ID addVarDir
    (29) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET
    (31) variable_id_loop -> . ID addVarDir COMA variable_id_loop

    ID              shift and go to state 23

    variable_id_loop               shift and go to state 21
    variable_loop                  shift and go to state 22

state 11

    (16) tipo -> STRINGTYPE .

    COMA            reduce using rule 16 (tipo -> STRINGTYPE .)
    RPARENTHESIS    reduce using rule 16 (tipo -> STRINGTYPE .)
    FUNC            reduce using rule 16 (tipo -> STRINGTYPE .)
    SEMICOLON       reduce using rule 16 (tipo -> STRINGTYPE .)


state 12

    (7) programa_func_loop -> funcion . programa_func_loop
    (7) programa_func_loop -> . funcion programa_func_loop
    (8) programa_func_loop -> .
    (86) funcion -> . tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . STRINGTYPE
    (17) tipo -> . VOIDTYPE

    MAIN            reduce using rule 8 (programa_func_loop -> .)
    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 14
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 13
    STRINGTYPE      shift and go to state 11
    VOIDTYPE        shift and go to state 18

    tipo                           shift and go to state 17
    programa_func_loop             shift and go to state 24
    funcion                        shift and go to state 12

state 13

    (15) tipo -> BOOLTYPE .

    COMA            reduce using rule 15 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 15 (tipo -> BOOLTYPE .)
    SEMICOLON       reduce using rule 15 (tipo -> BOOLTYPE .)


state 14

    (13) tipo -> FLOATTYPE .

    COMA            reduce using rule 13 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 13 (tipo -> FLOATTYPE .)
    SEMICOLON       reduce using rule 13 (tipo -> FLOATTYPE .)


state 15

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 25


state 16

    (12) tipo -> INTTYPE .

    COMA            reduce using rule 12 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> INTTYPE .)
    FUNC            reduce using rule 12 (tipo -> INTTYPE .)
    SEMICOLON       reduce using rule 12 (tipo -> INTTYPE .)


state 17

    (86) funcion -> tipo . FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque

    FUNC            shift and go to state 26


state 18

    (17) tipo -> VOIDTYPE .

    COMA            reduce using rule 17 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 17 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 17 (tipo -> VOIDTYPE .)
    SEMICOLON       reduce using rule 17 (tipo -> VOIDTYPE .)


state 19

    (14) tipo -> CHARTYPE .

    COMA            reduce using rule 14 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 14 (tipo -> CHARTYPE .)
    SEMICOLON       reduce using rule 14 (tipo -> CHARTYPE .)


state 20

    (5) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    STRINGTYPE      reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)


state 21

    (26) variable_loop -> variable_id_loop . COLON tipo addType SEMICOLON variable_end_loop

    COLON           shift and go to state 27


state 22

    (24) variable -> VAR createVarDir variable_loop .

    VAR             reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    INTTYPE         reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    FLOATTYPE       reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    CHARTYPE        reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    BOOLTYPE        reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    STRINGTYPE      reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    VOIDTYPE        reduce using rule 24 (variable -> VAR createVarDir variable_loop .)
    MAIN            reduce using rule 24 (variable -> VAR createVarDir variable_loop .)


state 23

    (28) variable_id_loop -> ID . addVarDir
    (29) variable_id_loop -> ID . addVarDir LBRACKET RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> ID . addVarDir LBRACKET RBRACKET
    (31) variable_id_loop -> ID . addVarDir COMA variable_id_loop
    (32) addVarDir -> .

    LBRACKET        reduce using rule 32 (addVarDir -> .)
    COMA            reduce using rule 32 (addVarDir -> .)
    COLON           reduce using rule 32 (addVarDir -> .)

    addVarDir                      shift and go to state 28

state 24

    (7) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 7 (programa_func_loop -> funcion programa_func_loop .)


state 25

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) addMainProc -> .

    LPARENTHESIS    reduce using rule 4 (addMainProc -> .)

    addMainProc                    shift and go to state 29

state 26

    (86) funcion -> tipo FUNC . ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque

    ID              shift and go to state 30


state 27

    (26) variable_loop -> variable_id_loop COLON . tipo addType SEMICOLON variable_end_loop
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . STRINGTYPE
    (17) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 14
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 13
    STRINGTYPE      shift and go to state 11
    VOIDTYPE        shift and go to state 18

    tipo                           shift and go to state 31

state 28

    (28) variable_id_loop -> ID addVarDir .
    (29) variable_id_loop -> ID addVarDir . LBRACKET RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> ID addVarDir . LBRACKET RBRACKET
    (31) variable_id_loop -> ID addVarDir . COMA variable_id_loop

    COLON           reduce using rule 28 (variable_id_loop -> ID addVarDir .)
    LBRACKET        shift and go to state 32
    COMA            shift and go to state 33


state 29

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 34


state 30

    (86) funcion -> tipo FUNC ID . addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque
    (87) addProcDirFunc -> .

    LPARENTHESIS    reduce using rule 87 (addProcDirFunc -> .)

    addProcDirFunc                 shift and go to state 35

state 31

    (26) variable_loop -> variable_id_loop COLON tipo . addType SEMICOLON variable_end_loop
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 36

state 32

    (29) variable_id_loop -> ID addVarDir LBRACKET . RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> ID addVarDir LBRACKET . RBRACKET

    RBRACKET        shift and go to state 37


state 33

    (31) variable_id_loop -> ID addVarDir COMA . variable_id_loop
    (28) variable_id_loop -> . ID addVarDir
    (29) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET
    (31) variable_id_loop -> . ID addVarDir COMA variable_id_loop

    ID              shift and go to state 23

    variable_id_loop               shift and go to state 38

state 34

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 39


state 35

    (86) funcion -> tipo FUNC ID addProcDirFunc . LPARENTHESIS funcion_option RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 40


state 36

    (26) variable_loop -> variable_id_loop COLON tipo addType . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 41


state 37

    (29) variable_id_loop -> ID addVarDir LBRACKET RBRACKET . COMA variable_id_loop
    (30) variable_id_loop -> ID addVarDir LBRACKET RBRACKET .

    COMA            shift and go to state 42
    COLON           reduce using rule 30 (variable_id_loop -> ID addVarDir LBRACKET RBRACKET .)


state 38

    (31) variable_id_loop -> ID addVarDir COMA variable_id_loop .

    COLON           reduce using rule 31 (variable_id_loop -> ID addVarDir COMA variable_id_loop .)


state 39

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 43

    bloque                         shift and go to state 44

state 40

    (86) funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS . funcion_option RPARENTHESIS bloque
    (88) funcion_option -> . argumentos
    (89) funcion_option -> .
    (90) argumentos -> . ID addVarDirFunc COLON tipo addTypeFunc argumentos_loop

    RPARENTHESIS    reduce using rule 89 (funcion_option -> .)
    ID              shift and go to state 47

    funcion_option                 shift and go to state 45
    argumentos                     shift and go to state 46

state 41

    (26) variable_loop -> variable_id_loop COLON tipo addType SEMICOLON . variable_end_loop
    (33) variable_end_loop -> . variable_loop
    (34) variable_end_loop -> .
    (26) variable_loop -> . variable_id_loop COLON tipo addType SEMICOLON variable_end_loop
    (28) variable_id_loop -> . ID addVarDir
    (29) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET
    (31) variable_id_loop -> . ID addVarDir COMA variable_id_loop

    VAR             reduce using rule 34 (variable_end_loop -> .)
    INTTYPE         reduce using rule 34 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 34 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 34 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 34 (variable_end_loop -> .)
    STRINGTYPE      reduce using rule 34 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 34 (variable_end_loop -> .)
    MAIN            reduce using rule 34 (variable_end_loop -> .)
    ID              shift and go to state 23

    variable_id_loop               shift and go to state 21
    variable_end_loop              shift and go to state 48
    variable_loop                  shift and go to state 49

state 42

    (29) variable_id_loop -> ID addVarDir LBRACKET RBRACKET COMA . variable_id_loop
    (28) variable_id_loop -> . ID addVarDir
    (29) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET COMA variable_id_loop
    (30) variable_id_loop -> . ID addVarDir LBRACKET RBRACKET
    (31) variable_id_loop -> . ID addVarDir COMA variable_id_loop

    ID              shift and go to state 23

    variable_id_loop               shift and go to state 50

state 43

    (9) bloque -> LCURLY . bloque_est_loop RCURLY
    (10) bloque_est_loop -> . estatuto bloque_est_loop
    (11) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (35) asignacion -> . ID asignacion_option
    (79) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
    (82) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (85) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 11 (bloque_est_loop -> .)
    ID              shift and go to state 57
    IF              shift and go to state 58
    PRINT           shift and go to state 53
    RETURN          shift and go to state 51
    WHILE           shift and go to state 52

    regreso                        shift and go to state 59
    ciclo                          shift and go to state 54
    asignacion                     shift and go to state 60
    estatuto                       shift and go to state 55
    condicion                      shift and go to state 56
    bloque_est_loop                shift and go to state 61
    escritura                      shift and go to state 62

state 44

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 63


state 45

    (86) funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 64


state 46

    (88) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 88 (funcion_option -> argumentos .)


state 47

    (90) argumentos -> ID . addVarDirFunc COLON tipo addTypeFunc argumentos_loop
    (93) addVarDirFunc -> .

    COLON           reduce using rule 93 (addVarDirFunc -> .)

    addVarDirFunc                  shift and go to state 65

state 48

    (26) variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .

    VAR             reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    STRINGTYPE      reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 26 (variable_loop -> variable_id_loop COLON tipo addType SEMICOLON variable_end_loop .)


state 49

    (33) variable_end_loop -> variable_loop .

    VAR             reduce using rule 33 (variable_end_loop -> variable_loop .)
    INTTYPE         reduce using rule 33 (variable_end_loop -> variable_loop .)
    FLOATTYPE       reduce using rule 33 (variable_end_loop -> variable_loop .)
    CHARTYPE        reduce using rule 33 (variable_end_loop -> variable_loop .)
    BOOLTYPE        reduce using rule 33 (variable_end_loop -> variable_loop .)
    STRINGTYPE      reduce using rule 33 (variable_end_loop -> variable_loop .)
    VOIDTYPE        reduce using rule 33 (variable_end_loop -> variable_loop .)
    MAIN            reduce using rule 33 (variable_end_loop -> variable_loop .)


state 50

    (29) variable_id_loop -> ID addVarDir LBRACKET RBRACKET COMA variable_id_loop .

    COLON           reduce using rule 29 (variable_id_loop -> ID addVarDir LBRACKET RBRACKET COMA variable_id_loop .)


state 51

    (23) regreso -> RETURN . exp SEMICOLON
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 76
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 52

    (85) ciclo -> WHILE . LPARENTHESIS expresion RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 80


state 53

    (82) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 81


state 54

    (22) estatuto -> ciclo .

    ID              reduce using rule 22 (estatuto -> ciclo .)
    IF              reduce using rule 22 (estatuto -> ciclo .)
    PRINT           reduce using rule 22 (estatuto -> ciclo .)
    RETURN          reduce using rule 22 (estatuto -> ciclo .)
    WHILE           reduce using rule 22 (estatuto -> ciclo .)
    RCURLY          reduce using rule 22 (estatuto -> ciclo .)


state 55

    (10) bloque_est_loop -> estatuto . bloque_est_loop
    (10) bloque_est_loop -> . estatuto bloque_est_loop
    (11) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (35) asignacion -> . ID asignacion_option
    (79) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
    (82) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (85) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 11 (bloque_est_loop -> .)
    ID              shift and go to state 57
    IF              shift and go to state 58
    PRINT           shift and go to state 53
    RETURN          shift and go to state 51
    WHILE           shift and go to state 52

    regreso                        shift and go to state 59
    ciclo                          shift and go to state 54
    asignacion                     shift and go to state 60
    estatuto                       shift and go to state 55
    condicion                      shift and go to state 56
    bloque_est_loop                shift and go to state 82
    escritura                      shift and go to state 62

state 56

    (19) estatuto -> condicion .

    ID              reduce using rule 19 (estatuto -> condicion .)
    IF              reduce using rule 19 (estatuto -> condicion .)
    PRINT           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RCURLY          reduce using rule 19 (estatuto -> condicion .)


state 57

    (35) asignacion -> ID . asignacion_option
    (36) asignacion_option -> . ASSIGN expresion SEMICOLON
    (37) asignacion_option -> . LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 84
    LBRACKET        shift and go to state 85

    asignacion_option              shift and go to state 83

state 58

    (79) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS bloque condicion_option

    LPARENTHESIS    shift and go to state 86


state 59

    (21) estatuto -> regreso .

    ID              reduce using rule 21 (estatuto -> regreso .)
    IF              reduce using rule 21 (estatuto -> regreso .)
    PRINT           reduce using rule 21 (estatuto -> regreso .)
    RETURN          reduce using rule 21 (estatuto -> regreso .)
    WHILE           reduce using rule 21 (estatuto -> regreso .)
    RCURLY          reduce using rule 21 (estatuto -> regreso .)


state 60

    (18) estatuto -> asignacion .

    ID              reduce using rule 18 (estatuto -> asignacion .)
    IF              reduce using rule 18 (estatuto -> asignacion .)
    PRINT           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RCURLY          reduce using rule 18 (estatuto -> asignacion .)


state 61

    (9) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 87


state 62

    (20) estatuto -> escritura .

    ID              reduce using rule 20 (estatuto -> escritura .)
    IF              reduce using rule 20 (estatuto -> escritura .)
    PRINT           reduce using rule 20 (estatuto -> escritura .)
    RETURN          reduce using rule 20 (estatuto -> escritura .)
    WHILE           reduce using rule 20 (estatuto -> escritura .)
    RCURLY          reduce using rule 20 (estatuto -> escritura .)


state 63

    (1) programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM createProcDir ID addProcDir SEMICOLON programa_var_loop programa_func_loop MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 64

    (86) funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS . bloque
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 43

    bloque                         shift and go to state 88

state 65

    (90) argumentos -> ID addVarDirFunc . COLON tipo addTypeFunc argumentos_loop

    COLON           shift and go to state 89


state 66

    (73) varcte_type -> FLOAT .

    MULTIPLICATION  reduce using rule 73 (varcte_type -> FLOAT .)
    DIVISION        reduce using rule 73 (varcte_type -> FLOAT .)
    ADDITION        reduce using rule 73 (varcte_type -> FLOAT .)
    SUBTRACTION     reduce using rule 73 (varcte_type -> FLOAT .)
    AND             reduce using rule 73 (varcte_type -> FLOAT .)
    OR              reduce using rule 73 (varcte_type -> FLOAT .)
    LPARENTHESIS    reduce using rule 73 (varcte_type -> FLOAT .)
    ID              reduce using rule 73 (varcte_type -> FLOAT .)
    INT             reduce using rule 73 (varcte_type -> FLOAT .)
    FLOAT           reduce using rule 73 (varcte_type -> FLOAT .)
    CHAR            reduce using rule 73 (varcte_type -> FLOAT .)
    STRING          reduce using rule 73 (varcte_type -> FLOAT .)
    BOOL            reduce using rule 73 (varcte_type -> FLOAT .)
    RPARENTHESIS    reduce using rule 73 (varcte_type -> FLOAT .)
    SEMICOLON       reduce using rule 73 (varcte_type -> FLOAT .)
    LESS            reduce using rule 73 (varcte_type -> FLOAT .)
    GREATER         reduce using rule 73 (varcte_type -> FLOAT .)
    LESSEQUAL       reduce using rule 73 (varcte_type -> FLOAT .)
    GREATEREQUAL    reduce using rule 73 (varcte_type -> FLOAT .)
    NOTEQUAL        reduce using rule 73 (varcte_type -> FLOAT .)
    EQUAL           reduce using rule 73 (varcte_type -> FLOAT .)


state 67

    (54) factor_var -> varcte .

    MULTIPLICATION  reduce using rule 54 (factor_var -> varcte .)
    DIVISION        reduce using rule 54 (factor_var -> varcte .)
    ADDITION        reduce using rule 54 (factor_var -> varcte .)
    SUBTRACTION     reduce using rule 54 (factor_var -> varcte .)
    LESS            reduce using rule 54 (factor_var -> varcte .)
    GREATER         reduce using rule 54 (factor_var -> varcte .)
    LESSEQUAL       reduce using rule 54 (factor_var -> varcte .)
    GREATEREQUAL    reduce using rule 54 (factor_var -> varcte .)
    NOTEQUAL        reduce using rule 54 (factor_var -> varcte .)
    EQUAL           reduce using rule 54 (factor_var -> varcte .)
    AND             reduce using rule 54 (factor_var -> varcte .)
    OR              reduce using rule 54 (factor_var -> varcte .)
    LPARENTHESIS    reduce using rule 54 (factor_var -> varcte .)
    ID              reduce using rule 54 (factor_var -> varcte .)
    INT             reduce using rule 54 (factor_var -> varcte .)
    FLOAT           reduce using rule 54 (factor_var -> varcte .)
    CHAR            reduce using rule 54 (factor_var -> varcte .)
    STRING          reduce using rule 54 (factor_var -> varcte .)
    BOOL            reduce using rule 54 (factor_var -> varcte .)
    RPARENTHESIS    reduce using rule 54 (factor_var -> varcte .)
    SEMICOLON       reduce using rule 54 (factor_var -> varcte .)


state 68

    (72) varcte_type -> INT .

    MULTIPLICATION  reduce using rule 72 (varcte_type -> INT .)
    DIVISION        reduce using rule 72 (varcte_type -> INT .)
    ADDITION        reduce using rule 72 (varcte_type -> INT .)
    SUBTRACTION     reduce using rule 72 (varcte_type -> INT .)
    AND             reduce using rule 72 (varcte_type -> INT .)
    OR              reduce using rule 72 (varcte_type -> INT .)
    LPARENTHESIS    reduce using rule 72 (varcte_type -> INT .)
    ID              reduce using rule 72 (varcte_type -> INT .)
    INT             reduce using rule 72 (varcte_type -> INT .)
    FLOAT           reduce using rule 72 (varcte_type -> INT .)
    CHAR            reduce using rule 72 (varcte_type -> INT .)
    STRING          reduce using rule 72 (varcte_type -> INT .)
    BOOL            reduce using rule 72 (varcte_type -> INT .)
    RPARENTHESIS    reduce using rule 72 (varcte_type -> INT .)
    SEMICOLON       reduce using rule 72 (varcte_type -> INT .)
    LESS            reduce using rule 72 (varcte_type -> INT .)
    GREATER         reduce using rule 72 (varcte_type -> INT .)
    LESSEQUAL       reduce using rule 72 (varcte_type -> INT .)
    GREATEREQUAL    reduce using rule 72 (varcte_type -> INT .)
    NOTEQUAL        reduce using rule 72 (varcte_type -> INT .)
    EQUAL           reduce using rule 72 (varcte_type -> INT .)


state 69

    (53) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 53 (factor -> factor_exp .)
    DIVISION        reduce using rule 53 (factor -> factor_exp .)
    ADDITION        reduce using rule 53 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 53 (factor -> factor_exp .)
    AND             reduce using rule 53 (factor -> factor_exp .)
    OR              reduce using rule 53 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 53 (factor -> factor_exp .)
    ID              reduce using rule 53 (factor -> factor_exp .)
    INT             reduce using rule 53 (factor -> factor_exp .)
    FLOAT           reduce using rule 53 (factor -> factor_exp .)
    CHAR            reduce using rule 53 (factor -> factor_exp .)
    STRING          reduce using rule 53 (factor -> factor_exp .)
    BOOL            reduce using rule 53 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 53 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 53 (factor -> factor_exp .)
    LESS            reduce using rule 53 (factor -> factor_exp .)
    GREATER         reduce using rule 53 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 53 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 53 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 53 (factor -> factor_exp .)
    EQUAL           reduce using rule 53 (factor -> factor_exp .)


state 70

    (55) factor_exp -> LPARENTHESIS . expresion RPARENTHESIS
    (56) expresion -> . nuevaexp expresion_option expresion_loop
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    expresion                      shift and go to state 91
    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 90
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 71

    (70) varcte -> varcte_type .

    MULTIPLICATION  reduce using rule 70 (varcte -> varcte_type .)
    DIVISION        reduce using rule 70 (varcte -> varcte_type .)
    ADDITION        reduce using rule 70 (varcte -> varcte_type .)
    SUBTRACTION     reduce using rule 70 (varcte -> varcte_type .)
    AND             reduce using rule 70 (varcte -> varcte_type .)
    OR              reduce using rule 70 (varcte -> varcte_type .)
    LPARENTHESIS    reduce using rule 70 (varcte -> varcte_type .)
    ID              reduce using rule 70 (varcte -> varcte_type .)
    INT             reduce using rule 70 (varcte -> varcte_type .)
    FLOAT           reduce using rule 70 (varcte -> varcte_type .)
    CHAR            reduce using rule 70 (varcte -> varcte_type .)
    STRING          reduce using rule 70 (varcte -> varcte_type .)
    BOOL            reduce using rule 70 (varcte -> varcte_type .)
    RPARENTHESIS    reduce using rule 70 (varcte -> varcte_type .)
    SEMICOLON       reduce using rule 70 (varcte -> varcte_type .)
    LESS            reduce using rule 70 (varcte -> varcte_type .)
    GREATER         reduce using rule 70 (varcte -> varcte_type .)
    LESSEQUAL       reduce using rule 70 (varcte -> varcte_type .)
    GREATEREQUAL    reduce using rule 70 (varcte -> varcte_type .)
    NOTEQUAL        reduce using rule 70 (varcte -> varcte_type .)
    EQUAL           reduce using rule 70 (varcte -> varcte_type .)


state 72

    (74) varcte_type -> CHAR .

    MULTIPLICATION  reduce using rule 74 (varcte_type -> CHAR .)
    DIVISION        reduce using rule 74 (varcte_type -> CHAR .)
    ADDITION        reduce using rule 74 (varcte_type -> CHAR .)
    SUBTRACTION     reduce using rule 74 (varcte_type -> CHAR .)
    AND             reduce using rule 74 (varcte_type -> CHAR .)
    OR              reduce using rule 74 (varcte_type -> CHAR .)
    LPARENTHESIS    reduce using rule 74 (varcte_type -> CHAR .)
    ID              reduce using rule 74 (varcte_type -> CHAR .)
    INT             reduce using rule 74 (varcte_type -> CHAR .)
    FLOAT           reduce using rule 74 (varcte_type -> CHAR .)
    CHAR            reduce using rule 74 (varcte_type -> CHAR .)
    STRING          reduce using rule 74 (varcte_type -> CHAR .)
    BOOL            reduce using rule 74 (varcte_type -> CHAR .)
    RPARENTHESIS    reduce using rule 74 (varcte_type -> CHAR .)
    SEMICOLON       reduce using rule 74 (varcte_type -> CHAR .)
    LESS            reduce using rule 74 (varcte_type -> CHAR .)
    GREATER         reduce using rule 74 (varcte_type -> CHAR .)
    LESSEQUAL       reduce using rule 74 (varcte_type -> CHAR .)
    GREATEREQUAL    reduce using rule 74 (varcte_type -> CHAR .)
    NOTEQUAL        reduce using rule 74 (varcte_type -> CHAR .)
    EQUAL           reduce using rule 74 (varcte_type -> CHAR .)


state 73

    (75) varcte_type -> STRING .

    MULTIPLICATION  reduce using rule 75 (varcte_type -> STRING .)
    DIVISION        reduce using rule 75 (varcte_type -> STRING .)
    ADDITION        reduce using rule 75 (varcte_type -> STRING .)
    SUBTRACTION     reduce using rule 75 (varcte_type -> STRING .)
    AND             reduce using rule 75 (varcte_type -> STRING .)
    OR              reduce using rule 75 (varcte_type -> STRING .)
    LPARENTHESIS    reduce using rule 75 (varcte_type -> STRING .)
    ID              reduce using rule 75 (varcte_type -> STRING .)
    INT             reduce using rule 75 (varcte_type -> STRING .)
    FLOAT           reduce using rule 75 (varcte_type -> STRING .)
    CHAR            reduce using rule 75 (varcte_type -> STRING .)
    STRING          reduce using rule 75 (varcte_type -> STRING .)
    BOOL            reduce using rule 75 (varcte_type -> STRING .)
    RPARENTHESIS    reduce using rule 75 (varcte_type -> STRING .)
    SEMICOLON       reduce using rule 75 (varcte_type -> STRING .)
    LESS            reduce using rule 75 (varcte_type -> STRING .)
    GREATER         reduce using rule 75 (varcte_type -> STRING .)
    LESSEQUAL       reduce using rule 75 (varcte_type -> STRING .)
    GREATEREQUAL    reduce using rule 75 (varcte_type -> STRING .)
    NOTEQUAL        reduce using rule 75 (varcte_type -> STRING .)
    EQUAL           reduce using rule 75 (varcte_type -> STRING .)


state 74

    (76) varcte_type -> BOOL .

    MULTIPLICATION  reduce using rule 76 (varcte_type -> BOOL .)
    DIVISION        reduce using rule 76 (varcte_type -> BOOL .)
    ADDITION        reduce using rule 76 (varcte_type -> BOOL .)
    SUBTRACTION     reduce using rule 76 (varcte_type -> BOOL .)
    AND             reduce using rule 76 (varcte_type -> BOOL .)
    OR              reduce using rule 76 (varcte_type -> BOOL .)
    LPARENTHESIS    reduce using rule 76 (varcte_type -> BOOL .)
    ID              reduce using rule 76 (varcte_type -> BOOL .)
    INT             reduce using rule 76 (varcte_type -> BOOL .)
    FLOAT           reduce using rule 76 (varcte_type -> BOOL .)
    CHAR            reduce using rule 76 (varcte_type -> BOOL .)
    STRING          reduce using rule 76 (varcte_type -> BOOL .)
    BOOL            reduce using rule 76 (varcte_type -> BOOL .)
    RPARENTHESIS    reduce using rule 76 (varcte_type -> BOOL .)
    SEMICOLON       reduce using rule 76 (varcte_type -> BOOL .)
    LESS            reduce using rule 76 (varcte_type -> BOOL .)
    GREATER         reduce using rule 76 (varcte_type -> BOOL .)
    LESSEQUAL       reduce using rule 76 (varcte_type -> BOOL .)
    GREATEREQUAL    reduce using rule 76 (varcte_type -> BOOL .)
    NOTEQUAL        reduce using rule 76 (varcte_type -> BOOL .)
    EQUAL           reduce using rule 76 (varcte_type -> BOOL .)


state 75

    (42) exp -> termino . exp_loop
    (43) exp_loop -> . exp_type_loop
    (44) exp_loop -> .
    (45) exp_type_loop -> . ADDITION exp
    (46) exp_type_loop -> . SUBTRACTION exp

    SEMICOLON       reduce using rule 44 (exp_loop -> .)
    LESS            reduce using rule 44 (exp_loop -> .)
    GREATER         reduce using rule 44 (exp_loop -> .)
    LESSEQUAL       reduce using rule 44 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 44 (exp_loop -> .)
    NOTEQUAL        reduce using rule 44 (exp_loop -> .)
    EQUAL           reduce using rule 44 (exp_loop -> .)
    AND             reduce using rule 44 (exp_loop -> .)
    OR              reduce using rule 44 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 44 (exp_loop -> .)
    ID              reduce using rule 44 (exp_loop -> .)
    INT             reduce using rule 44 (exp_loop -> .)
    FLOAT           reduce using rule 44 (exp_loop -> .)
    CHAR            reduce using rule 44 (exp_loop -> .)
    STRING          reduce using rule 44 (exp_loop -> .)
    BOOL            reduce using rule 44 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 44 (exp_loop -> .)
    ADDITION        shift and go to state 94
    SUBTRACTION     shift and go to state 96

    exp_loop                       shift and go to state 95
    exp_type_loop                  shift and go to state 93

state 76

    (23) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 97


state 77

    (47) termino -> factor . termino_loop
    (48) termino_loop -> . termino_type_loop
    (49) termino_loop -> .
    (50) termino_type_loop -> . MULTIPLICATION termino
    (51) termino_type_loop -> . DIVISION termino

    ADDITION        reduce using rule 49 (termino_loop -> .)
    SUBTRACTION     reduce using rule 49 (termino_loop -> .)
    SEMICOLON       reduce using rule 49 (termino_loop -> .)
    LESS            reduce using rule 49 (termino_loop -> .)
    GREATER         reduce using rule 49 (termino_loop -> .)
    LESSEQUAL       reduce using rule 49 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 49 (termino_loop -> .)
    NOTEQUAL        reduce using rule 49 (termino_loop -> .)
    EQUAL           reduce using rule 49 (termino_loop -> .)
    AND             reduce using rule 49 (termino_loop -> .)
    OR              reduce using rule 49 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 49 (termino_loop -> .)
    ID              reduce using rule 49 (termino_loop -> .)
    INT             reduce using rule 49 (termino_loop -> .)
    FLOAT           reduce using rule 49 (termino_loop -> .)
    CHAR            reduce using rule 49 (termino_loop -> .)
    STRING          reduce using rule 49 (termino_loop -> .)
    BOOL            reduce using rule 49 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 49 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 100
    DIVISION        shift and go to state 98

    termino_type_loop              shift and go to state 99
    termino_loop                   shift and go to state 101

state 78

    (71) varcte_type -> ID . varcte_arr
    (77) varcte_arr -> . LBRACKET RBRACKET
    (78) varcte_arr -> .

    LBRACKET        shift and go to state 102
    MULTIPLICATION  reduce using rule 78 (varcte_arr -> .)
    DIVISION        reduce using rule 78 (varcte_arr -> .)
    ADDITION        reduce using rule 78 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 78 (varcte_arr -> .)
    SEMICOLON       reduce using rule 78 (varcte_arr -> .)
    LESS            reduce using rule 78 (varcte_arr -> .)
    GREATER         reduce using rule 78 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 78 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 78 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 78 (varcte_arr -> .)
    EQUAL           reduce using rule 78 (varcte_arr -> .)
    AND             reduce using rule 78 (varcte_arr -> .)
    OR              reduce using rule 78 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 78 (varcte_arr -> .)
    ID              reduce using rule 78 (varcte_arr -> .)
    INT             reduce using rule 78 (varcte_arr -> .)
    FLOAT           reduce using rule 78 (varcte_arr -> .)
    CHAR            reduce using rule 78 (varcte_arr -> .)
    STRING          reduce using rule 78 (varcte_arr -> .)
    BOOL            reduce using rule 78 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 78 (varcte_arr -> .)

    varcte_arr                     shift and go to state 103

state 79

    (52) factor -> factor_var .

    MULTIPLICATION  reduce using rule 52 (factor -> factor_var .)
    DIVISION        reduce using rule 52 (factor -> factor_var .)
    ADDITION        reduce using rule 52 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 52 (factor -> factor_var .)
    AND             reduce using rule 52 (factor -> factor_var .)
    OR              reduce using rule 52 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 52 (factor -> factor_var .)
    ID              reduce using rule 52 (factor -> factor_var .)
    INT             reduce using rule 52 (factor -> factor_var .)
    FLOAT           reduce using rule 52 (factor -> factor_var .)
    CHAR            reduce using rule 52 (factor -> factor_var .)
    STRING          reduce using rule 52 (factor -> factor_var .)
    BOOL            reduce using rule 52 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 52 (factor -> factor_var .)
    SEMICOLON       reduce using rule 52 (factor -> factor_var .)
    LESS            reduce using rule 52 (factor -> factor_var .)
    GREATER         reduce using rule 52 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 52 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 52 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 52 (factor -> factor_var .)
    EQUAL           reduce using rule 52 (factor -> factor_var .)


state 80

    (85) ciclo -> WHILE LPARENTHESIS . expresion RPARENTHESIS bloque
    (56) expresion -> . nuevaexp expresion_option expresion_loop
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    expresion                      shift and go to state 104
    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 90
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 81

    (82) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (83) escritura_type -> . expresion
    (84) escritura_type -> . QUOTE CTESTRING QUOTE
    (56) expresion -> . nuevaexp expresion_option expresion_loop
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    QUOTE           shift and go to state 105
    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    expresion                      shift and go to state 107
    factor_exp                     shift and go to state 69
    varcte                         shift and go to state 67
    escritura_type                 shift and go to state 106
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 90
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 82

    (10) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 10 (bloque_est_loop -> estatuto bloque_est_loop .)


state 83

    (35) asignacion -> ID asignacion_option .

    ID              reduce using rule 35 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 35 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 35 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 35 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 35 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 35 (asignacion -> ID asignacion_option .)


state 84

    (36) asignacion_option -> ASSIGN . expresion SEMICOLON
    (56) expresion -> . nuevaexp expresion_option expresion_loop
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    expresion                      shift and go to state 108
    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 90
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 85

    (37) asignacion_option -> LBRACKET . INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON

    INT             shift and go to state 109


state 86

    (79) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS bloque condicion_option
    (56) expresion -> . nuevaexp expresion_option expresion_loop
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    expresion                      shift and go to state 110
    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 90
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 87

    (9) bloque -> LCURLY bloque_est_loop RCURLY .

    ELSE            reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    STRINGTYPE      reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 88

    (86) funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .

    INTTYPE         reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)
    FLOATTYPE       reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)
    CHARTYPE        reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)
    BOOLTYPE        reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)
    STRINGTYPE      reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)
    VOIDTYPE        reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)
    MAIN            reduce using rule 86 (funcion -> tipo FUNC ID addProcDirFunc LPARENTHESIS funcion_option RPARENTHESIS bloque .)


state 89

    (90) argumentos -> ID addVarDirFunc COLON . tipo addTypeFunc argumentos_loop
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . STRINGTYPE
    (17) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 16
    FLOATTYPE       shift and go to state 14
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 13
    STRINGTYPE      shift and go to state 11
    VOIDTYPE        shift and go to state 18

    tipo                           shift and go to state 111

state 90

    (56) expresion -> nuevaexp . expresion_option expresion_loop
    (57) expresion_option -> . AND nuevaexp
    (58) expresion_option -> . OR nuevaexp
    (59) expresion_option -> .

    AND             shift and go to state 112
    OR              shift and go to state 113
    LPARENTHESIS    reduce using rule 59 (expresion_option -> .)
    ID              reduce using rule 59 (expresion_option -> .)
    INT             reduce using rule 59 (expresion_option -> .)
    FLOAT           reduce using rule 59 (expresion_option -> .)
    CHAR            reduce using rule 59 (expresion_option -> .)
    STRING          reduce using rule 59 (expresion_option -> .)
    BOOL            reduce using rule 59 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 59 (expresion_option -> .)
    SEMICOLON       reduce using rule 59 (expresion_option -> .)

    expresion_option               shift and go to state 114

state 91

    (55) factor_exp -> LPARENTHESIS expresion . RPARENTHESIS

    RPARENTHESIS    shift and go to state 115


state 92

    (62) nuevaexp -> exp . nuevaexp_type
    (63) nuevaexp_type -> . LESS exp
    (64) nuevaexp_type -> . GREATER exp
    (65) nuevaexp_type -> . LESSEQUAL exp
    (66) nuevaexp_type -> . GREATEREQUAL exp
    (67) nuevaexp_type -> . NOTEQUAL exp
    (68) nuevaexp_type -> . EQUAL exp
    (69) nuevaexp_type -> .

    LESS            shift and go to state 119
    GREATER         shift and go to state 118
    LESSEQUAL       shift and go to state 122
    GREATEREQUAL    shift and go to state 117
    NOTEQUAL        shift and go to state 116
    EQUAL           shift and go to state 120
    AND             reduce using rule 69 (nuevaexp_type -> .)
    OR              reduce using rule 69 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 69 (nuevaexp_type -> .)
    ID              reduce using rule 69 (nuevaexp_type -> .)
    INT             reduce using rule 69 (nuevaexp_type -> .)
    FLOAT           reduce using rule 69 (nuevaexp_type -> .)
    CHAR            reduce using rule 69 (nuevaexp_type -> .)
    STRING          reduce using rule 69 (nuevaexp_type -> .)
    BOOL            reduce using rule 69 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 69 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 69 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 121

state 93

    (43) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 43 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 43 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 43 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 43 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 43 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 43 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 43 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 43 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 43 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 43 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 43 (exp_loop -> exp_type_loop .)
    INT             reduce using rule 43 (exp_loop -> exp_type_loop .)
    FLOAT           reduce using rule 43 (exp_loop -> exp_type_loop .)
    CHAR            reduce using rule 43 (exp_loop -> exp_type_loop .)
    STRING          reduce using rule 43 (exp_loop -> exp_type_loop .)
    BOOL            reduce using rule 43 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 43 (exp_loop -> exp_type_loop .)


state 94

    (45) exp_type_loop -> ADDITION . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 123
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 95

    (42) exp -> termino exp_loop .

    LESS            reduce using rule 42 (exp -> termino exp_loop .)
    GREATER         reduce using rule 42 (exp -> termino exp_loop .)
    LESSEQUAL       reduce using rule 42 (exp -> termino exp_loop .)
    GREATEREQUAL    reduce using rule 42 (exp -> termino exp_loop .)
    NOTEQUAL        reduce using rule 42 (exp -> termino exp_loop .)
    EQUAL           reduce using rule 42 (exp -> termino exp_loop .)
    LPARENTHESIS    reduce using rule 42 (exp -> termino exp_loop .)
    ID              reduce using rule 42 (exp -> termino exp_loop .)
    INT             reduce using rule 42 (exp -> termino exp_loop .)
    FLOAT           reduce using rule 42 (exp -> termino exp_loop .)
    CHAR            reduce using rule 42 (exp -> termino exp_loop .)
    STRING          reduce using rule 42 (exp -> termino exp_loop .)
    BOOL            reduce using rule 42 (exp -> termino exp_loop .)
    RPARENTHESIS    reduce using rule 42 (exp -> termino exp_loop .)
    SEMICOLON       reduce using rule 42 (exp -> termino exp_loop .)
    AND             reduce using rule 42 (exp -> termino exp_loop .)
    OR              reduce using rule 42 (exp -> termino exp_loop .)


state 96

    (46) exp_type_loop -> SUBTRACTION . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 124
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 97

    (23) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)


state 98

    (51) termino_type_loop -> DIVISION . termino
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 125
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 99

    (48) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 48 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 48 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 48 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 48 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 48 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 48 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 48 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 48 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 48 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 48 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 48 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 48 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 48 (termino_loop -> termino_type_loop .)
    INT             reduce using rule 48 (termino_loop -> termino_type_loop .)
    FLOAT           reduce using rule 48 (termino_loop -> termino_type_loop .)
    CHAR            reduce using rule 48 (termino_loop -> termino_type_loop .)
    STRING          reduce using rule 48 (termino_loop -> termino_type_loop .)
    BOOL            reduce using rule 48 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 48 (termino_loop -> termino_type_loop .)


state 100

    (50) termino_type_loop -> MULTIPLICATION . termino
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 126
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 101

    (47) termino -> factor termino_loop .

    ADDITION        reduce using rule 47 (termino -> factor termino_loop .)
    SUBTRACTION     reduce using rule 47 (termino -> factor termino_loop .)
    SEMICOLON       reduce using rule 47 (termino -> factor termino_loop .)
    LESS            reduce using rule 47 (termino -> factor termino_loop .)
    GREATER         reduce using rule 47 (termino -> factor termino_loop .)
    LESSEQUAL       reduce using rule 47 (termino -> factor termino_loop .)
    GREATEREQUAL    reduce using rule 47 (termino -> factor termino_loop .)
    NOTEQUAL        reduce using rule 47 (termino -> factor termino_loop .)
    EQUAL           reduce using rule 47 (termino -> factor termino_loop .)
    AND             reduce using rule 47 (termino -> factor termino_loop .)
    OR              reduce using rule 47 (termino -> factor termino_loop .)
    LPARENTHESIS    reduce using rule 47 (termino -> factor termino_loop .)
    ID              reduce using rule 47 (termino -> factor termino_loop .)
    INT             reduce using rule 47 (termino -> factor termino_loop .)
    FLOAT           reduce using rule 47 (termino -> factor termino_loop .)
    CHAR            reduce using rule 47 (termino -> factor termino_loop .)
    STRING          reduce using rule 47 (termino -> factor termino_loop .)
    BOOL            reduce using rule 47 (termino -> factor termino_loop .)
    RPARENTHESIS    reduce using rule 47 (termino -> factor termino_loop .)


state 102

    (77) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 127


state 103

    (71) varcte_type -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 71 (varcte_type -> ID varcte_arr .)
    DIVISION        reduce using rule 71 (varcte_type -> ID varcte_arr .)
    ADDITION        reduce using rule 71 (varcte_type -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 71 (varcte_type -> ID varcte_arr .)
    AND             reduce using rule 71 (varcte_type -> ID varcte_arr .)
    OR              reduce using rule 71 (varcte_type -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 71 (varcte_type -> ID varcte_arr .)
    ID              reduce using rule 71 (varcte_type -> ID varcte_arr .)
    INT             reduce using rule 71 (varcte_type -> ID varcte_arr .)
    FLOAT           reduce using rule 71 (varcte_type -> ID varcte_arr .)
    CHAR            reduce using rule 71 (varcte_type -> ID varcte_arr .)
    STRING          reduce using rule 71 (varcte_type -> ID varcte_arr .)
    BOOL            reduce using rule 71 (varcte_type -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 71 (varcte_type -> ID varcte_arr .)
    SEMICOLON       reduce using rule 71 (varcte_type -> ID varcte_arr .)
    LESS            reduce using rule 71 (varcte_type -> ID varcte_arr .)
    GREATER         reduce using rule 71 (varcte_type -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 71 (varcte_type -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 71 (varcte_type -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 71 (varcte_type -> ID varcte_arr .)
    EQUAL           reduce using rule 71 (varcte_type -> ID varcte_arr .)


state 104

    (85) ciclo -> WHILE LPARENTHESIS expresion . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 128


state 105

    (84) escritura_type -> QUOTE . CTESTRING QUOTE

    CTESTRING       shift and go to state 129


state 106

    (82) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 130


state 107

    (83) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 83 (escritura_type -> expresion .)


state 108

    (36) asignacion_option -> ASSIGN expresion . SEMICOLON

    SEMICOLON       shift and go to state 131


state 109

    (37) asignacion_option -> LBRACKET INT . RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 132


state 110

    (79) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS bloque condicion_option

    RPARENTHESIS    shift and go to state 133


state 111

    (90) argumentos -> ID addVarDirFunc COLON tipo . addTypeFunc argumentos_loop
    (94) addTypeFunc -> .

    COMA            reduce using rule 94 (addTypeFunc -> .)
    RPARENTHESIS    reduce using rule 94 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 134

state 112

    (57) expresion_option -> AND . nuevaexp
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 135
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 113

    (58) expresion_option -> OR . nuevaexp
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 136
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 114

    (56) expresion -> nuevaexp expresion_option . expresion_loop
    (60) expresion_loop -> . expresion
    (61) expresion_loop -> .
    (56) expresion -> . nuevaexp expresion_option expresion_loop
    (62) nuevaexp -> . exp nuevaexp_type
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    RPARENTHESIS    reduce using rule 61 (expresion_loop -> .)
    SEMICOLON       reduce using rule 61 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    expresion                      shift and go to state 138
    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    nuevaexp                       shift and go to state 90
    termino                        shift and go to state 75
    exp                            shift and go to state 92
    factor                         shift and go to state 77
    expresion_loop                 shift and go to state 137
    factor_var                     shift and go to state 79

state 115

    (55) factor_exp -> LPARENTHESIS expresion RPARENTHESIS .

    MULTIPLICATION  reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    DIVISION        reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    ADDITION        reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    SUBTRACTION     reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    LESS            reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    GREATER         reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    LESSEQUAL       reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    GREATEREQUAL    reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    NOTEQUAL        reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    EQUAL           reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    AND             reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    OR              reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    LPARENTHESIS    reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    ID              reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    INT             reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    FLOAT           reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    CHAR            reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    STRING          reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    BOOL            reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    RPARENTHESIS    reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)
    SEMICOLON       reduce using rule 55 (factor_exp -> LPARENTHESIS expresion RPARENTHESIS .)


state 116

    (67) nuevaexp_type -> NOTEQUAL . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 139
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 117

    (66) nuevaexp_type -> GREATEREQUAL . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 140
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 118

    (64) nuevaexp_type -> GREATER . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 141
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 119

    (63) nuevaexp_type -> LESS . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 142
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 120

    (68) nuevaexp_type -> EQUAL . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 143
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 121

    (62) nuevaexp -> exp nuevaexp_type .

    AND             reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    OR              reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    LPARENTHESIS    reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    ID              reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    INT             reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    FLOAT           reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    CHAR            reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    STRING          reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    BOOL            reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    SEMICOLON       reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)
    RPARENTHESIS    reduce using rule 62 (nuevaexp -> exp nuevaexp_type .)


state 122

    (65) nuevaexp_type -> LESSEQUAL . exp
    (42) exp -> . termino exp_loop
    (47) termino -> . factor termino_loop
    (52) factor -> . factor_var
    (53) factor -> . factor_exp
    (54) factor_var -> . varcte
    (55) factor_exp -> . LPARENTHESIS expresion RPARENTHESIS
    (70) varcte -> . varcte_type
    (71) varcte_type -> . ID varcte_arr
    (72) varcte_type -> . INT
    (73) varcte_type -> . FLOAT
    (74) varcte_type -> . CHAR
    (75) varcte_type -> . STRING
    (76) varcte_type -> . BOOL

    LPARENTHESIS    shift and go to state 70
    ID              shift and go to state 78
    INT             shift and go to state 68
    FLOAT           shift and go to state 66
    CHAR            shift and go to state 72
    STRING          shift and go to state 73
    BOOL            shift and go to state 74

    varcte                         shift and go to state 67
    factor_exp                     shift and go to state 69
    varcte_type                    shift and go to state 71
    termino                        shift and go to state 75
    exp                            shift and go to state 144
    factor                         shift and go to state 77
    factor_var                     shift and go to state 79

state 123

    (45) exp_type_loop -> ADDITION exp .

    SEMICOLON       reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    LESS            reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    GREATER         reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    LESSEQUAL       reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    GREATEREQUAL    reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    NOTEQUAL        reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    EQUAL           reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    AND             reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    OR              reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    LPARENTHESIS    reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    ID              reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    INT             reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    FLOAT           reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    CHAR            reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    STRING          reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    BOOL            reduce using rule 45 (exp_type_loop -> ADDITION exp .)
    RPARENTHESIS    reduce using rule 45 (exp_type_loop -> ADDITION exp .)


state 124

    (46) exp_type_loop -> SUBTRACTION exp .

    SEMICOLON       reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    LESS            reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    GREATER         reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    LESSEQUAL       reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    GREATEREQUAL    reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    NOTEQUAL        reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    EQUAL           reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    AND             reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    OR              reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    LPARENTHESIS    reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    ID              reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    INT             reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    FLOAT           reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    CHAR            reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    STRING          reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    BOOL            reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)
    RPARENTHESIS    reduce using rule 46 (exp_type_loop -> SUBTRACTION exp .)


state 125

    (51) termino_type_loop -> DIVISION termino .

    ADDITION        reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    SUBTRACTION     reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    SEMICOLON       reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    LESS            reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    GREATER         reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    LESSEQUAL       reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    GREATEREQUAL    reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    NOTEQUAL        reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    EQUAL           reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    AND             reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    OR              reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    LPARENTHESIS    reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    ID              reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    INT             reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    FLOAT           reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    CHAR            reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    STRING          reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    BOOL            reduce using rule 51 (termino_type_loop -> DIVISION termino .)
    RPARENTHESIS    reduce using rule 51 (termino_type_loop -> DIVISION termino .)


state 126

    (50) termino_type_loop -> MULTIPLICATION termino .

    ADDITION        reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    SUBTRACTION     reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    SEMICOLON       reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    LESS            reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    GREATER         reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    LESSEQUAL       reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    GREATEREQUAL    reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    NOTEQUAL        reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    EQUAL           reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    AND             reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    OR              reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    LPARENTHESIS    reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    ID              reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    INT             reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    FLOAT           reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    CHAR            reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    STRING          reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    BOOL            reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)
    RPARENTHESIS    reduce using rule 50 (termino_type_loop -> MULTIPLICATION termino .)


state 127

    (77) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    INT             reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    CHAR            reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    STRING          reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    BOOL            reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 77 (varcte_arr -> LBRACKET RBRACKET .)


state 128

    (85) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS . bloque
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 43

    bloque                         shift and go to state 145

state 129

    (84) escritura_type -> QUOTE CTESTRING . QUOTE

    QUOTE           shift and go to state 146


state 130

    (82) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 147


state 131

    (36) asignacion_option -> ASSIGN expresion SEMICOLON .

    ID              reduce using rule 36 (asignacion_option -> ASSIGN expresion SEMICOLON .)
    IF              reduce using rule 36 (asignacion_option -> ASSIGN expresion SEMICOLON .)
    PRINT           reduce using rule 36 (asignacion_option -> ASSIGN expresion SEMICOLON .)
    RETURN          reduce using rule 36 (asignacion_option -> ASSIGN expresion SEMICOLON .)
    WHILE           reduce using rule 36 (asignacion_option -> ASSIGN expresion SEMICOLON .)
    RCURLY          reduce using rule 36 (asignacion_option -> ASSIGN expresion SEMICOLON .)


state 132

    (37) asignacion_option -> LBRACKET INT RBRACKET . ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 148


state 133

    (79) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . bloque condicion_option
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 43

    bloque                         shift and go to state 149

state 134

    (90) argumentos -> ID addVarDirFunc COLON tipo addTypeFunc . argumentos_loop
    (91) argumentos_loop -> . COMA argumentos
    (92) argumentos_loop -> .

    COMA            shift and go to state 151
    RPARENTHESIS    reduce using rule 92 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 150

state 135

    (57) expresion_option -> AND nuevaexp .

    LPARENTHESIS    reduce using rule 57 (expresion_option -> AND nuevaexp .)
    ID              reduce using rule 57 (expresion_option -> AND nuevaexp .)
    INT             reduce using rule 57 (expresion_option -> AND nuevaexp .)
    FLOAT           reduce using rule 57 (expresion_option -> AND nuevaexp .)
    CHAR            reduce using rule 57 (expresion_option -> AND nuevaexp .)
    STRING          reduce using rule 57 (expresion_option -> AND nuevaexp .)
    BOOL            reduce using rule 57 (expresion_option -> AND nuevaexp .)
    RPARENTHESIS    reduce using rule 57 (expresion_option -> AND nuevaexp .)
    SEMICOLON       reduce using rule 57 (expresion_option -> AND nuevaexp .)


state 136

    (58) expresion_option -> OR nuevaexp .

    LPARENTHESIS    reduce using rule 58 (expresion_option -> OR nuevaexp .)
    ID              reduce using rule 58 (expresion_option -> OR nuevaexp .)
    INT             reduce using rule 58 (expresion_option -> OR nuevaexp .)
    FLOAT           reduce using rule 58 (expresion_option -> OR nuevaexp .)
    CHAR            reduce using rule 58 (expresion_option -> OR nuevaexp .)
    STRING          reduce using rule 58 (expresion_option -> OR nuevaexp .)
    BOOL            reduce using rule 58 (expresion_option -> OR nuevaexp .)
    RPARENTHESIS    reduce using rule 58 (expresion_option -> OR nuevaexp .)
    SEMICOLON       reduce using rule 58 (expresion_option -> OR nuevaexp .)


state 137

    (56) expresion -> nuevaexp expresion_option expresion_loop .

    RPARENTHESIS    reduce using rule 56 (expresion -> nuevaexp expresion_option expresion_loop .)
    SEMICOLON       reduce using rule 56 (expresion -> nuevaexp expresion_option expresion_loop .)


state 138

    (60) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 60 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 60 (expresion_loop -> expresion .)


state 139

    (67) nuevaexp_type -> NOTEQUAL exp .

    AND             reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    OR              reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    LPARENTHESIS    reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    ID              reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    INT             reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    FLOAT           reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    CHAR            reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    STRING          reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    BOOL            reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    RPARENTHESIS    reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)
    SEMICOLON       reduce using rule 67 (nuevaexp_type -> NOTEQUAL exp .)


state 140

    (66) nuevaexp_type -> GREATEREQUAL exp .

    AND             reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    OR              reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    LPARENTHESIS    reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    ID              reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    INT             reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    FLOAT           reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    CHAR            reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    STRING          reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    BOOL            reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    RPARENTHESIS    reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)
    SEMICOLON       reduce using rule 66 (nuevaexp_type -> GREATEREQUAL exp .)


state 141

    (64) nuevaexp_type -> GREATER exp .

    AND             reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    OR              reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    LPARENTHESIS    reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    ID              reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    INT             reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    FLOAT           reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    CHAR            reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    STRING          reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    BOOL            reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    RPARENTHESIS    reduce using rule 64 (nuevaexp_type -> GREATER exp .)
    SEMICOLON       reduce using rule 64 (nuevaexp_type -> GREATER exp .)


state 142

    (63) nuevaexp_type -> LESS exp .

    AND             reduce using rule 63 (nuevaexp_type -> LESS exp .)
    OR              reduce using rule 63 (nuevaexp_type -> LESS exp .)
    LPARENTHESIS    reduce using rule 63 (nuevaexp_type -> LESS exp .)
    ID              reduce using rule 63 (nuevaexp_type -> LESS exp .)
    INT             reduce using rule 63 (nuevaexp_type -> LESS exp .)
    FLOAT           reduce using rule 63 (nuevaexp_type -> LESS exp .)
    CHAR            reduce using rule 63 (nuevaexp_type -> LESS exp .)
    STRING          reduce using rule 63 (nuevaexp_type -> LESS exp .)
    BOOL            reduce using rule 63 (nuevaexp_type -> LESS exp .)
    RPARENTHESIS    reduce using rule 63 (nuevaexp_type -> LESS exp .)
    SEMICOLON       reduce using rule 63 (nuevaexp_type -> LESS exp .)


state 143

    (68) nuevaexp_type -> EQUAL exp .

    AND             reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    OR              reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    LPARENTHESIS    reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    ID              reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    INT             reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    FLOAT           reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    CHAR            reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    STRING          reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    BOOL            reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    RPARENTHESIS    reduce using rule 68 (nuevaexp_type -> EQUAL exp .)
    SEMICOLON       reduce using rule 68 (nuevaexp_type -> EQUAL exp .)


state 144

    (65) nuevaexp_type -> LESSEQUAL exp .

    AND             reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    OR              reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    LPARENTHESIS    reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    ID              reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    INT             reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    FLOAT           reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    CHAR            reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    STRING          reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    BOOL            reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    RPARENTHESIS    reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)
    SEMICOLON       reduce using rule 65 (nuevaexp_type -> LESSEQUAL exp .)


state 145

    (85) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .

    ID              reduce using rule 85 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    IF              reduce using rule 85 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    PRINT           reduce using rule 85 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RETURN          reduce using rule 85 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    WHILE           reduce using rule 85 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RCURLY          reduce using rule 85 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)


state 146

    (84) escritura_type -> QUOTE CTESTRING QUOTE .

    RPARENTHESIS    reduce using rule 84 (escritura_type -> QUOTE CTESTRING QUOTE .)


state 147

    (82) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 82 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 82 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 82 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 82 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 82 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 82 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 148

    (37) asignacion_option -> LBRACKET INT RBRACKET ASSIGN . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 152


state 149

    (79) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque . condicion_option
    (80) condicion_option -> . ELSE bloque
    (81) condicion_option -> .

    ELSE            shift and go to state 153
    ID              reduce using rule 81 (condicion_option -> .)
    IF              reduce using rule 81 (condicion_option -> .)
    PRINT           reduce using rule 81 (condicion_option -> .)
    RETURN          reduce using rule 81 (condicion_option -> .)
    WHILE           reduce using rule 81 (condicion_option -> .)
    RCURLY          reduce using rule 81 (condicion_option -> .)

    condicion_option               shift and go to state 154

state 150

    (90) argumentos -> ID addVarDirFunc COLON tipo addTypeFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 90 (argumentos -> ID addVarDirFunc COLON tipo addTypeFunc argumentos_loop .)


state 151

    (91) argumentos_loop -> COMA . argumentos
    (90) argumentos -> . ID addVarDirFunc COLON tipo addTypeFunc argumentos_loop

    ID              shift and go to state 47

    argumentos                     shift and go to state 155

state 152

    (37) asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET . asignacion_type RBRACKET SEMICOLON
    (38) asignacion_type -> . INT
    (39) asignacion_type -> . FLOAT
    (40) asignacion_type -> . INT COMA asignacion_type
    (41) asignacion_type -> . FLOAT COMA asignacion_type

    INT             shift and go to state 156
    FLOAT           shift and go to state 157

    asignacion_type                shift and go to state 158

state 153

    (80) condicion_option -> ELSE . bloque
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 43

    bloque                         shift and go to state 159

state 154

    (79) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .

    ID              reduce using rule 79 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    IF              reduce using rule 79 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    PRINT           reduce using rule 79 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    RETURN          reduce using rule 79 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    WHILE           reduce using rule 79 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    RCURLY          reduce using rule 79 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)


state 155

    (91) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 91 (argumentos_loop -> COMA argumentos .)


state 156

    (38) asignacion_type -> INT .
    (40) asignacion_type -> INT . COMA asignacion_type

    RBRACKET        reduce using rule 38 (asignacion_type -> INT .)
    COMA            shift and go to state 160


state 157

    (39) asignacion_type -> FLOAT .
    (41) asignacion_type -> FLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 39 (asignacion_type -> FLOAT .)
    COMA            shift and go to state 161


state 158

    (37) asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 162


state 159

    (80) condicion_option -> ELSE bloque .

    ID              reduce using rule 80 (condicion_option -> ELSE bloque .)
    IF              reduce using rule 80 (condicion_option -> ELSE bloque .)
    PRINT           reduce using rule 80 (condicion_option -> ELSE bloque .)
    RETURN          reduce using rule 80 (condicion_option -> ELSE bloque .)
    WHILE           reduce using rule 80 (condicion_option -> ELSE bloque .)
    RCURLY          reduce using rule 80 (condicion_option -> ELSE bloque .)


state 160

    (40) asignacion_type -> INT COMA . asignacion_type
    (38) asignacion_type -> . INT
    (39) asignacion_type -> . FLOAT
    (40) asignacion_type -> . INT COMA asignacion_type
    (41) asignacion_type -> . FLOAT COMA asignacion_type

    INT             shift and go to state 156
    FLOAT           shift and go to state 157

    asignacion_type                shift and go to state 163

state 161

    (41) asignacion_type -> FLOAT COMA . asignacion_type
    (38) asignacion_type -> . INT
    (39) asignacion_type -> . FLOAT
    (40) asignacion_type -> . INT COMA asignacion_type
    (41) asignacion_type -> . FLOAT COMA asignacion_type

    INT             shift and go to state 156
    FLOAT           shift and go to state 157

    asignacion_type                shift and go to state 164

state 162

    (37) asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 165


state 163

    (40) asignacion_type -> INT COMA asignacion_type .

    RBRACKET        reduce using rule 40 (asignacion_type -> INT COMA asignacion_type .)


state 164

    (41) asignacion_type -> FLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 41 (asignacion_type -> FLOAT COMA asignacion_type .)


state 165

    (37) asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 37 (asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 37 (asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 37 (asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 37 (asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 37 (asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 37 (asignacion_option -> LBRACKET INT RBRACKET ASSIGN LBRACKET asignacion_type RBRACKET SEMICOLON .)

