Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END
Rule 2     add_main_goto -> <empty>
Rule 3     init_goto -> <empty>
Rule 4     variables_globales -> var_global variables_globales
Rule 5     variables_globales -> <empty>
Rule 6     var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop
Rule 7     variable_global_id_loop -> variable_global_id_loop_coma COLON tipo global_addType
Rule 8     variable_global_id_loop_coma -> ID add_pila_var_globales
Rule 9     variable_global_id_loop_coma -> ID add_pila_var_globales COMA variable_global_id_loop_coma
Rule 10    add_pila_var_globales -> <empty>
Rule 11    variable_global_end_loop -> var_global
Rule 12    variable_global_end_loop -> <empty>
Rule 13    global_addType -> <empty>
Rule 14    variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop
Rule 15    variable_local_id_loop -> variable_local_id_loop_coma COLON tipo local_addType
Rule 16    variable_local_id_loop_coma -> ID add_pila_var_locales
Rule 17    variable_local_id_loop_coma -> ID add_pila_var_locales COMA variable_local_id_loop_coma
Rule 18    add_pila_var_locales -> <empty>
Rule 19    variable_local_end_loop -> variables_locales
Rule 20    variable_local_end_loop -> <empty>
Rule 21    local_addType -> <empty>
Rule 22    declaracion_funciones -> funcion declaracion_funciones
Rule 23    declaracion_funciones -> <empty>
Rule 24    funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
Rule 25    add_dir_funciones -> <empty>
Rule 26    params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
Rule 27    params -> <empty>
Rule 28    params_loop -> COMA ID add_pila_funciones params_loop
Rule 29    params_loop -> <empty>
Rule 30    add_pila_funciones -> <empty>
Rule 31    add_cantidad_vars -> <empty>
Rule 32    semicolon_function_loop -> SEMICOLON params
Rule 33    semicolon_function_loop -> <empty>
Rule 34    vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
Rule 35    vars_locales_funcion -> <empty>
Rule 36    vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop
Rule 37    vars_locales_id_loop -> <empty>
Rule 38    semicolon_function_local_loop -> SEMICOLON vars_locales_funcion
Rule 39    semicolon_function_local_loop -> <empty>
Rule 40    function_add_type -> <empty>
Rule 41    function_local_add_type -> <empty>
Rule 42    return_cuad -> <empty>
Rule 43    add_dir_proc -> <empty>
Rule 44    update_dir_proc -> <empty>
Rule 45    tipo -> INTTYPE
Rule 46    tipo -> FLOATTYPE
Rule 47    tipo -> CHARTYPE
Rule 48    tipo -> BOOLTYPE
Rule 49    tipo -> VOIDTYPE
Rule 50    bloque -> LCURLY bloque_est_loop RCURLY
Rule 51    bloque_est_loop -> estatuto bloque_est_loop
Rule 52    bloque_est_loop -> <empty>
Rule 53    estatuto -> asignacion
Rule 54    estatuto -> condicion
Rule 55    estatuto -> escritura
Rule 56    estatuto -> regreso
Rule 57    estatuto -> ciclo
Rule 58    estatuto -> variables_locales
Rule 59    regreso -> RETURN exp SEMICOLON
Rule 60    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 61    escritura_type -> expresion
Rule 62    escritura_type -> QUOTE CTECHAR QUOTE
Rule 63    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 64    nodo16 -> <empty>
Rule 65    nodo17 -> <empty>
Rule 66    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 67    condicion_option -> ELSE nodo14 bloque
Rule 68    condicion_option -> <empty>
Rule 69    nodo15 -> <empty>
Rule 70    nodo14 -> <empty>
Rule 71    nodo13 -> <empty>
Rule 72    expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 73    expresion_option -> AND nodo12_and nuevaexp
Rule 74    expresion_option -> OR nodo12_or nuevaexp
Rule 75    expresion_option -> <empty>
Rule 76    expresion_loop -> expresion
Rule 77    expresion_loop -> <empty>
Rule 78    nodo12_and -> <empty>
Rule 79    nodo12_or -> <empty>
Rule 80    nodo11 -> <empty>
Rule 81    nuevaexp -> exp nuevaexp_type nodo10
Rule 82    nuevaexp_type -> LESS nodo9_menor exp
Rule 83    nuevaexp_type -> GREATER nodo9_mayor exp
Rule 84    nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 85    nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 86    nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 87    nuevaexp_type -> EQUAL nodo9_igual exp
Rule 88    nuevaexp_type -> <empty>
Rule 89    nodo10 -> <empty>
Rule 90    nodo9_menor -> <empty>
Rule 91    nodo9_mayor -> <empty>
Rule 92    nodo9_menorig -> <empty>
Rule 93    nodo9_mayorig -> <empty>
Rule 94    nodo9_dif -> <empty>
Rule 95    nodo9_igual -> <empty>
Rule 96    asignacion -> ID asignacion_option
Rule 97    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 98    asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON
Rule 99    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 100   asignacion_type -> CTEINT
Rule 101   asignacion_type -> CTEFLOAT
Rule 102   asignacion_type -> CTEINT COMA asignacion_type
Rule 103   asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 104   function_call -> <empty>
Rule 105   func_params -> expresion param_cuad func_params_loop
Rule 106   func_params_loop -> COMA expresion param_cuad func_params_loop
Rule 107   func_params_loop -> <empty>
Rule 108   gosub -> <empty>
Rule 109   param_cuad -> <empty>
Rule 110   nodo8 -> <empty>
Rule 111   exp -> termino nodo5 exp_loop
Rule 112   exp_loop -> exp_type_loop
Rule 113   exp_loop -> <empty>
Rule 114   exp_type_loop -> ADDITION nodo3_suma exp
Rule 115   exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 116   nodo3_suma -> <empty>
Rule 117   nodo3_resta -> <empty>
Rule 118   nodo5 -> <empty>
Rule 119   termino -> factor nodo4 termino_loop
Rule 120   termino_loop -> termino_type_loop
Rule 121   termino_loop -> <empty>
Rule 122   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 123   termino_type_loop -> DIVISION nodo2_div termino
Rule 124   nodo2_mult -> <empty>
Rule 125   nodo2_div -> <empty>
Rule 126   nodo4 -> <empty>
Rule 127   factor -> factor_var
Rule 128   factor -> factor_exp
Rule 129   factor_var -> varcte nodo1
Rule 130   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 131   nodo1 -> <empty>
Rule 132   nodo6 -> <empty>
Rule 133   nodo7 -> <empty>
Rule 134   varcte -> ID nodoCteV
Rule 135   varcte -> CTEINT nodoCteE
Rule 136   varcte -> CTEFLOAT nodoCteF
Rule 137   varcte -> CTEBOOL nodoCteB
Rule 138   varcte -> CTECHAR nodoCteC
Rule 139   CTEBOOL -> TRUE
Rule 140   CTEBOOL -> FALSE
Rule 141   nodoCteV -> <empty>
Rule 142   nodoCteE -> <empty>
Rule 143   nodoCteF -> <empty>
Rule 144   nodoCteB -> <empty>
Rule 145   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 114
AND                  : 73
ASSIGN               : 97 98 99
BOOLTYPE             : 48
CALL                 : 98
CHARTYPE             : 47
COLON                : 7 15 26 34
COMA                 : 9 17 28 36 102 103 106
CTECHAR              : 62 138
CTEFLOAT             : 101 103 136
CTEINT               : 99 100 102 135
DIVISION             : 123
ELSE                 : 67
END                  : 1
EQUAL                : 87
FALSE                : 140
FLOATTYPE            : 46
FUNC                 : 24
GREATER              : 83
GREATEREQUAL         : 85
ID                   : 1 8 9 16 17 24 26 28 34 36 96 98 134
IF                   : 66
INTTYPE              : 45
LBRACKET             : 99 99
LCURLY               : 50
LESS                 : 82
LESSEQUAL            : 84
LPARENTHESIS         : 1 24 60 63 66 98 130
MAIN                 : 1
MULTIPLICATION       : 122
NOTEQUAL             : 86
OR                   : 74
PRINT                : 60
PROGRAM              : 1
QUOTE                : 62 62
RBRACKET             : 99 99
RCURLY               : 50
RETURN               : 59
RPARENTHESIS         : 1 24 60 63 66 98 130
SEMICOLON            : 1 6 14 32 38 59 60 97 98 99
SUBTRACTION          : 115
TRUE                 : 139
VAR                  : 6 14 34
VOIDTYPE             : 49
WHILE                : 63
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 137
add_cantidad_vars    : 24
add_dir_funciones    : 24
add_dir_proc         : 1
add_main_goto        : 1
add_pila_funciones   : 26 28 34 36
add_pila_var_globales : 8 9
add_pila_var_locales : 16 17
asignacion           : 53
asignacion_option    : 96
asignacion_type      : 99 102 103
bloque               : 1 24 63 66 67
bloque_est_loop      : 50 51
ciclo                : 57
condicion            : 54
condicion_option     : 66
declaracion_funciones : 1 22
escritura            : 55
escritura_type       : 60
estatuto             : 51
exp                  : 59 81 82 83 84 85 86 87 114 115
exp_loop             : 111
exp_type_loop        : 112
expresion            : 61 63 66 76 97 105 106 130
expresion_loop       : 72
expresion_option     : 72
factor               : 119
factor_exp           : 128
factor_var           : 127
func_params          : 98
func_params_loop     : 105 106
funcion              : 22
function_add_type    : 26
function_call        : 98
function_local_add_type : 34
global_addType       : 7
gosub                : 98
init_goto            : 1
local_addType        : 15
nodo1                : 129
nodo10               : 81
nodo11               : 72
nodo12_and           : 73
nodo12_or            : 74
nodo13               : 63 66
nodo14               : 67
nodo15               : 66
nodo16               : 63
nodo17               : 63
nodo2_div            : 123
nodo2_mult           : 122
nodo3_resta          : 115
nodo3_suma           : 114
nodo4                : 119
nodo5                : 111
nodo6                : 130
nodo7                : 130
nodo8                : 97 99
nodo9_dif            : 86
nodo9_igual          : 87
nodo9_mayor          : 83
nodo9_mayorig        : 85
nodo9_menor          : 82
nodo9_menorig        : 84
nodoCteB             : 137
nodoCteC             : 138
nodoCteE             : 135
nodoCteF             : 136
nodoCteV             : 134
nuevaexp             : 72 73 74
nuevaexp_type        : 81
param_cuad           : 105 106
params               : 24 32
params_loop          : 26 28
programa             : 0
regreso              : 56
return_cuad          : 24
semicolon_function_local_loop : 34
semicolon_function_loop : 26
termino              : 111 122 123
termino_loop         : 119
termino_type_loop    : 120
tipo                 : 7 15 24 26 34
update_dir_proc      : 1
var_global           : 4 11
varcte               : 129
variable_global_end_loop : 6
variable_global_id_loop : 6
variable_global_id_loop_coma : 7 9
variable_local_end_loop : 14
variable_local_id_loop : 14
variable_local_id_loop_coma : 15 17
variables_globales   : 1 4
variables_locales    : 19 58
vars_locales_funcion : 24 38
vars_locales_id_loop : 34 36

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END
    (43) add_dir_proc -> .

    VAR             reduce using rule 43 (add_dir_proc -> .)
    INTTYPE         reduce using rule 43 (add_dir_proc -> .)
    FLOATTYPE       reduce using rule 43 (add_dir_proc -> .)
    CHARTYPE        reduce using rule 43 (add_dir_proc -> .)
    BOOLTYPE        reduce using rule 43 (add_dir_proc -> .)
    VOIDTYPE        reduce using rule 43 (add_dir_proc -> .)
    MAIN            reduce using rule 43 (add_dir_proc -> .)

    add_dir_proc                   shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc . variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END
    (4) variables_globales -> . var_global variables_globales
    (5) variables_globales -> .
    (6) var_global -> . VAR variable_global_id_loop SEMICOLON variable_global_end_loop

    INTTYPE         reduce using rule 5 (variables_globales -> .)
    FLOATTYPE       reduce using rule 5 (variables_globales -> .)
    CHARTYPE        reduce using rule 5 (variables_globales -> .)
    BOOLTYPE        reduce using rule 5 (variables_globales -> .)
    VOIDTYPE        reduce using rule 5 (variables_globales -> .)
    MAIN            reduce using rule 5 (variables_globales -> .)
    VAR             shift and go to state 8

    variables_globales             shift and go to state 6
    var_global                     shift and go to state 7

state 6

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales . add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END
    (2) add_main_goto -> .

    INTTYPE         reduce using rule 2 (add_main_goto -> .)
    FLOATTYPE       reduce using rule 2 (add_main_goto -> .)
    CHARTYPE        reduce using rule 2 (add_main_goto -> .)
    BOOLTYPE        reduce using rule 2 (add_main_goto -> .)
    VOIDTYPE        reduce using rule 2 (add_main_goto -> .)
    MAIN            reduce using rule 2 (add_main_goto -> .)

    add_main_goto                  shift and go to state 9

state 7

    (4) variables_globales -> var_global . variables_globales
    (4) variables_globales -> . var_global variables_globales
    (5) variables_globales -> .
    (6) var_global -> . VAR variable_global_id_loop SEMICOLON variable_global_end_loop

    INTTYPE         reduce using rule 5 (variables_globales -> .)
    FLOATTYPE       reduce using rule 5 (variables_globales -> .)
    CHARTYPE        reduce using rule 5 (variables_globales -> .)
    BOOLTYPE        reduce using rule 5 (variables_globales -> .)
    VOIDTYPE        reduce using rule 5 (variables_globales -> .)
    MAIN            reduce using rule 5 (variables_globales -> .)
    VAR             shift and go to state 8

    variables_globales             shift and go to state 10
    var_global                     shift and go to state 7

state 8

    (6) var_global -> VAR . variable_global_id_loop SEMICOLON variable_global_end_loop
    (7) variable_global_id_loop -> . variable_global_id_loop_coma COLON tipo global_addType
    (8) variable_global_id_loop_coma -> . ID add_pila_var_globales
    (9) variable_global_id_loop_coma -> . ID add_pila_var_globales COMA variable_global_id_loop_coma

    ID              shift and go to state 13

    variable_global_id_loop        shift and go to state 11
    variable_global_id_loop_coma   shift and go to state 12

state 9

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto . update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END
    (44) update_dir_proc -> .

    INTTYPE         reduce using rule 44 (update_dir_proc -> .)
    FLOATTYPE       reduce using rule 44 (update_dir_proc -> .)
    CHARTYPE        reduce using rule 44 (update_dir_proc -> .)
    BOOLTYPE        reduce using rule 44 (update_dir_proc -> .)
    VOIDTYPE        reduce using rule 44 (update_dir_proc -> .)
    MAIN            reduce using rule 44 (update_dir_proc -> .)

    update_dir_proc                shift and go to state 14

state 10

    (4) variables_globales -> var_global variables_globales .

    INTTYPE         reduce using rule 4 (variables_globales -> var_global variables_globales .)
    FLOATTYPE       reduce using rule 4 (variables_globales -> var_global variables_globales .)
    CHARTYPE        reduce using rule 4 (variables_globales -> var_global variables_globales .)
    BOOLTYPE        reduce using rule 4 (variables_globales -> var_global variables_globales .)
    VOIDTYPE        reduce using rule 4 (variables_globales -> var_global variables_globales .)
    MAIN            reduce using rule 4 (variables_globales -> var_global variables_globales .)


state 11

    (6) var_global -> VAR variable_global_id_loop . SEMICOLON variable_global_end_loop

    SEMICOLON       shift and go to state 15


state 12

    (7) variable_global_id_loop -> variable_global_id_loop_coma . COLON tipo global_addType

    COLON           shift and go to state 16


state 13

    (8) variable_global_id_loop_coma -> ID . add_pila_var_globales
    (9) variable_global_id_loop_coma -> ID . add_pila_var_globales COMA variable_global_id_loop_coma
    (10) add_pila_var_globales -> .

    COMA            reduce using rule 10 (add_pila_var_globales -> .)
    COLON           reduce using rule 10 (add_pila_var_globales -> .)

    add_pila_var_globales          shift and go to state 17

state 14

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc . declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END
    (22) declaracion_funciones -> . funcion declaracion_funciones
    (23) declaracion_funciones -> .
    (24) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (45) tipo -> . INTTYPE
    (46) tipo -> . FLOATTYPE
    (47) tipo -> . CHARTYPE
    (48) tipo -> . BOOLTYPE
    (49) tipo -> . VOIDTYPE

    MAIN            reduce using rule 23 (declaracion_funciones -> .)
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    declaracion_funciones          shift and go to state 18
    tipo                           shift and go to state 24
    funcion                        shift and go to state 20

state 15

    (6) var_global -> VAR variable_global_id_loop SEMICOLON . variable_global_end_loop
    (11) variable_global_end_loop -> . var_global
    (12) variable_global_end_loop -> .
    (6) var_global -> . VAR variable_global_id_loop SEMICOLON variable_global_end_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 12 (variable_global_end_loop -> .)
    FLOATTYPE       reduce using rule 12 (variable_global_end_loop -> .)
    CHARTYPE        reduce using rule 12 (variable_global_end_loop -> .)
    BOOLTYPE        reduce using rule 12 (variable_global_end_loop -> .)
    VOIDTYPE        reduce using rule 12 (variable_global_end_loop -> .)
    MAIN            reduce using rule 12 (variable_global_end_loop -> .)
    VAR             shift and go to state 8

  ! VAR             [ reduce using rule 12 (variable_global_end_loop -> .) ]

    variable_global_end_loop       shift and go to state 26
    var_global                     shift and go to state 27

state 16

    (7) variable_global_id_loop -> variable_global_id_loop_coma COLON . tipo global_addType
    (45) tipo -> . INTTYPE
    (46) tipo -> . FLOATTYPE
    (47) tipo -> . CHARTYPE
    (48) tipo -> . BOOLTYPE
    (49) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 28

state 17

    (8) variable_global_id_loop_coma -> ID add_pila_var_globales .
    (9) variable_global_id_loop_coma -> ID add_pila_var_globales . COMA variable_global_id_loop_coma

    COLON           reduce using rule 8 (variable_global_id_loop_coma -> ID add_pila_var_globales .)
    COMA            shift and go to state 29


state 18

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones . MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 30


state 19

    (47) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 47 (tipo -> CHARTYPE .)
    LCURLY          reduce using rule 47 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 47 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 47 (tipo -> CHARTYPE .)


state 20

    (22) declaracion_funciones -> funcion . declaracion_funciones
    (22) declaracion_funciones -> . funcion declaracion_funciones
    (23) declaracion_funciones -> .
    (24) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (45) tipo -> . INTTYPE
    (46) tipo -> . FLOATTYPE
    (47) tipo -> . CHARTYPE
    (48) tipo -> . BOOLTYPE
    (49) tipo -> . VOIDTYPE

    MAIN            reduce using rule 23 (declaracion_funciones -> .)
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    declaracion_funciones          shift and go to state 31
    tipo                           shift and go to state 24
    funcion                        shift and go to state 20

state 21

    (48) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 48 (tipo -> BOOLTYPE .)
    LCURLY          reduce using rule 48 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 48 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 48 (tipo -> BOOLTYPE .)


state 22

    (46) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 46 (tipo -> FLOATTYPE .)
    LCURLY          reduce using rule 46 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 46 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 46 (tipo -> FLOATTYPE .)


state 23

    (45) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 45 (tipo -> INTTYPE .)
    LCURLY          reduce using rule 45 (tipo -> INTTYPE .)
    FUNC            reduce using rule 45 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 45 (tipo -> INTTYPE .)


state 24

    (24) funcion -> tipo . FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    FUNC            shift and go to state 32


state 25

    (49) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 49 (tipo -> VOIDTYPE .)
    LCURLY          reduce using rule 49 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 49 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 49 (tipo -> VOIDTYPE .)


state 26

    (6) var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .

    VAR             reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    INTTYPE         reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    FLOATTYPE       reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    CHARTYPE        reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    BOOLTYPE        reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    VOIDTYPE        reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    MAIN            reduce using rule 6 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)


state 27

    (11) variable_global_end_loop -> var_global .

    VAR             reduce using rule 11 (variable_global_end_loop -> var_global .)
    INTTYPE         reduce using rule 11 (variable_global_end_loop -> var_global .)
    FLOATTYPE       reduce using rule 11 (variable_global_end_loop -> var_global .)
    CHARTYPE        reduce using rule 11 (variable_global_end_loop -> var_global .)
    BOOLTYPE        reduce using rule 11 (variable_global_end_loop -> var_global .)
    VOIDTYPE        reduce using rule 11 (variable_global_end_loop -> var_global .)
    MAIN            reduce using rule 11 (variable_global_end_loop -> var_global .)


state 28

    (7) variable_global_id_loop -> variable_global_id_loop_coma COLON tipo . global_addType
    (13) global_addType -> .

    SEMICOLON       reduce using rule 13 (global_addType -> .)

    global_addType                 shift and go to state 33

state 29

    (9) variable_global_id_loop_coma -> ID add_pila_var_globales COMA . variable_global_id_loop_coma
    (8) variable_global_id_loop_coma -> . ID add_pila_var_globales
    (9) variable_global_id_loop_coma -> . ID add_pila_var_globales COMA variable_global_id_loop_coma

    ID              shift and go to state 13

    variable_global_id_loop_coma   shift and go to state 34

state 30

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN . init_goto LPARENTHESIS RPARENTHESIS bloque END
    (3) init_goto -> .

    LPARENTHESIS    reduce using rule 3 (init_goto -> .)

    init_goto                      shift and go to state 35

state 31

    (22) declaracion_funciones -> funcion declaracion_funciones .

    MAIN            reduce using rule 22 (declaracion_funciones -> funcion declaracion_funciones .)


state 32

    (24) funcion -> tipo FUNC . ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    ID              shift and go to state 36


state 33

    (7) variable_global_id_loop -> variable_global_id_loop_coma COLON tipo global_addType .

    SEMICOLON       reduce using rule 7 (variable_global_id_loop -> variable_global_id_loop_coma COLON tipo global_addType .)


state 34

    (9) variable_global_id_loop_coma -> ID add_pila_var_globales COMA variable_global_id_loop_coma .

    COLON           reduce using rule 9 (variable_global_id_loop_coma -> ID add_pila_var_globales COMA variable_global_id_loop_coma .)


state 35

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 37


state 36

    (24) funcion -> tipo FUNC ID . add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (25) add_dir_funciones -> .

    LPARENTHESIS    reduce using rule 25 (add_dir_funciones -> .)

    add_dir_funciones              shift and go to state 38

state 37

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 39


state 38

    (24) funcion -> tipo FUNC ID add_dir_funciones . LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    LPARENTHESIS    shift and go to state 40


state 39

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS . bloque END
    (50) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 41

    bloque                         shift and go to state 42

state 40

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS . params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (26) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (27) params -> .

    ID              shift and go to state 44
    RPARENTHESIS    reduce using rule 27 (params -> .)

    params                         shift and go to state 43

state 41

    (50) bloque -> LCURLY . bloque_est_loop RCURLY
    (51) bloque_est_loop -> . estatuto bloque_est_loop
    (52) bloque_est_loop -> .
    (53) estatuto -> . asignacion
    (54) estatuto -> . condicion
    (55) estatuto -> . escritura
    (56) estatuto -> . regreso
    (57) estatuto -> . ciclo
    (58) estatuto -> . variables_locales
    (96) asignacion -> . ID asignacion_option
    (66) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (60) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (59) regreso -> . RETURN exp SEMICOLON
    (63) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (14) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

    RCURLY          reduce using rule 52 (bloque_est_loop -> .)
    ID              shift and go to state 53
    IF              shift and go to state 54
    PRINT           shift and go to state 47
    RETURN          shift and go to state 45
    WHILE           shift and go to state 46
    VAR             shift and go to state 52

    regreso                        shift and go to state 55
    ciclo                          shift and go to state 48
    asignacion                     shift and go to state 56
    estatuto                       shift and go to state 49
    variables_locales              shift and go to state 51
    condicion                      shift and go to state 50
    bloque_est_loop                shift and go to state 57
    escritura                      shift and go to state 58

state 42

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 59


state 43

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params . RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    RPARENTHESIS    shift and go to state 60


state 44

    (26) params -> ID . add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (30) add_pila_funciones -> .

    COMA            reduce using rule 30 (add_pila_funciones -> .)
    COLON           reduce using rule 30 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 61

state 45

    (59) regreso -> RETURN . exp SEMICOLON
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 73
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 46

    (63) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 76


state 47

    (60) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 77


state 48

    (57) estatuto -> ciclo .

    ID              reduce using rule 57 (estatuto -> ciclo .)
    IF              reduce using rule 57 (estatuto -> ciclo .)
    PRINT           reduce using rule 57 (estatuto -> ciclo .)
    RETURN          reduce using rule 57 (estatuto -> ciclo .)
    WHILE           reduce using rule 57 (estatuto -> ciclo .)
    VAR             reduce using rule 57 (estatuto -> ciclo .)
    RCURLY          reduce using rule 57 (estatuto -> ciclo .)


state 49

    (51) bloque_est_loop -> estatuto . bloque_est_loop
    (51) bloque_est_loop -> . estatuto bloque_est_loop
    (52) bloque_est_loop -> .
    (53) estatuto -> . asignacion
    (54) estatuto -> . condicion
    (55) estatuto -> . escritura
    (56) estatuto -> . regreso
    (57) estatuto -> . ciclo
    (58) estatuto -> . variables_locales
    (96) asignacion -> . ID asignacion_option
    (66) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (60) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (59) regreso -> . RETURN exp SEMICOLON
    (63) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (14) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

    RCURLY          reduce using rule 52 (bloque_est_loop -> .)
    ID              shift and go to state 53
    IF              shift and go to state 54
    PRINT           shift and go to state 47
    RETURN          shift and go to state 45
    WHILE           shift and go to state 46
    VAR             shift and go to state 52

    regreso                        shift and go to state 55
    ciclo                          shift and go to state 48
    asignacion                     shift and go to state 56
    estatuto                       shift and go to state 49
    variables_locales              shift and go to state 51
    condicion                      shift and go to state 50
    bloque_est_loop                shift and go to state 78
    escritura                      shift and go to state 58

state 50

    (54) estatuto -> condicion .

    ID              reduce using rule 54 (estatuto -> condicion .)
    IF              reduce using rule 54 (estatuto -> condicion .)
    PRINT           reduce using rule 54 (estatuto -> condicion .)
    RETURN          reduce using rule 54 (estatuto -> condicion .)
    WHILE           reduce using rule 54 (estatuto -> condicion .)
    VAR             reduce using rule 54 (estatuto -> condicion .)
    RCURLY          reduce using rule 54 (estatuto -> condicion .)


state 51

    (58) estatuto -> variables_locales .

    ID              reduce using rule 58 (estatuto -> variables_locales .)
    IF              reduce using rule 58 (estatuto -> variables_locales .)
    PRINT           reduce using rule 58 (estatuto -> variables_locales .)
    RETURN          reduce using rule 58 (estatuto -> variables_locales .)
    WHILE           reduce using rule 58 (estatuto -> variables_locales .)
    VAR             reduce using rule 58 (estatuto -> variables_locales .)
    RCURLY          reduce using rule 58 (estatuto -> variables_locales .)


state 52

    (14) variables_locales -> VAR . variable_local_id_loop SEMICOLON variable_local_end_loop
    (15) variable_local_id_loop -> . variable_local_id_loop_coma COLON tipo local_addType
    (16) variable_local_id_loop_coma -> . ID add_pila_var_locales
    (17) variable_local_id_loop_coma -> . ID add_pila_var_locales COMA variable_local_id_loop_coma

    ID              shift and go to state 81

    variable_local_id_loop_coma    shift and go to state 79
    variable_local_id_loop         shift and go to state 80

state 53

    (96) asignacion -> ID . asignacion_option
    (97) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (98) asignacion_option -> . ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON
    (99) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 83
    LBRACKET        shift and go to state 84

    asignacion_option              shift and go to state 82

state 54

    (66) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 85


state 55

    (56) estatuto -> regreso .

    ID              reduce using rule 56 (estatuto -> regreso .)
    IF              reduce using rule 56 (estatuto -> regreso .)
    PRINT           reduce using rule 56 (estatuto -> regreso .)
    RETURN          reduce using rule 56 (estatuto -> regreso .)
    WHILE           reduce using rule 56 (estatuto -> regreso .)
    VAR             reduce using rule 56 (estatuto -> regreso .)
    RCURLY          reduce using rule 56 (estatuto -> regreso .)


state 56

    (53) estatuto -> asignacion .

    ID              reduce using rule 53 (estatuto -> asignacion .)
    IF              reduce using rule 53 (estatuto -> asignacion .)
    PRINT           reduce using rule 53 (estatuto -> asignacion .)
    RETURN          reduce using rule 53 (estatuto -> asignacion .)
    WHILE           reduce using rule 53 (estatuto -> asignacion .)
    VAR             reduce using rule 53 (estatuto -> asignacion .)
    RCURLY          reduce using rule 53 (estatuto -> asignacion .)


state 57

    (50) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 86


state 58

    (55) estatuto -> escritura .

    ID              reduce using rule 55 (estatuto -> escritura .)
    IF              reduce using rule 55 (estatuto -> escritura .)
    PRINT           reduce using rule 55 (estatuto -> escritura .)
    RETURN          reduce using rule 55 (estatuto -> escritura .)
    WHILE           reduce using rule 55 (estatuto -> escritura .)
    VAR             reduce using rule 55 (estatuto -> escritura .)
    RCURLY          reduce using rule 55 (estatuto -> escritura .)


state 59

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque END .)


state 60

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS . vars_locales_funcion add_cantidad_vars bloque return_cuad
    (34) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (35) vars_locales_funcion -> .

    VAR             shift and go to state 88
    LCURLY          reduce using rule 35 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 87

state 61

    (26) params -> ID add_pila_funciones . params_loop COLON tipo function_add_type semicolon_function_loop
    (28) params_loop -> . COMA ID add_pila_funciones params_loop
    (29) params_loop -> .

    COMA            shift and go to state 90
    COLON           reduce using rule 29 (params_loop -> .)

    params_loop                    shift and go to state 89

state 62

    (138) varcte -> CTECHAR . nodoCteC
    (145) nodoCteC -> .

    MULTIPLICATION  reduce using rule 145 (nodoCteC -> .)
    DIVISION        reduce using rule 145 (nodoCteC -> .)
    ADDITION        reduce using rule 145 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 145 (nodoCteC -> .)
    SEMICOLON       reduce using rule 145 (nodoCteC -> .)
    LESS            reduce using rule 145 (nodoCteC -> .)
    GREATER         reduce using rule 145 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 145 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 145 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 145 (nodoCteC -> .)
    EQUAL           reduce using rule 145 (nodoCteC -> .)
    AND             reduce using rule 145 (nodoCteC -> .)
    OR              reduce using rule 145 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 145 (nodoCteC -> .)
    ID              reduce using rule 145 (nodoCteC -> .)
    CTEINT          reduce using rule 145 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 145 (nodoCteC -> .)
    CTECHAR         reduce using rule 145 (nodoCteC -> .)
    TRUE            reduce using rule 145 (nodoCteC -> .)
    FALSE           reduce using rule 145 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 145 (nodoCteC -> .)
    COMA            reduce using rule 145 (nodoCteC -> .)

    nodoCteC                       shift and go to state 91

state 63

    (139) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 139 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 139 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 139 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 139 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 139 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 139 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 139 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 139 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 139 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 139 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 139 (CTEBOOL -> TRUE .)
    AND             reduce using rule 139 (CTEBOOL -> TRUE .)
    OR              reduce using rule 139 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 139 (CTEBOOL -> TRUE .)
    ID              reduce using rule 139 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 139 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 139 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 139 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 139 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 139 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 139 (CTEBOOL -> TRUE .)
    COMA            reduce using rule 139 (CTEBOOL -> TRUE .)


state 64

    (129) factor_var -> varcte . nodo1
    (131) nodo1 -> .

    MULTIPLICATION  reduce using rule 131 (nodo1 -> .)
    DIVISION        reduce using rule 131 (nodo1 -> .)
    ADDITION        reduce using rule 131 (nodo1 -> .)
    SUBTRACTION     reduce using rule 131 (nodo1 -> .)
    SEMICOLON       reduce using rule 131 (nodo1 -> .)
    LESS            reduce using rule 131 (nodo1 -> .)
    GREATER         reduce using rule 131 (nodo1 -> .)
    LESSEQUAL       reduce using rule 131 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 131 (nodo1 -> .)
    NOTEQUAL        reduce using rule 131 (nodo1 -> .)
    EQUAL           reduce using rule 131 (nodo1 -> .)
    AND             reduce using rule 131 (nodo1 -> .)
    OR              reduce using rule 131 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 131 (nodo1 -> .)
    ID              reduce using rule 131 (nodo1 -> .)
    CTEINT          reduce using rule 131 (nodo1 -> .)
    CTEFLOAT        reduce using rule 131 (nodo1 -> .)
    CTECHAR         reduce using rule 131 (nodo1 -> .)
    TRUE            reduce using rule 131 (nodo1 -> .)
    FALSE           reduce using rule 131 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 131 (nodo1 -> .)
    COMA            reduce using rule 131 (nodo1 -> .)

    nodo1                          shift and go to state 92

state 65

    (136) varcte -> CTEFLOAT . nodoCteF
    (143) nodoCteF -> .

    MULTIPLICATION  reduce using rule 143 (nodoCteF -> .)
    DIVISION        reduce using rule 143 (nodoCteF -> .)
    ADDITION        reduce using rule 143 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 143 (nodoCteF -> .)
    SEMICOLON       reduce using rule 143 (nodoCteF -> .)
    LESS            reduce using rule 143 (nodoCteF -> .)
    GREATER         reduce using rule 143 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 143 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 143 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 143 (nodoCteF -> .)
    EQUAL           reduce using rule 143 (nodoCteF -> .)
    AND             reduce using rule 143 (nodoCteF -> .)
    OR              reduce using rule 143 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 143 (nodoCteF -> .)
    ID              reduce using rule 143 (nodoCteF -> .)
    CTEINT          reduce using rule 143 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 143 (nodoCteF -> .)
    CTECHAR         reduce using rule 143 (nodoCteF -> .)
    TRUE            reduce using rule 143 (nodoCteF -> .)
    FALSE           reduce using rule 143 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 143 (nodoCteF -> .)
    COMA            reduce using rule 143 (nodoCteF -> .)

    nodoCteF                       shift and go to state 93

state 66

    (119) termino -> factor . nodo4 termino_loop
    (126) nodo4 -> .

    MULTIPLICATION  reduce using rule 126 (nodo4 -> .)
    DIVISION        reduce using rule 126 (nodo4 -> .)
    ADDITION        reduce using rule 126 (nodo4 -> .)
    SUBTRACTION     reduce using rule 126 (nodo4 -> .)
    SEMICOLON       reduce using rule 126 (nodo4 -> .)
    LESS            reduce using rule 126 (nodo4 -> .)
    GREATER         reduce using rule 126 (nodo4 -> .)
    LESSEQUAL       reduce using rule 126 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 126 (nodo4 -> .)
    NOTEQUAL        reduce using rule 126 (nodo4 -> .)
    EQUAL           reduce using rule 126 (nodo4 -> .)
    AND             reduce using rule 126 (nodo4 -> .)
    OR              reduce using rule 126 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 126 (nodo4 -> .)
    ID              reduce using rule 126 (nodo4 -> .)
    CTEINT          reduce using rule 126 (nodo4 -> .)
    CTEFLOAT        reduce using rule 126 (nodo4 -> .)
    CTECHAR         reduce using rule 126 (nodo4 -> .)
    TRUE            reduce using rule 126 (nodo4 -> .)
    FALSE           reduce using rule 126 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 126 (nodo4 -> .)
    COMA            reduce using rule 126 (nodo4 -> .)

    nodo4                          shift and go to state 94

state 67

    (128) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 128 (factor -> factor_exp .)
    DIVISION        reduce using rule 128 (factor -> factor_exp .)
    ADDITION        reduce using rule 128 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 128 (factor -> factor_exp .)
    LESS            reduce using rule 128 (factor -> factor_exp .)
    GREATER         reduce using rule 128 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 128 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 128 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 128 (factor -> factor_exp .)
    EQUAL           reduce using rule 128 (factor -> factor_exp .)
    AND             reduce using rule 128 (factor -> factor_exp .)
    OR              reduce using rule 128 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 128 (factor -> factor_exp .)
    ID              reduce using rule 128 (factor -> factor_exp .)
    CTEINT          reduce using rule 128 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 128 (factor -> factor_exp .)
    CTECHAR         reduce using rule 128 (factor -> factor_exp .)
    TRUE            reduce using rule 128 (factor -> factor_exp .)
    FALSE           reduce using rule 128 (factor -> factor_exp .)
    COMA            reduce using rule 128 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 128 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 128 (factor -> factor_exp .)


state 68

    (135) varcte -> CTEINT . nodoCteE
    (142) nodoCteE -> .

    MULTIPLICATION  reduce using rule 142 (nodoCteE -> .)
    DIVISION        reduce using rule 142 (nodoCteE -> .)
    ADDITION        reduce using rule 142 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 142 (nodoCteE -> .)
    SEMICOLON       reduce using rule 142 (nodoCteE -> .)
    LESS            reduce using rule 142 (nodoCteE -> .)
    GREATER         reduce using rule 142 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 142 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 142 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 142 (nodoCteE -> .)
    EQUAL           reduce using rule 142 (nodoCteE -> .)
    AND             reduce using rule 142 (nodoCteE -> .)
    OR              reduce using rule 142 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 142 (nodoCteE -> .)
    ID              reduce using rule 142 (nodoCteE -> .)
    CTEINT          reduce using rule 142 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 142 (nodoCteE -> .)
    CTECHAR         reduce using rule 142 (nodoCteE -> .)
    TRUE            reduce using rule 142 (nodoCteE -> .)
    FALSE           reduce using rule 142 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 142 (nodoCteE -> .)
    COMA            reduce using rule 142 (nodoCteE -> .)

    nodoCteE                       shift and go to state 95

state 69

    (130) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (132) nodo6 -> .

    LPARENTHESIS    reduce using rule 132 (nodo6 -> .)
    ID              reduce using rule 132 (nodo6 -> .)
    CTEINT          reduce using rule 132 (nodo6 -> .)
    CTEFLOAT        reduce using rule 132 (nodo6 -> .)
    CTECHAR         reduce using rule 132 (nodo6 -> .)
    TRUE            reduce using rule 132 (nodo6 -> .)
    FALSE           reduce using rule 132 (nodo6 -> .)

    nodo6                          shift and go to state 96

state 70

    (134) varcte -> ID . nodoCteV
    (141) nodoCteV -> .

    MULTIPLICATION  reduce using rule 141 (nodoCteV -> .)
    DIVISION        reduce using rule 141 (nodoCteV -> .)
    ADDITION        reduce using rule 141 (nodoCteV -> .)
    SUBTRACTION     reduce using rule 141 (nodoCteV -> .)
    SEMICOLON       reduce using rule 141 (nodoCteV -> .)
    LESS            reduce using rule 141 (nodoCteV -> .)
    GREATER         reduce using rule 141 (nodoCteV -> .)
    LESSEQUAL       reduce using rule 141 (nodoCteV -> .)
    GREATEREQUAL    reduce using rule 141 (nodoCteV -> .)
    NOTEQUAL        reduce using rule 141 (nodoCteV -> .)
    EQUAL           reduce using rule 141 (nodoCteV -> .)
    AND             reduce using rule 141 (nodoCteV -> .)
    OR              reduce using rule 141 (nodoCteV -> .)
    LPARENTHESIS    reduce using rule 141 (nodoCteV -> .)
    ID              reduce using rule 141 (nodoCteV -> .)
    CTEINT          reduce using rule 141 (nodoCteV -> .)
    CTEFLOAT        reduce using rule 141 (nodoCteV -> .)
    CTECHAR         reduce using rule 141 (nodoCteV -> .)
    TRUE            reduce using rule 141 (nodoCteV -> .)
    FALSE           reduce using rule 141 (nodoCteV -> .)
    RPARENTHESIS    reduce using rule 141 (nodoCteV -> .)
    COMA            reduce using rule 141 (nodoCteV -> .)

    nodoCteV                       shift and go to state 97

state 71

    (140) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 140 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 140 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 140 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 140 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 140 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 140 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 140 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 140 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 140 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 140 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 140 (CTEBOOL -> FALSE .)
    AND             reduce using rule 140 (CTEBOOL -> FALSE .)
    OR              reduce using rule 140 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 140 (CTEBOOL -> FALSE .)
    ID              reduce using rule 140 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 140 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 140 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 140 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 140 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 140 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 140 (CTEBOOL -> FALSE .)
    COMA            reduce using rule 140 (CTEBOOL -> FALSE .)


state 72

    (137) varcte -> CTEBOOL . nodoCteB
    (144) nodoCteB -> .

    MULTIPLICATION  reduce using rule 144 (nodoCteB -> .)
    DIVISION        reduce using rule 144 (nodoCteB -> .)
    ADDITION        reduce using rule 144 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 144 (nodoCteB -> .)
    SEMICOLON       reduce using rule 144 (nodoCteB -> .)
    LESS            reduce using rule 144 (nodoCteB -> .)
    GREATER         reduce using rule 144 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 144 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 144 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 144 (nodoCteB -> .)
    EQUAL           reduce using rule 144 (nodoCteB -> .)
    AND             reduce using rule 144 (nodoCteB -> .)
    OR              reduce using rule 144 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 144 (nodoCteB -> .)
    ID              reduce using rule 144 (nodoCteB -> .)
    CTEINT          reduce using rule 144 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 144 (nodoCteB -> .)
    CTECHAR         reduce using rule 144 (nodoCteB -> .)
    TRUE            reduce using rule 144 (nodoCteB -> .)
    FALSE           reduce using rule 144 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 144 (nodoCteB -> .)
    COMA            reduce using rule 144 (nodoCteB -> .)

    nodoCteB                       shift and go to state 98

state 73

    (59) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 99


state 74

    (127) factor -> factor_var .

    MULTIPLICATION  reduce using rule 127 (factor -> factor_var .)
    DIVISION        reduce using rule 127 (factor -> factor_var .)
    ADDITION        reduce using rule 127 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 127 (factor -> factor_var .)
    LESS            reduce using rule 127 (factor -> factor_var .)
    GREATER         reduce using rule 127 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 127 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 127 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 127 (factor -> factor_var .)
    EQUAL           reduce using rule 127 (factor -> factor_var .)
    AND             reduce using rule 127 (factor -> factor_var .)
    OR              reduce using rule 127 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 127 (factor -> factor_var .)
    ID              reduce using rule 127 (factor -> factor_var .)
    CTEINT          reduce using rule 127 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 127 (factor -> factor_var .)
    CTECHAR         reduce using rule 127 (factor -> factor_var .)
    TRUE            reduce using rule 127 (factor -> factor_var .)
    FALSE           reduce using rule 127 (factor -> factor_var .)
    COMA            reduce using rule 127 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 127 (factor -> factor_var .)
    SEMICOLON       reduce using rule 127 (factor -> factor_var .)


state 75

    (111) exp -> termino . nodo5 exp_loop
    (118) nodo5 -> .

    ADDITION        reduce using rule 118 (nodo5 -> .)
    SUBTRACTION     reduce using rule 118 (nodo5 -> .)
    SEMICOLON       reduce using rule 118 (nodo5 -> .)
    LESS            reduce using rule 118 (nodo5 -> .)
    GREATER         reduce using rule 118 (nodo5 -> .)
    LESSEQUAL       reduce using rule 118 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 118 (nodo5 -> .)
    NOTEQUAL        reduce using rule 118 (nodo5 -> .)
    EQUAL           reduce using rule 118 (nodo5 -> .)
    AND             reduce using rule 118 (nodo5 -> .)
    OR              reduce using rule 118 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 118 (nodo5 -> .)
    ID              reduce using rule 118 (nodo5 -> .)
    CTEINT          reduce using rule 118 (nodo5 -> .)
    CTEFLOAT        reduce using rule 118 (nodo5 -> .)
    CTECHAR         reduce using rule 118 (nodo5 -> .)
    TRUE            reduce using rule 118 (nodo5 -> .)
    FALSE           reduce using rule 118 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 118 (nodo5 -> .)
    COMA            reduce using rule 118 (nodo5 -> .)

    nodo5                          shift and go to state 100

state 76

    (63) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (64) nodo16 -> .

    LPARENTHESIS    reduce using rule 64 (nodo16 -> .)
    ID              reduce using rule 64 (nodo16 -> .)
    CTEINT          reduce using rule 64 (nodo16 -> .)
    CTEFLOAT        reduce using rule 64 (nodo16 -> .)
    CTECHAR         reduce using rule 64 (nodo16 -> .)
    TRUE            reduce using rule 64 (nodo16 -> .)
    FALSE           reduce using rule 64 (nodo16 -> .)

    nodo16                         shift and go to state 101

state 77

    (60) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (61) escritura_type -> . expresion
    (62) escritura_type -> . QUOTE CTECHAR QUOTE
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 102
    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    escritura_type                 shift and go to state 103
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 105
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 78

    (51) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 51 (bloque_est_loop -> estatuto bloque_est_loop .)


state 79

    (15) variable_local_id_loop -> variable_local_id_loop_coma . COLON tipo local_addType

    COLON           shift and go to state 107


state 80

    (14) variables_locales -> VAR variable_local_id_loop . SEMICOLON variable_local_end_loop

    SEMICOLON       shift and go to state 108


state 81

    (16) variable_local_id_loop_coma -> ID . add_pila_var_locales
    (17) variable_local_id_loop_coma -> ID . add_pila_var_locales COMA variable_local_id_loop_coma
    (18) add_pila_var_locales -> .

    COMA            reduce using rule 18 (add_pila_var_locales -> .)
    COLON           reduce using rule 18 (add_pila_var_locales -> .)

    add_pila_var_locales           shift and go to state 109

state 82

    (96) asignacion -> ID asignacion_option .

    ID              reduce using rule 96 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 96 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 96 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 96 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 96 (asignacion -> ID asignacion_option .)
    VAR             reduce using rule 96 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 96 (asignacion -> ID asignacion_option .)


state 83

    (97) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (98) asignacion_option -> ASSIGN . CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    CALL            shift and go to state 111
    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 110
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 84

    (99) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 112


state 85

    (66) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 113
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 86

    (50) bloque -> LCURLY bloque_est_loop RCURLY .

    ID              reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VAR             reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 50 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 87

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion . add_cantidad_vars bloque return_cuad
    (31) add_cantidad_vars -> .

    LCURLY          reduce using rule 31 (add_cantidad_vars -> .)

    add_cantidad_vars              shift and go to state 114

state 88

    (34) vars_locales_funcion -> VAR . ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop

    ID              shift and go to state 115


state 89

    (26) params -> ID add_pila_funciones params_loop . COLON tipo function_add_type semicolon_function_loop

    COLON           shift and go to state 116


state 90

    (28) params_loop -> COMA . ID add_pila_funciones params_loop

    ID              shift and go to state 117


state 91

    (138) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    COMA            reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 138 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 138 (varcte -> CTECHAR nodoCteC .)


state 92

    (129) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 129 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 129 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 129 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 129 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 129 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 129 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 129 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 129 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 129 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 129 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 129 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 129 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 129 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 129 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 129 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 129 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 129 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 129 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 129 (factor_var -> varcte nodo1 .)
    COMA            reduce using rule 129 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 129 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 129 (factor_var -> varcte nodo1 .)


state 93

    (136) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    COMA            reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 136 (varcte -> CTEFLOAT nodoCteF .)


state 94

    (119) termino -> factor nodo4 . termino_loop
    (120) termino_loop -> . termino_type_loop
    (121) termino_loop -> .
    (122) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (123) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 121 (termino_loop -> .)
    SUBTRACTION     reduce using rule 121 (termino_loop -> .)
    SEMICOLON       reduce using rule 121 (termino_loop -> .)
    LESS            reduce using rule 121 (termino_loop -> .)
    GREATER         reduce using rule 121 (termino_loop -> .)
    LESSEQUAL       reduce using rule 121 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 121 (termino_loop -> .)
    NOTEQUAL        reduce using rule 121 (termino_loop -> .)
    EQUAL           reduce using rule 121 (termino_loop -> .)
    AND             reduce using rule 121 (termino_loop -> .)
    OR              reduce using rule 121 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 121 (termino_loop -> .)
    ID              reduce using rule 121 (termino_loop -> .)
    CTEINT          reduce using rule 121 (termino_loop -> .)
    CTEFLOAT        reduce using rule 121 (termino_loop -> .)
    CTECHAR         reduce using rule 121 (termino_loop -> .)
    TRUE            reduce using rule 121 (termino_loop -> .)
    FALSE           reduce using rule 121 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 121 (termino_loop -> .)
    COMA            reduce using rule 121 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 120
    DIVISION        shift and go to state 118

    termino_type_loop              shift and go to state 119
    termino_loop                   shift and go to state 121

state 95

    (135) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    COMA            reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 135 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 135 (varcte -> CTEINT nodoCteE .)


state 96

    (130) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 122
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 97

    (134) varcte -> ID nodoCteV .

    MULTIPLICATION  reduce using rule 134 (varcte -> ID nodoCteV .)
    DIVISION        reduce using rule 134 (varcte -> ID nodoCteV .)
    ADDITION        reduce using rule 134 (varcte -> ID nodoCteV .)
    SUBTRACTION     reduce using rule 134 (varcte -> ID nodoCteV .)
    AND             reduce using rule 134 (varcte -> ID nodoCteV .)
    OR              reduce using rule 134 (varcte -> ID nodoCteV .)
    LPARENTHESIS    reduce using rule 134 (varcte -> ID nodoCteV .)
    ID              reduce using rule 134 (varcte -> ID nodoCteV .)
    CTEINT          reduce using rule 134 (varcte -> ID nodoCteV .)
    CTEFLOAT        reduce using rule 134 (varcte -> ID nodoCteV .)
    CTECHAR         reduce using rule 134 (varcte -> ID nodoCteV .)
    TRUE            reduce using rule 134 (varcte -> ID nodoCteV .)
    FALSE           reduce using rule 134 (varcte -> ID nodoCteV .)
    RPARENTHESIS    reduce using rule 134 (varcte -> ID nodoCteV .)
    SEMICOLON       reduce using rule 134 (varcte -> ID nodoCteV .)
    COMA            reduce using rule 134 (varcte -> ID nodoCteV .)
    LESS            reduce using rule 134 (varcte -> ID nodoCteV .)
    GREATER         reduce using rule 134 (varcte -> ID nodoCteV .)
    LESSEQUAL       reduce using rule 134 (varcte -> ID nodoCteV .)
    GREATEREQUAL    reduce using rule 134 (varcte -> ID nodoCteV .)
    NOTEQUAL        reduce using rule 134 (varcte -> ID nodoCteV .)
    EQUAL           reduce using rule 134 (varcte -> ID nodoCteV .)


state 98

    (137) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    COMA            reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 137 (varcte -> CTEBOOL nodoCteB .)


state 99

    (59) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)
    VAR             reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 59 (regreso -> RETURN exp SEMICOLON .)


state 100

    (111) exp -> termino nodo5 . exp_loop
    (112) exp_loop -> . exp_type_loop
    (113) exp_loop -> .
    (114) exp_type_loop -> . ADDITION nodo3_suma exp
    (115) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 113 (exp_loop -> .)
    LESS            reduce using rule 113 (exp_loop -> .)
    GREATER         reduce using rule 113 (exp_loop -> .)
    LESSEQUAL       reduce using rule 113 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 113 (exp_loop -> .)
    NOTEQUAL        reduce using rule 113 (exp_loop -> .)
    EQUAL           reduce using rule 113 (exp_loop -> .)
    AND             reduce using rule 113 (exp_loop -> .)
    OR              reduce using rule 113 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 113 (exp_loop -> .)
    ID              reduce using rule 113 (exp_loop -> .)
    CTEINT          reduce using rule 113 (exp_loop -> .)
    CTEFLOAT        reduce using rule 113 (exp_loop -> .)
    CTECHAR         reduce using rule 113 (exp_loop -> .)
    TRUE            reduce using rule 113 (exp_loop -> .)
    FALSE           reduce using rule 113 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 113 (exp_loop -> .)
    COMA            reduce using rule 113 (exp_loop -> .)
    ADDITION        shift and go to state 123
    SUBTRACTION     shift and go to state 126

    exp_loop                       shift and go to state 124
    exp_type_loop                  shift and go to state 125

state 101

    (63) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 127
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 102

    (62) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 128


state 103

    (60) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 129


state 104

    (72) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (73) expresion_option -> . AND nodo12_and nuevaexp
    (74) expresion_option -> . OR nodo12_or nuevaexp
    (75) expresion_option -> .

    AND             shift and go to state 130
    OR              shift and go to state 132
    LPARENTHESIS    reduce using rule 75 (expresion_option -> .)
    ID              reduce using rule 75 (expresion_option -> .)
    CTEINT          reduce using rule 75 (expresion_option -> .)
    CTEFLOAT        reduce using rule 75 (expresion_option -> .)
    CTECHAR         reduce using rule 75 (expresion_option -> .)
    TRUE            reduce using rule 75 (expresion_option -> .)
    FALSE           reduce using rule 75 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 75 (expresion_option -> .)
    SEMICOLON       reduce using rule 75 (expresion_option -> .)
    COMA            reduce using rule 75 (expresion_option -> .)

    expresion_option               shift and go to state 131

state 105

    (61) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 61 (escritura_type -> expresion .)


state 106

    (81) nuevaexp -> exp . nuevaexp_type nodo10
    (82) nuevaexp_type -> . LESS nodo9_menor exp
    (83) nuevaexp_type -> . GREATER nodo9_mayor exp
    (84) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (85) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (86) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (87) nuevaexp_type -> . EQUAL nodo9_igual exp
    (88) nuevaexp_type -> .

    LESS            shift and go to state 135
    GREATER         shift and go to state 134
    LESSEQUAL       shift and go to state 139
    GREATEREQUAL    shift and go to state 133
    NOTEQUAL        shift and go to state 137
    EQUAL           shift and go to state 136
    AND             reduce using rule 88 (nuevaexp_type -> .)
    OR              reduce using rule 88 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 88 (nuevaexp_type -> .)
    ID              reduce using rule 88 (nuevaexp_type -> .)
    CTEINT          reduce using rule 88 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 88 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 88 (nuevaexp_type -> .)
    TRUE            reduce using rule 88 (nuevaexp_type -> .)
    FALSE           reduce using rule 88 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 88 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 88 (nuevaexp_type -> .)
    COMA            reduce using rule 88 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 138

state 107

    (15) variable_local_id_loop -> variable_local_id_loop_coma COLON . tipo local_addType
    (45) tipo -> . INTTYPE
    (46) tipo -> . FLOATTYPE
    (47) tipo -> . CHARTYPE
    (48) tipo -> . BOOLTYPE
    (49) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 140

state 108

    (14) variables_locales -> VAR variable_local_id_loop SEMICOLON . variable_local_end_loop
    (19) variable_local_end_loop -> . variables_locales
    (20) variable_local_end_loop -> .
    (14) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

  ! shift/reduce conflict for VAR resolved as shift
    ID              reduce using rule 20 (variable_local_end_loop -> .)
    IF              reduce using rule 20 (variable_local_end_loop -> .)
    PRINT           reduce using rule 20 (variable_local_end_loop -> .)
    RETURN          reduce using rule 20 (variable_local_end_loop -> .)
    WHILE           reduce using rule 20 (variable_local_end_loop -> .)
    RCURLY          reduce using rule 20 (variable_local_end_loop -> .)
    VAR             shift and go to state 52

  ! VAR             [ reduce using rule 20 (variable_local_end_loop -> .) ]

    variable_local_end_loop        shift and go to state 141
    variables_locales              shift and go to state 142

state 109

    (16) variable_local_id_loop_coma -> ID add_pila_var_locales .
    (17) variable_local_id_loop_coma -> ID add_pila_var_locales . COMA variable_local_id_loop_coma

    COLON           reduce using rule 16 (variable_local_id_loop_coma -> ID add_pila_var_locales .)
    COMA            shift and go to state 143


state 110

    (97) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (110) nodo8 -> .

    SEMICOLON       reduce using rule 110 (nodo8 -> .)

    nodo8                          shift and go to state 144

state 111

    (98) asignacion_option -> ASSIGN CALL . ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON

    ID              shift and go to state 145


state 112

    (99) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 146


state 113

    (66) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 147


state 114

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars . bloque return_cuad
    (50) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 41

    bloque                         shift and go to state 148

state 115

    (34) vars_locales_funcion -> VAR ID . add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (30) add_pila_funciones -> .

    COMA            reduce using rule 30 (add_pila_funciones -> .)
    COLON           reduce using rule 30 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 149

state 116

    (26) params -> ID add_pila_funciones params_loop COLON . tipo function_add_type semicolon_function_loop
    (45) tipo -> . INTTYPE
    (46) tipo -> . FLOATTYPE
    (47) tipo -> . CHARTYPE
    (48) tipo -> . BOOLTYPE
    (49) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 150

state 117

    (28) params_loop -> COMA ID . add_pila_funciones params_loop
    (30) add_pila_funciones -> .

    COMA            reduce using rule 30 (add_pila_funciones -> .)
    COLON           reduce using rule 30 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 151

state 118

    (123) termino_type_loop -> DIVISION . nodo2_div termino
    (125) nodo2_div -> .

    LPARENTHESIS    reduce using rule 125 (nodo2_div -> .)
    ID              reduce using rule 125 (nodo2_div -> .)
    CTEINT          reduce using rule 125 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 125 (nodo2_div -> .)
    CTECHAR         reduce using rule 125 (nodo2_div -> .)
    TRUE            reduce using rule 125 (nodo2_div -> .)
    FALSE           reduce using rule 125 (nodo2_div -> .)

    nodo2_div                      shift and go to state 152

state 119

    (120) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 120 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 120 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 120 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 120 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 120 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 120 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 120 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 120 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 120 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 120 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 120 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 120 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 120 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 120 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 120 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 120 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 120 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 120 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 120 (termino_loop -> termino_type_loop .)
    COMA            reduce using rule 120 (termino_loop -> termino_type_loop .)


state 120

    (122) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (124) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 124 (nodo2_mult -> .)
    ID              reduce using rule 124 (nodo2_mult -> .)
    CTEINT          reduce using rule 124 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 124 (nodo2_mult -> .)
    CTECHAR         reduce using rule 124 (nodo2_mult -> .)
    TRUE            reduce using rule 124 (nodo2_mult -> .)
    FALSE           reduce using rule 124 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 153

state 121

    (119) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    COMA            reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 119 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 119 (termino -> factor nodo4 termino_loop .)


state 122

    (130) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 154


state 123

    (114) exp_type_loop -> ADDITION . nodo3_suma exp
    (116) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 116 (nodo3_suma -> .)
    ID              reduce using rule 116 (nodo3_suma -> .)
    CTEINT          reduce using rule 116 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 116 (nodo3_suma -> .)
    CTECHAR         reduce using rule 116 (nodo3_suma -> .)
    TRUE            reduce using rule 116 (nodo3_suma -> .)
    FALSE           reduce using rule 116 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 155

state 124

    (111) exp -> termino nodo5 exp_loop .

    LESS            reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    SEMICOLON       reduce using rule 111 (exp -> termino nodo5 exp_loop .)
    COMA            reduce using rule 111 (exp -> termino nodo5 exp_loop .)


state 125

    (112) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 112 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 112 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 112 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 112 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 112 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 112 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 112 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 112 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 112 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 112 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 112 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 112 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 112 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 112 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 112 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 112 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 112 (exp_loop -> exp_type_loop .)
    COMA            reduce using rule 112 (exp_loop -> exp_type_loop .)


state 126

    (115) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (117) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 117 (nodo3_resta -> .)
    ID              reduce using rule 117 (nodo3_resta -> .)
    CTEINT          reduce using rule 117 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 117 (nodo3_resta -> .)
    CTECHAR         reduce using rule 117 (nodo3_resta -> .)
    TRUE            reduce using rule 117 (nodo3_resta -> .)
    FALSE           reduce using rule 117 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 156

state 127

    (63) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 157


state 128

    (62) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 158


state 129

    (60) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 159


state 130

    (73) expresion_option -> AND . nodo12_and nuevaexp
    (78) nodo12_and -> .

    LPARENTHESIS    reduce using rule 78 (nodo12_and -> .)
    ID              reduce using rule 78 (nodo12_and -> .)
    CTEINT          reduce using rule 78 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 78 (nodo12_and -> .)
    CTECHAR         reduce using rule 78 (nodo12_and -> .)
    TRUE            reduce using rule 78 (nodo12_and -> .)
    FALSE           reduce using rule 78 (nodo12_and -> .)

    nodo12_and                     shift and go to state 160

state 131

    (72) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (80) nodo11 -> .

    LPARENTHESIS    reduce using rule 80 (nodo11 -> .)
    ID              reduce using rule 80 (nodo11 -> .)
    CTEINT          reduce using rule 80 (nodo11 -> .)
    CTEFLOAT        reduce using rule 80 (nodo11 -> .)
    CTECHAR         reduce using rule 80 (nodo11 -> .)
    TRUE            reduce using rule 80 (nodo11 -> .)
    FALSE           reduce using rule 80 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 80 (nodo11 -> .)
    SEMICOLON       reduce using rule 80 (nodo11 -> .)
    COMA            reduce using rule 80 (nodo11 -> .)

    nodo11                         shift and go to state 161

state 132

    (74) expresion_option -> OR . nodo12_or nuevaexp
    (79) nodo12_or -> .

    LPARENTHESIS    reduce using rule 79 (nodo12_or -> .)
    ID              reduce using rule 79 (nodo12_or -> .)
    CTEINT          reduce using rule 79 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 79 (nodo12_or -> .)
    CTECHAR         reduce using rule 79 (nodo12_or -> .)
    TRUE            reduce using rule 79 (nodo12_or -> .)
    FALSE           reduce using rule 79 (nodo12_or -> .)

    nodo12_or                      shift and go to state 162

state 133

    (85) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (93) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 93 (nodo9_mayorig -> .)
    ID              reduce using rule 93 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 93 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 93 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 93 (nodo9_mayorig -> .)
    TRUE            reduce using rule 93 (nodo9_mayorig -> .)
    FALSE           reduce using rule 93 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 163

state 134

    (83) nuevaexp_type -> GREATER . nodo9_mayor exp
    (91) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 91 (nodo9_mayor -> .)
    ID              reduce using rule 91 (nodo9_mayor -> .)
    CTEINT          reduce using rule 91 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 91 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 91 (nodo9_mayor -> .)
    TRUE            reduce using rule 91 (nodo9_mayor -> .)
    FALSE           reduce using rule 91 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 164

state 135

    (82) nuevaexp_type -> LESS . nodo9_menor exp
    (90) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 90 (nodo9_menor -> .)
    ID              reduce using rule 90 (nodo9_menor -> .)
    CTEINT          reduce using rule 90 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 90 (nodo9_menor -> .)
    CTECHAR         reduce using rule 90 (nodo9_menor -> .)
    TRUE            reduce using rule 90 (nodo9_menor -> .)
    FALSE           reduce using rule 90 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 165

state 136

    (87) nuevaexp_type -> EQUAL . nodo9_igual exp
    (95) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 95 (nodo9_igual -> .)
    ID              reduce using rule 95 (nodo9_igual -> .)
    CTEINT          reduce using rule 95 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 95 (nodo9_igual -> .)
    CTECHAR         reduce using rule 95 (nodo9_igual -> .)
    TRUE            reduce using rule 95 (nodo9_igual -> .)
    FALSE           reduce using rule 95 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 166

state 137

    (86) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (94) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 94 (nodo9_dif -> .)
    ID              reduce using rule 94 (nodo9_dif -> .)
    CTEINT          reduce using rule 94 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 94 (nodo9_dif -> .)
    CTECHAR         reduce using rule 94 (nodo9_dif -> .)
    TRUE            reduce using rule 94 (nodo9_dif -> .)
    FALSE           reduce using rule 94 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 167

state 138

    (81) nuevaexp -> exp nuevaexp_type . nodo10
    (89) nodo10 -> .

    AND             reduce using rule 89 (nodo10 -> .)
    OR              reduce using rule 89 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 89 (nodo10 -> .)
    ID              reduce using rule 89 (nodo10 -> .)
    CTEINT          reduce using rule 89 (nodo10 -> .)
    CTEFLOAT        reduce using rule 89 (nodo10 -> .)
    CTECHAR         reduce using rule 89 (nodo10 -> .)
    TRUE            reduce using rule 89 (nodo10 -> .)
    FALSE           reduce using rule 89 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 89 (nodo10 -> .)
    SEMICOLON       reduce using rule 89 (nodo10 -> .)
    COMA            reduce using rule 89 (nodo10 -> .)

    nodo10                         shift and go to state 168

state 139

    (84) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (92) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 92 (nodo9_menorig -> .)
    ID              reduce using rule 92 (nodo9_menorig -> .)
    CTEINT          reduce using rule 92 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 92 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 92 (nodo9_menorig -> .)
    TRUE            reduce using rule 92 (nodo9_menorig -> .)
    FALSE           reduce using rule 92 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 169

state 140

    (15) variable_local_id_loop -> variable_local_id_loop_coma COLON tipo . local_addType
    (21) local_addType -> .

    SEMICOLON       reduce using rule 21 (local_addType -> .)

    local_addType                  shift and go to state 170

state 141

    (14) variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .

    ID              reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    IF              reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    PRINT           reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RETURN          reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    WHILE           reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    VAR             reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RCURLY          reduce using rule 14 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)


state 142

    (19) variable_local_end_loop -> variables_locales .

    ID              reduce using rule 19 (variable_local_end_loop -> variables_locales .)
    IF              reduce using rule 19 (variable_local_end_loop -> variables_locales .)
    PRINT           reduce using rule 19 (variable_local_end_loop -> variables_locales .)
    RETURN          reduce using rule 19 (variable_local_end_loop -> variables_locales .)
    WHILE           reduce using rule 19 (variable_local_end_loop -> variables_locales .)
    VAR             reduce using rule 19 (variable_local_end_loop -> variables_locales .)
    RCURLY          reduce using rule 19 (variable_local_end_loop -> variables_locales .)


state 143

    (17) variable_local_id_loop_coma -> ID add_pila_var_locales COMA . variable_local_id_loop_coma
    (16) variable_local_id_loop_coma -> . ID add_pila_var_locales
    (17) variable_local_id_loop_coma -> . ID add_pila_var_locales COMA variable_local_id_loop_coma

    ID              shift and go to state 81

    variable_local_id_loop_coma    shift and go to state 171

state 144

    (97) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 172


state 145

    (98) asignacion_option -> ASSIGN CALL ID . function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON
    (104) function_call -> .

    LPARENTHESIS    reduce using rule 104 (function_call -> .)

    function_call                  shift and go to state 173

state 146

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 174


state 147

    (66) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (71) nodo13 -> .

    LCURLY          reduce using rule 71 (nodo13 -> .)

    nodo13                         shift and go to state 175

state 148

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque . return_cuad
    (42) return_cuad -> .

    INTTYPE         reduce using rule 42 (return_cuad -> .)
    FLOATTYPE       reduce using rule 42 (return_cuad -> .)
    CHARTYPE        reduce using rule 42 (return_cuad -> .)
    BOOLTYPE        reduce using rule 42 (return_cuad -> .)
    VOIDTYPE        reduce using rule 42 (return_cuad -> .)
    MAIN            reduce using rule 42 (return_cuad -> .)

    return_cuad                    shift and go to state 176

state 149

    (34) vars_locales_funcion -> VAR ID add_pila_funciones . vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (36) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (37) vars_locales_id_loop -> .

    COMA            shift and go to state 178
    COLON           reduce using rule 37 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 177

state 150

    (26) params -> ID add_pila_funciones params_loop COLON tipo . function_add_type semicolon_function_loop
    (40) function_add_type -> .

    SEMICOLON       reduce using rule 40 (function_add_type -> .)
    RPARENTHESIS    reduce using rule 40 (function_add_type -> .)

    function_add_type              shift and go to state 179

state 151

    (28) params_loop -> COMA ID add_pila_funciones . params_loop
    (28) params_loop -> . COMA ID add_pila_funciones params_loop
    (29) params_loop -> .

    COMA            shift and go to state 90
    COLON           reduce using rule 29 (params_loop -> .)

    params_loop                    shift and go to state 180

state 152

    (123) termino_type_loop -> DIVISION nodo2_div . termino
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 181
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 153

    (122) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 182
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 154

    (130) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (133) nodo7 -> .

    MULTIPLICATION  reduce using rule 133 (nodo7 -> .)
    DIVISION        reduce using rule 133 (nodo7 -> .)
    ADDITION        reduce using rule 133 (nodo7 -> .)
    SUBTRACTION     reduce using rule 133 (nodo7 -> .)
    SEMICOLON       reduce using rule 133 (nodo7 -> .)
    LESS            reduce using rule 133 (nodo7 -> .)
    GREATER         reduce using rule 133 (nodo7 -> .)
    LESSEQUAL       reduce using rule 133 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 133 (nodo7 -> .)
    NOTEQUAL        reduce using rule 133 (nodo7 -> .)
    EQUAL           reduce using rule 133 (nodo7 -> .)
    AND             reduce using rule 133 (nodo7 -> .)
    OR              reduce using rule 133 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 133 (nodo7 -> .)
    ID              reduce using rule 133 (nodo7 -> .)
    CTEINT          reduce using rule 133 (nodo7 -> .)
    CTEFLOAT        reduce using rule 133 (nodo7 -> .)
    CTECHAR         reduce using rule 133 (nodo7 -> .)
    TRUE            reduce using rule 133 (nodo7 -> .)
    FALSE           reduce using rule 133 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 133 (nodo7 -> .)
    COMA            reduce using rule 133 (nodo7 -> .)

    nodo7                          shift and go to state 183

state 155

    (114) exp_type_loop -> ADDITION nodo3_suma . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 184
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 156

    (115) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 185
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 157

    (63) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (71) nodo13 -> .

    LCURLY          reduce using rule 71 (nodo13 -> .)

    nodo13                         shift and go to state 186

state 158

    (62) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 62 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 159

    (60) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 60 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 160

    (73) expresion_option -> AND nodo12_and . nuevaexp
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 187
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 161

    (72) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (76) expresion_loop -> . expresion
    (77) expresion_loop -> .
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 77 (expresion_loop -> .)
    SEMICOLON       reduce using rule 77 (expresion_loop -> .)
    COMA            reduce using rule 77 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    expresion_loop                 shift and go to state 188
    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 189
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 162

    (74) expresion_option -> OR nodo12_or . nuevaexp
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 190
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 163

    (85) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 191
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 164

    (83) nuevaexp_type -> GREATER nodo9_mayor . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 192
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 165

    (82) nuevaexp_type -> LESS nodo9_menor . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 193
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 166

    (87) nuevaexp_type -> EQUAL nodo9_igual . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    factor_exp                     shift and go to state 67
    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    termino                        shift and go to state 75
    exp                            shift and go to state 194
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 167

    (86) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 195
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 168

    (81) nuevaexp -> exp nuevaexp_type nodo10 .

    AND             reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    LPARENTHESIS    reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)
    COMA            reduce using rule 81 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 169

    (84) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    varcte                         shift and go to state 64
    CTEBOOL                        shift and go to state 72
    factor_exp                     shift and go to state 67
    termino                        shift and go to state 75
    exp                            shift and go to state 196
    factor                         shift and go to state 66
    factor_var                     shift and go to state 74

state 170

    (15) variable_local_id_loop -> variable_local_id_loop_coma COLON tipo local_addType .

    SEMICOLON       reduce using rule 15 (variable_local_id_loop -> variable_local_id_loop_coma COLON tipo local_addType .)


state 171

    (17) variable_local_id_loop_coma -> ID add_pila_var_locales COMA variable_local_id_loop_coma .

    COLON           reduce using rule 17 (variable_local_id_loop_coma -> ID add_pila_var_locales COMA variable_local_id_loop_coma .)


state 172

    (97) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    VAR             reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 97 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 173

    (98) asignacion_option -> ASSIGN CALL ID function_call . LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON

    LPARENTHESIS    shift and go to state 197


state 174

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (110) nodo8 -> .

    LBRACKET        reduce using rule 110 (nodo8 -> .)

    nodo8                          shift and go to state 198

state 175

    (66) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (50) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 41

    bloque                         shift and go to state 199

state 176

    (24) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .

    INTTYPE         reduce using rule 24 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    FLOATTYPE       reduce using rule 24 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    CHARTYPE        reduce using rule 24 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    BOOLTYPE        reduce using rule 24 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    VOIDTYPE        reduce using rule 24 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    MAIN            reduce using rule 24 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)


state 177

    (34) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop . COLON tipo function_local_add_type semicolon_function_local_loop

    COLON           shift and go to state 200


state 178

    (36) vars_locales_id_loop -> COMA . ID add_pila_funciones vars_locales_id_loop

    ID              shift and go to state 201


state 179

    (26) params -> ID add_pila_funciones params_loop COLON tipo function_add_type . semicolon_function_loop
    (32) semicolon_function_loop -> . SEMICOLON params
    (33) semicolon_function_loop -> .

    SEMICOLON       shift and go to state 202
    RPARENTHESIS    reduce using rule 33 (semicolon_function_loop -> .)

    semicolon_function_loop        shift and go to state 203

state 180

    (28) params_loop -> COMA ID add_pila_funciones params_loop .

    COLON           reduce using rule 28 (params_loop -> COMA ID add_pila_funciones params_loop .)


state 181

    (123) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)
    COMA            reduce using rule 123 (termino_type_loop -> DIVISION nodo2_div termino .)


state 182

    (122) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    COMA            reduce using rule 122 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 183

    (130) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    COMA            reduce using rule 130 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 184

    (114) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)
    COMA            reduce using rule 114 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 185

    (115) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    COMA            reduce using rule 115 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 186

    (63) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (50) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 41

    bloque                         shift and go to state 204

state 187

    (73) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)
    COMA            reduce using rule 73 (expresion_option -> AND nodo12_and nuevaexp .)


state 188

    (72) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    COMA            reduce using rule 72 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    RPARENTHESIS    reduce using rule 72 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    SEMICOLON       reduce using rule 72 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 189

    (76) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 76 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 76 (expresion_loop -> expresion .)
    COMA            reduce using rule 76 (expresion_loop -> expresion .)


state 190

    (74) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)
    COMA            reduce using rule 74 (expresion_option -> OR nodo12_or nuevaexp .)


state 191

    (85) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    COMA            reduce using rule 85 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 192

    (83) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    COMA            reduce using rule 83 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 193

    (82) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)
    COMA            reduce using rule 82 (nuevaexp_type -> LESS nodo9_menor exp .)


state 194

    (87) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    COMA            reduce using rule 87 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 195

    (86) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    COMA            reduce using rule 86 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 196

    (84) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    COMA            reduce using rule 84 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 197

    (98) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS . func_params RPARENTHESIS gosub SEMICOLON
    (105) func_params -> . expresion param_cuad func_params_loop
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    func_params                    shift and go to state 205
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 206
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 198

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 207


state 199

    (66) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (67) condicion_option -> . ELSE nodo14 bloque
    (68) condicion_option -> .

    ELSE            shift and go to state 208
    ID              reduce using rule 68 (condicion_option -> .)
    IF              reduce using rule 68 (condicion_option -> .)
    PRINT           reduce using rule 68 (condicion_option -> .)
    RETURN          reduce using rule 68 (condicion_option -> .)
    WHILE           reduce using rule 68 (condicion_option -> .)
    VAR             reduce using rule 68 (condicion_option -> .)
    RCURLY          reduce using rule 68 (condicion_option -> .)

    condicion_option               shift and go to state 209

state 200

    (34) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON . tipo function_local_add_type semicolon_function_local_loop
    (45) tipo -> . INTTYPE
    (46) tipo -> . FLOATTYPE
    (47) tipo -> . CHARTYPE
    (48) tipo -> . BOOLTYPE
    (49) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 210

state 201

    (36) vars_locales_id_loop -> COMA ID . add_pila_funciones vars_locales_id_loop
    (30) add_pila_funciones -> .

    COMA            reduce using rule 30 (add_pila_funciones -> .)
    COLON           reduce using rule 30 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 211

state 202

    (32) semicolon_function_loop -> SEMICOLON . params
    (26) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (27) params -> .

    ID              shift and go to state 44
    RPARENTHESIS    reduce using rule 27 (params -> .)

    params                         shift and go to state 212

state 203

    (26) params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .

    RPARENTHESIS    reduce using rule 26 (params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .)


state 204

    (63) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (65) nodo17 -> .

    ID              reduce using rule 65 (nodo17 -> .)
    IF              reduce using rule 65 (nodo17 -> .)
    PRINT           reduce using rule 65 (nodo17 -> .)
    RETURN          reduce using rule 65 (nodo17 -> .)
    WHILE           reduce using rule 65 (nodo17 -> .)
    VAR             reduce using rule 65 (nodo17 -> .)
    RCURLY          reduce using rule 65 (nodo17 -> .)

    nodo17                         shift and go to state 213

state 205

    (98) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params . RPARENTHESIS gosub SEMICOLON

    RPARENTHESIS    shift and go to state 214


state 206

    (105) func_params -> expresion . param_cuad func_params_loop
    (109) param_cuad -> .

    COMA            reduce using rule 109 (param_cuad -> .)
    RPARENTHESIS    reduce using rule 109 (param_cuad -> .)

    param_cuad                     shift and go to state 215

state 207

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (100) asignacion_type -> . CTEINT
    (101) asignacion_type -> . CTEFLOAT
    (102) asignacion_type -> . CTEINT COMA asignacion_type
    (103) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 216
    CTEFLOAT        shift and go to state 217

    asignacion_type                shift and go to state 218

state 208

    (67) condicion_option -> ELSE . nodo14 bloque
    (70) nodo14 -> .

    LCURLY          reduce using rule 70 (nodo14 -> .)

    nodo14                         shift and go to state 219

state 209

    (66) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (69) nodo15 -> .

    ID              reduce using rule 69 (nodo15 -> .)
    IF              reduce using rule 69 (nodo15 -> .)
    PRINT           reduce using rule 69 (nodo15 -> .)
    RETURN          reduce using rule 69 (nodo15 -> .)
    WHILE           reduce using rule 69 (nodo15 -> .)
    VAR             reduce using rule 69 (nodo15 -> .)
    RCURLY          reduce using rule 69 (nodo15 -> .)

    nodo15                         shift and go to state 220

state 210

    (34) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo . function_local_add_type semicolon_function_local_loop
    (41) function_local_add_type -> .

    SEMICOLON       reduce using rule 41 (function_local_add_type -> .)
    LCURLY          reduce using rule 41 (function_local_add_type -> .)

    function_local_add_type        shift and go to state 221

state 211

    (36) vars_locales_id_loop -> COMA ID add_pila_funciones . vars_locales_id_loop
    (36) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (37) vars_locales_id_loop -> .

    COMA            shift and go to state 178
    COLON           reduce using rule 37 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 222

state 212

    (32) semicolon_function_loop -> SEMICOLON params .

    RPARENTHESIS    reduce using rule 32 (semicolon_function_loop -> SEMICOLON params .)


state 213

    (63) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RETURN          reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    VAR             reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 63 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 214

    (98) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS . gosub SEMICOLON
    (108) gosub -> .

    SEMICOLON       reduce using rule 108 (gosub -> .)

    gosub                          shift and go to state 223

state 215

    (105) func_params -> expresion param_cuad . func_params_loop
    (106) func_params_loop -> . COMA expresion param_cuad func_params_loop
    (107) func_params_loop -> .

    COMA            shift and go to state 225
    RPARENTHESIS    reduce using rule 107 (func_params_loop -> .)

    func_params_loop               shift and go to state 224

state 216

    (100) asignacion_type -> CTEINT .
    (102) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 100 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 226


state 217

    (101) asignacion_type -> CTEFLOAT .
    (103) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 101 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 227


state 218

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 228


state 219

    (67) condicion_option -> ELSE nodo14 . bloque
    (50) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 41

    bloque                         shift and go to state 229

state 220

    (66) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RETURN          reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    VAR             reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 66 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 221

    (34) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type . semicolon_function_local_loop
    (38) semicolon_function_local_loop -> . SEMICOLON vars_locales_funcion
    (39) semicolon_function_local_loop -> .

    SEMICOLON       shift and go to state 230
    LCURLY          reduce using rule 39 (semicolon_function_local_loop -> .)

    semicolon_function_local_loop  shift and go to state 231

state 222

    (36) vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .

    COLON           reduce using rule 36 (vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .)


state 223

    (98) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub . SEMICOLON

    SEMICOLON       shift and go to state 232


state 224

    (105) func_params -> expresion param_cuad func_params_loop .

    RPARENTHESIS    reduce using rule 105 (func_params -> expresion param_cuad func_params_loop .)


state 225

    (106) func_params_loop -> COMA . expresion param_cuad func_params_loop
    (72) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (81) nuevaexp -> . exp nuevaexp_type nodo10
    (111) exp -> . termino nodo5 exp_loop
    (119) termino -> . factor nodo4 termino_loop
    (127) factor -> . factor_var
    (128) factor -> . factor_exp
    (129) factor_var -> . varcte nodo1
    (130) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (134) varcte -> . ID nodoCteV
    (135) varcte -> . CTEINT nodoCteE
    (136) varcte -> . CTEFLOAT nodoCteF
    (137) varcte -> . CTEBOOL nodoCteB
    (138) varcte -> . CTECHAR nodoCteC
    (139) CTEBOOL -> . TRUE
    (140) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 69
    ID              shift and go to state 70
    CTEINT          shift and go to state 68
    CTEFLOAT        shift and go to state 65
    CTECHAR         shift and go to state 62
    TRUE            shift and go to state 63
    FALSE           shift and go to state 71

    termino                        shift and go to state 75
    varcte                         shift and go to state 64
    factor                         shift and go to state 66
    factor_exp                     shift and go to state 67
    nuevaexp                       shift and go to state 104
    expresion                      shift and go to state 233
    CTEBOOL                        shift and go to state 72
    exp                            shift and go to state 106
    factor_var                     shift and go to state 74

state 226

    (102) asignacion_type -> CTEINT COMA . asignacion_type
    (100) asignacion_type -> . CTEINT
    (101) asignacion_type -> . CTEFLOAT
    (102) asignacion_type -> . CTEINT COMA asignacion_type
    (103) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 216
    CTEFLOAT        shift and go to state 217

    asignacion_type                shift and go to state 234

state 227

    (103) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (100) asignacion_type -> . CTEINT
    (101) asignacion_type -> . CTEFLOAT
    (102) asignacion_type -> . CTEINT COMA asignacion_type
    (103) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 216
    CTEFLOAT        shift and go to state 217

    asignacion_type                shift and go to state 235

state 228

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 236


state 229

    (67) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)
    RETURN          reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)
    VAR             reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 67 (condicion_option -> ELSE nodo14 bloque .)


state 230

    (38) semicolon_function_local_loop -> SEMICOLON . vars_locales_funcion
    (34) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (35) vars_locales_funcion -> .

    VAR             shift and go to state 88
    LCURLY          reduce using rule 35 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 237

state 231

    (34) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .

    LCURLY          reduce using rule 34 (vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .)


state 232

    (98) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .

    ID              reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)
    IF              reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)
    PRINT           reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)
    RETURN          reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)
    WHILE           reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)
    VAR             reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)
    RCURLY          reduce using rule 98 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_params RPARENTHESIS gosub SEMICOLON .)


state 233

    (106) func_params_loop -> COMA expresion . param_cuad func_params_loop
    (109) param_cuad -> .

    COMA            reduce using rule 109 (param_cuad -> .)
    RPARENTHESIS    reduce using rule 109 (param_cuad -> .)

    param_cuad                     shift and go to state 238

state 234

    (102) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 102 (asignacion_type -> CTEINT COMA asignacion_type .)


state 235

    (103) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 103 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 236

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    VAR             reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)


state 237

    (38) semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .

    LCURLY          reduce using rule 38 (semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .)


state 238

    (106) func_params_loop -> COMA expresion param_cuad . func_params_loop
    (106) func_params_loop -> . COMA expresion param_cuad func_params_loop
    (107) func_params_loop -> .

    COMA            shift and go to state 225
    RPARENTHESIS    reduce using rule 107 (func_params_loop -> .)

    func_params_loop               shift and go to state 239

state 239

    (106) func_params_loop -> COMA expresion param_cuad func_params_loop .

    RPARENTHESIS    reduce using rule 106 (func_params_loop -> COMA expresion param_cuad func_params_loop .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 15 resolved as shift
WARNING: shift/reduce conflict for VAR in state 108 resolved as shift
