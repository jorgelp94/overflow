Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
Rule 2     add_main_goto -> <empty>
Rule 3     init_goto -> <empty>
Rule 4     end_cuad -> <empty>
Rule 5     variables_globales -> VAR var_global variables_globales
Rule 6     variables_globales -> <empty>
Rule 7     var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop
Rule 8     variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType
Rule 9     variable_global_id_loop_coma -> COMA ID add_pila_var_globales variable_global_id_loop_coma
Rule 10    variable_global_id_loop_coma -> <empty>
Rule 11    add_pila_var_globales -> <empty>
Rule 12    variable_global_end_loop -> var_global
Rule 13    variable_global_end_loop -> <empty>
Rule 14    global_addType -> <empty>
Rule 15    arreglos_globales -> ARR arr_global arreglos_globales
Rule 16    arreglos_globales -> <empty>
Rule 17    arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop
Rule 18    arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType
Rule 19    arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
Rule 20    arr_global_id_loop_coma -> <empty>
Rule 21    arr_global_end_loop -> arr_global
Rule 22    arr_global_end_loop -> <empty>
Rule 23    add_pila_arr_globales -> <empty>
Rule 24    add_arr_tam -> <empty>
Rule 25    arr_global_addType -> <empty>
Rule 26    variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop
Rule 27    variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType
Rule 28    variable_local_id_loop_coma -> COMA ID add_pila_var_locales variable_local_id_loop_coma
Rule 29    variable_local_id_loop_coma -> <empty>
Rule 30    add_pila_var_locales -> <empty>
Rule 31    variable_local_end_loop -> variables_locales
Rule 32    variable_local_end_loop -> <empty>
Rule 33    local_addType -> <empty>
Rule 34    arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop
Rule 35    arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType
Rule 36    arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
Rule 37    arr_local_id_loop_coma -> <empty>
Rule 38    arr_local_end_loop -> arreglos_locales
Rule 39    arr_local_end_loop -> <empty>
Rule 40    add_pila_arr_locales -> <empty>
Rule 41    arr_local_addType -> <empty>
Rule 42    declaracion_funciones -> funcion declaracion_funciones
Rule 43    declaracion_funciones -> <empty>
Rule 44    funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
Rule 45    funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
Rule 46    add_dir_funciones -> <empty>
Rule 47    params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
Rule 48    params -> <empty>
Rule 49    params_loop -> COMA ID add_pila_funciones params_loop
Rule 50    params_loop -> <empty>
Rule 51    add_pila_funciones -> <empty>
Rule 52    semicolon_function_loop -> SEMICOLON params
Rule 53    semicolon_function_loop -> <empty>
Rule 54    verify_func_type -> <empty>
Rule 55    verify_void_type -> <empty>
Rule 56    add_cantidad_vars -> <empty>
Rule 57    function_add_type -> <empty>
Rule 58    vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
Rule 59    vars_locales_funcion -> <empty>
Rule 60    vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop
Rule 61    vars_locales_id_loop -> <empty>
Rule 62    semicolon_function_local_loop -> SEMICOLON vars_locales_funcion
Rule 63    semicolon_function_local_loop -> <empty>
Rule 64    function_local_add_type -> <empty>
Rule 65    arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
Rule 66    arrs_locales_funcion -> <empty>
Rule 67    arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
Rule 68    arrs_locales_id_loop -> <empty>
Rule 69    semicolon_function_local_arr_loop -> SEMICOLON arrs_locales_funcion
Rule 70    semicolon_function_local_arr_loop -> <empty>
Rule 71    add_pila_arr_funciones -> <empty>
Rule 72    function_local_arr_add_type -> <empty>
Rule 73    ret_cuad -> <empty>
Rule 74    add_dir_proc -> <empty>
Rule 75    update_dir_proc -> <empty>
Rule 76    second_update_dir_proc -> <empty>
Rule 77    tipo -> INTTYPE
Rule 78    tipo -> FLOATTYPE
Rule 79    tipo -> CHARTYPE
Rule 80    tipo -> BOOLTYPE
Rule 81    tipo -> VOIDTYPE
Rule 82    bloque -> LCURLY bloque_est_loop RCURLY
Rule 83    bloque_est_loop -> estatuto bloque_est_loop
Rule 84    bloque_est_loop -> <empty>
Rule 85    estatuto -> asignacion
Rule 86    estatuto -> condicion
Rule 87    estatuto -> escritura
Rule 88    estatuto -> ciclo
Rule 89    estatuto -> variables_locales
Rule 90    estatuto -> arreglos_locales
Rule 91    estatuto -> regreso
Rule 92    estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON
Rule 93    regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON
Rule 94    return_cuad -> <empty>
Rule 95    escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON
Rule 96    print_cuad -> <empty>
Rule 97    ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while
Rule 98    salto_while -> <empty>
Rule 99    end_while -> <empty>
Rule 100   condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if
Rule 101   condicion_option -> ELSE cuad_goto bloque
Rule 102   condicion_option -> <empty>
Rule 103   end_if -> <empty>
Rule 104   cuad_goto -> <empty>
Rule 105   cuad_gotof -> <empty>
Rule 106   expresion -> nuevaexp expresion_option evalua_nueva_exp expresion_loop
Rule 107   expresion_option -> AND agregar_operador_and nuevaexp
Rule 108   expresion_option -> OR agregar_operador_or nuevaexp
Rule 109   expresion_option -> <empty>
Rule 110   expresion_loop -> expresion
Rule 111   expresion_loop -> <empty>
Rule 112   agregar_operador_and -> <empty>
Rule 113   agregar_operador_or -> <empty>
Rule 114   evalua_nueva_exp -> <empty>
Rule 115   nuevaexp -> exp nuevaexp_type evalua_exp
Rule 116   nuevaexp_type -> LESS agregar_operador_menor exp
Rule 117   nuevaexp_type -> GREATER agregar_operador_mayor exp
Rule 118   nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp
Rule 119   nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp
Rule 120   nuevaexp_type -> NOTEQUAL agregar_operador_dif exp
Rule 121   nuevaexp_type -> EQUAL agregar_operador_igual exp
Rule 122   nuevaexp_type -> <empty>
Rule 123   evalua_exp -> <empty>
Rule 124   agregar_operador_menor -> <empty>
Rule 125   agregar_operador_mayor -> <empty>
Rule 126   agregar_operador_menorig -> <empty>
Rule 127   agregar_operador_mayorig -> <empty>
Rule 128   agregar_operador_dif -> <empty>
Rule 129   agregar_operador_igual -> <empty>
Rule 130   asignacion -> ID asignacion_option
Rule 131   asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON
Rule 132   asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
Rule 133   asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON
Rule 134   asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON
Rule 135   asignacion_type -> CTEINT add_arr_valores_pila asignacion_coma_loop
Rule 136   asignacion_type -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop
Rule 137   asignacion_type -> CTECHAR add_arr_valores_pila asignacion_coma_loop
Rule 138   asignacion_type -> CTEBOOL add_arr_valores_pila asignacion_coma_loop
Rule 139   asignacion_coma_loop -> COMA asignacion_type_loop
Rule 140   asignacion_coma_loop -> <empty>
Rule 141   asignacion_type_loop -> CTEINT add_arr_valores_pila asignacion_coma_loop
Rule 142   asignacion_type_loop -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop
Rule 143   asignacion_type_loop -> CTECHAR add_arr_valores_pila asignacion_coma_loop
Rule 144   asignacion_type_loop -> CTEBOOL add_arr_valores_pila asignacion_coma_loop
Rule 145   asignacion_type_loop -> <empty>
Rule 146   add_arr_valores_pila -> <empty>
Rule 147   set_arr_values -> <empty>
Rule 148   arr_pos -> <empty>
Rule 149   asign_arr -> <empty>
Rule 150   function_call -> <empty>
Rule 151   func_args -> expresion args_cuad func_args_loop
Rule 152   func_args -> <empty>
Rule 153   func_args_loop -> COMA expresion args_cuad func_args_loop
Rule 154   func_args_loop -> <empty>
Rule 155   gosub -> <empty>
Rule 156   args_cuad -> <empty>
Rule 157   asign_return_cuad -> <empty>
Rule 158   evalua_asignacion -> <empty>
Rule 159   exp -> termino evalua_termino exp_loop
Rule 160   exp_loop -> exp_type_loop
Rule 161   exp_loop -> <empty>
Rule 162   exp_type_loop -> ADDITION agregar_operador_suma exp
Rule 163   exp_type_loop -> SUBTRACTION agregar_operador_resta exp
Rule 164   agregar_operador_suma -> <empty>
Rule 165   agregar_operador_resta -> <empty>
Rule 166   evalua_termino -> <empty>
Rule 167   termino -> factor evalua_factor termino_loop
Rule 168   termino_loop -> termino_type_loop
Rule 169   termino_loop -> <empty>
Rule 170   termino_type_loop -> MULTIPLICATION agregar_operador_mult termino
Rule 171   termino_type_loop -> DIVISION agregar_operador_div termino
Rule 172   agregar_operador_mult -> <empty>
Rule 173   agregar_operador_div -> <empty>
Rule 174   evalua_factor -> <empty>
Rule 175   factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
Rule 176   factor -> factor_var
Rule 177   factor -> factor_var LBRACKET expresion acceso_arr RBRACKET
Rule 178   factor -> factor_exp
Rule 179   factor_var -> varcte validar_variable
Rule 180   factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
Rule 181   acceso_arr -> <empty>
Rule 182   validar_variable -> <empty>
Rule 183   agrega_parentesis_izq -> <empty>
Rule 184   agrega_parentesis_der -> <empty>
Rule 185   varcte -> ID nodoCteV
Rule 186   varcte -> CTEINT nodoCteE
Rule 187   varcte -> CTEFLOAT nodoCteF
Rule 188   varcte -> CTEBOOL nodoCteB
Rule 189   varcte -> CTECHAR nodoCteC
Rule 190   CTEBOOL -> TRUE
Rule 191   CTEBOOL -> FALSE
Rule 192   nodoCteV -> <empty>
Rule 193   nodoCteE -> <empty>
Rule 194   nodoCteF -> <empty>
Rule 195   nodoCteB -> <empty>
Rule 196   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 162
AND                  : 107
ARR                  : 15 34 65
ASSIGN               : 131 132 133 134
BOOLTYPE             : 80
CALL                 : 92 132 175
CHARTYPE             : 79
COLON                : 8 18 27 35 47 58 65
COMA                 : 9 19 28 36 49 60 67 139 153
CTECHAR              : 137 143 189
CTEFLOAT             : 136 142 187
CTEINT               : 18 19 35 36 65 67 135 141 186
DIVISION             : 171
ELSE                 : 101
END                  : 1
EQUAL                : 121
FALSE                : 191
FLOATTYPE            : 78
FUNC                 : 44 45
GREATER              : 117
GREATEREQUAL         : 119
ID                   : 1 8 9 18 19 27 28 35 36 44 45 47 49 58 60 65 67 92 130 132 175 185
IF                   : 100
INTTYPE              : 77
LBRACKET             : 18 19 35 36 65 67 133 134 177
LCURLY               : 82
LESS                 : 116
LESSEQUAL            : 118
LPARENTHESIS         : 1 44 45 92 93 95 97 100 132 175 180
MAIN                 : 1
MULTIPLICATION       : 170
NOTEQUAL             : 120
OR                   : 108
PRINT                : 95
PROGRAM              : 1
RBRACKET             : 18 19 35 36 65 67 133 134 177
RCURLY               : 82
RETURN               : 93
RPARENTHESIS         : 1 44 45 92 93 95 97 100 132 175 180
SEMICOLON            : 1 7 17 26 34 52 62 69 92 93 95 131 132 133 134
SUBTRACTION          : 163
TRUE                 : 190
VAR                  : 5 26 58
VOIDTYPE             : 45 81
WHILE                : 97
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 138 144 188
acceso_arr           : 177
add_arr_tam          : 18 19 35 36 65 67
add_arr_valores_pila : 135 136 137 138 141 142 143 144
add_cantidad_vars    : 44 45
add_dir_funciones    : 44 45
add_dir_proc         : 1
add_main_goto        : 1
add_pila_arr_funciones : 65 67
add_pila_arr_globales : 18 19
add_pila_arr_locales : 35 36
add_pila_funciones   : 47 49 58 60
add_pila_var_globales : 8 9
add_pila_var_locales : 27 28
agrega_parentesis_der : 180
agrega_parentesis_izq : 180
agregar_operador_and : 107
agregar_operador_dif : 120
agregar_operador_div : 171
agregar_operador_igual : 121
agregar_operador_mayor : 117
agregar_operador_mayorig : 119
agregar_operador_menor : 116
agregar_operador_menorig : 118
agregar_operador_mult : 170
agregar_operador_or  : 108
agregar_operador_resta : 163
agregar_operador_suma : 162
args_cuad            : 151 153
arr_global           : 15 21
arr_global_addType   : 18
arr_global_end_loop  : 17
arr_global_id_loop   : 17
arr_global_id_loop_coma : 18 19
arr_local_addType    : 35
arr_local_end_loop   : 34
arr_local_id_loop    : 34
arr_local_id_loop_coma : 35 36
arr_pos              : 134
arreglos_globales    : 1 15
arreglos_locales     : 38 90
arrs_locales_funcion : 44 45 69
arrs_locales_id_loop : 65 67
asign_arr            : 134
asign_return_cuad    : 132
asignacion           : 85
asignacion_coma_loop : 135 136 137 138 141 142 143 144
asignacion_option    : 130
asignacion_type      : 133
asignacion_type_loop : 139
bloque               : 1 44 45 97 100 101
bloque_est_loop      : 82 83
ciclo                : 88
condicion            : 86
condicion_option     : 100
cuad_goto            : 101
cuad_gotof           : 97 100
declaracion_funciones : 1 42
end_cuad             : 1
end_if               : 100
end_while            : 97
escritura            : 87
estatuto             : 83
evalua_asignacion    : 131
evalua_exp           : 115
evalua_factor        : 167
evalua_nueva_exp     : 106
evalua_termino       : 159
exp                  : 115 116 117 118 119 120 121 162 163
exp_loop             : 159
exp_type_loop        : 160
expresion            : 93 95 97 100 110 131 134 134 151 153 177 180
expresion_loop       : 106
expresion_option     : 106
factor               : 167
factor_exp           : 178
factor_var           : 176 177
func_args            : 92 132 175
func_args_loop       : 151 153
funcion              : 42
function_add_type    : 47
function_call        : 92 132 175
function_local_add_type : 58
function_local_arr_add_type : 65
global_addType       : 8
gosub                : 92 132 175
init_goto            : 1
local_addType        : 27
nodoCteB             : 188
nodoCteC             : 189
nodoCteE             : 186
nodoCteF             : 187
nodoCteV             : 185
nuevaexp             : 106 107 108
nuevaexp_type        : 115
params               : 44 45 52
params_loop          : 47 49
print_cuad           : 95
programa             : 0
regreso              : 91
ret_cuad             : 44 45
return_cuad          : 93
salto_while          : 97
second_update_dir_proc : 1
semicolon_function_local_arr_loop : 65
semicolon_function_local_loop : 58
semicolon_function_loop : 47
set_arr_values       : 133
termino              : 159 170 171
termino_loop         : 167
termino_type_loop    : 168
tipo                 : 8 18 27 35 44 47 58 65
update_dir_proc      : 1
validar_variable     : 179
var_global           : 5 12
varcte               : 179
variable_global_end_loop : 7
variable_global_id_loop : 7
variable_global_id_loop_coma : 8 9
variable_local_end_loop : 26
variable_local_id_loop : 26
variable_local_id_loop_coma : 27 28
variables_globales   : 1 5
variables_locales    : 31 89
vars_locales_funcion : 44 45 62
vars_locales_id_loop : 58 60
verify_func_type     : 175
verify_void_type     : 92

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (74) add_dir_proc -> .

    VAR             reduce using rule 74 (add_dir_proc -> .)
    ARR             reduce using rule 74 (add_dir_proc -> .)
    VOIDTYPE        reduce using rule 74 (add_dir_proc -> .)
    INTTYPE         reduce using rule 74 (add_dir_proc -> .)
    FLOATTYPE       reduce using rule 74 (add_dir_proc -> .)
    CHARTYPE        reduce using rule 74 (add_dir_proc -> .)
    BOOLTYPE        reduce using rule 74 (add_dir_proc -> .)
    MAIN            reduce using rule 74 (add_dir_proc -> .)

    add_dir_proc                   shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc . variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (5) variables_globales -> . VAR var_global variables_globales
    (6) variables_globales -> .

    VAR             shift and go to state 7
    ARR             reduce using rule 6 (variables_globales -> .)
    VOIDTYPE        reduce using rule 6 (variables_globales -> .)
    INTTYPE         reduce using rule 6 (variables_globales -> .)
    FLOATTYPE       reduce using rule 6 (variables_globales -> .)
    CHARTYPE        reduce using rule 6 (variables_globales -> .)
    BOOLTYPE        reduce using rule 6 (variables_globales -> .)
    MAIN            reduce using rule 6 (variables_globales -> .)

    variables_globales             shift and go to state 6

state 6

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales . arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (15) arreglos_globales -> . ARR arr_global arreglos_globales
    (16) arreglos_globales -> .

    ARR             shift and go to state 8
    VOIDTYPE        reduce using rule 16 (arreglos_globales -> .)
    INTTYPE         reduce using rule 16 (arreglos_globales -> .)
    FLOATTYPE       reduce using rule 16 (arreglos_globales -> .)
    CHARTYPE        reduce using rule 16 (arreglos_globales -> .)
    BOOLTYPE        reduce using rule 16 (arreglos_globales -> .)
    MAIN            reduce using rule 16 (arreglos_globales -> .)

    arreglos_globales              shift and go to state 9

state 7

    (5) variables_globales -> VAR . var_global variables_globales
    (7) var_global -> . variable_global_id_loop SEMICOLON variable_global_end_loop
    (8) variable_global_id_loop -> . ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType

    ID              shift and go to state 12

    variable_global_id_loop        shift and go to state 10
    var_global                     shift and go to state 11

state 8

    (15) arreglos_globales -> ARR . arr_global arreglos_globales
    (17) arr_global -> . arr_global_id_loop SEMICOLON arr_global_end_loop
    (18) arr_global_id_loop -> . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    ID              shift and go to state 15

    arr_global                     shift and go to state 13
    arr_global_id_loop             shift and go to state 14

state 9

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales . add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (2) add_main_goto -> .

    VOIDTYPE        reduce using rule 2 (add_main_goto -> .)
    INTTYPE         reduce using rule 2 (add_main_goto -> .)
    FLOATTYPE       reduce using rule 2 (add_main_goto -> .)
    CHARTYPE        reduce using rule 2 (add_main_goto -> .)
    BOOLTYPE        reduce using rule 2 (add_main_goto -> .)
    MAIN            reduce using rule 2 (add_main_goto -> .)

    add_main_goto                  shift and go to state 16

state 10

    (7) var_global -> variable_global_id_loop . SEMICOLON variable_global_end_loop

    SEMICOLON       shift and go to state 17


state 11

    (5) variables_globales -> VAR var_global . variables_globales
    (5) variables_globales -> . VAR var_global variables_globales
    (6) variables_globales -> .

    VAR             shift and go to state 7
    ARR             reduce using rule 6 (variables_globales -> .)
    VOIDTYPE        reduce using rule 6 (variables_globales -> .)
    INTTYPE         reduce using rule 6 (variables_globales -> .)
    FLOATTYPE       reduce using rule 6 (variables_globales -> .)
    CHARTYPE        reduce using rule 6 (variables_globales -> .)
    BOOLTYPE        reduce using rule 6 (variables_globales -> .)
    MAIN            reduce using rule 6 (variables_globales -> .)

    variables_globales             shift and go to state 18

state 12

    (8) variable_global_id_loop -> ID . add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType
    (11) add_pila_var_globales -> .

    COMA            reduce using rule 11 (add_pila_var_globales -> .)
    COLON           reduce using rule 11 (add_pila_var_globales -> .)

    add_pila_var_globales          shift and go to state 19

state 13

    (15) arreglos_globales -> ARR arr_global . arreglos_globales
    (15) arreglos_globales -> . ARR arr_global arreglos_globales
    (16) arreglos_globales -> .

    ARR             shift and go to state 8
    VOIDTYPE        reduce using rule 16 (arreglos_globales -> .)
    INTTYPE         reduce using rule 16 (arreglos_globales -> .)
    FLOATTYPE       reduce using rule 16 (arreglos_globales -> .)
    CHARTYPE        reduce using rule 16 (arreglos_globales -> .)
    BOOLTYPE        reduce using rule 16 (arreglos_globales -> .)
    MAIN            reduce using rule 16 (arreglos_globales -> .)

    arreglos_globales              shift and go to state 20

state 14

    (17) arr_global -> arr_global_id_loop . SEMICOLON arr_global_end_loop

    SEMICOLON       shift and go to state 21


state 15

    (18) arr_global_id_loop -> ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    LBRACKET        shift and go to state 22


state 16

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto . update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (75) update_dir_proc -> .

    VOIDTYPE        reduce using rule 75 (update_dir_proc -> .)
    INTTYPE         reduce using rule 75 (update_dir_proc -> .)
    FLOATTYPE       reduce using rule 75 (update_dir_proc -> .)
    CHARTYPE        reduce using rule 75 (update_dir_proc -> .)
    BOOLTYPE        reduce using rule 75 (update_dir_proc -> .)
    MAIN            reduce using rule 75 (update_dir_proc -> .)

    update_dir_proc                shift and go to state 23

state 17

    (7) var_global -> variable_global_id_loop SEMICOLON . variable_global_end_loop
    (12) variable_global_end_loop -> . var_global
    (13) variable_global_end_loop -> .
    (7) var_global -> . variable_global_id_loop SEMICOLON variable_global_end_loop
    (8) variable_global_id_loop -> . ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType

    VAR             reduce using rule 13 (variable_global_end_loop -> .)
    ARR             reduce using rule 13 (variable_global_end_loop -> .)
    VOIDTYPE        reduce using rule 13 (variable_global_end_loop -> .)
    INTTYPE         reduce using rule 13 (variable_global_end_loop -> .)
    FLOATTYPE       reduce using rule 13 (variable_global_end_loop -> .)
    CHARTYPE        reduce using rule 13 (variable_global_end_loop -> .)
    BOOLTYPE        reduce using rule 13 (variable_global_end_loop -> .)
    MAIN            reduce using rule 13 (variable_global_end_loop -> .)
    ID              shift and go to state 12

    variable_global_end_loop       shift and go to state 24
    variable_global_id_loop        shift and go to state 10
    var_global                     shift and go to state 25

state 18

    (5) variables_globales -> VAR var_global variables_globales .

    ARR             reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)
    VOIDTYPE        reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)
    INTTYPE         reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)
    FLOATTYPE       reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)
    CHARTYPE        reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)
    BOOLTYPE        reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)
    MAIN            reduce using rule 5 (variables_globales -> VAR var_global variables_globales .)


state 19

    (8) variable_global_id_loop -> ID add_pila_var_globales . variable_global_id_loop_coma COLON tipo global_addType
    (9) variable_global_id_loop_coma -> . COMA ID add_pila_var_globales variable_global_id_loop_coma
    (10) variable_global_id_loop_coma -> .

    COMA            shift and go to state 27
    COLON           reduce using rule 10 (variable_global_id_loop_coma -> .)

    variable_global_id_loop_coma   shift and go to state 26

state 20

    (15) arreglos_globales -> ARR arr_global arreglos_globales .

    VOIDTYPE        reduce using rule 15 (arreglos_globales -> ARR arr_global arreglos_globales .)
    INTTYPE         reduce using rule 15 (arreglos_globales -> ARR arr_global arreglos_globales .)
    FLOATTYPE       reduce using rule 15 (arreglos_globales -> ARR arr_global arreglos_globales .)
    CHARTYPE        reduce using rule 15 (arreglos_globales -> ARR arr_global arreglos_globales .)
    BOOLTYPE        reduce using rule 15 (arreglos_globales -> ARR arr_global arreglos_globales .)
    MAIN            reduce using rule 15 (arreglos_globales -> ARR arr_global arreglos_globales .)


state 21

    (17) arr_global -> arr_global_id_loop SEMICOLON . arr_global_end_loop
    (21) arr_global_end_loop -> . arr_global
    (22) arr_global_end_loop -> .
    (17) arr_global -> . arr_global_id_loop SEMICOLON arr_global_end_loop
    (18) arr_global_id_loop -> . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    ARR             reduce using rule 22 (arr_global_end_loop -> .)
    VOIDTYPE        reduce using rule 22 (arr_global_end_loop -> .)
    INTTYPE         reduce using rule 22 (arr_global_end_loop -> .)
    FLOATTYPE       reduce using rule 22 (arr_global_end_loop -> .)
    CHARTYPE        reduce using rule 22 (arr_global_end_loop -> .)
    BOOLTYPE        reduce using rule 22 (arr_global_end_loop -> .)
    MAIN            reduce using rule 22 (arr_global_end_loop -> .)
    ID              shift and go to state 15

    arr_global                     shift and go to state 28
    arr_global_end_loop            shift and go to state 29
    arr_global_id_loop             shift and go to state 14

state 22

    (18) arr_global_id_loop -> ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    CTEINT          shift and go to state 30


state 23

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc . declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (42) declaracion_funciones -> . funcion declaracion_funciones
    (43) declaracion_funciones -> .
    (44) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (45) funcion -> . VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    MAIN            reduce using rule 43 (declaracion_funciones -> .)
    VOIDTYPE        shift and go to state 38
    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34

    declaracion_funciones          shift and go to state 31
    tipo                           shift and go to state 37
    funcion                        shift and go to state 33

state 24

    (7) var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .

    VAR             reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    ARR             reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    VOIDTYPE        reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    INTTYPE         reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    FLOATTYPE       reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    CHARTYPE        reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    BOOLTYPE        reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    MAIN            reduce using rule 7 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)


state 25

    (12) variable_global_end_loop -> var_global .

    VAR             reduce using rule 12 (variable_global_end_loop -> var_global .)
    ARR             reduce using rule 12 (variable_global_end_loop -> var_global .)
    VOIDTYPE        reduce using rule 12 (variable_global_end_loop -> var_global .)
    INTTYPE         reduce using rule 12 (variable_global_end_loop -> var_global .)
    FLOATTYPE       reduce using rule 12 (variable_global_end_loop -> var_global .)
    CHARTYPE        reduce using rule 12 (variable_global_end_loop -> var_global .)
    BOOLTYPE        reduce using rule 12 (variable_global_end_loop -> var_global .)
    MAIN            reduce using rule 12 (variable_global_end_loop -> var_global .)


state 26

    (8) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma . COLON tipo global_addType

    COLON           shift and go to state 39


state 27

    (9) variable_global_id_loop_coma -> COMA . ID add_pila_var_globales variable_global_id_loop_coma

    ID              shift and go to state 40


state 28

    (21) arr_global_end_loop -> arr_global .

    ARR             reduce using rule 21 (arr_global_end_loop -> arr_global .)
    VOIDTYPE        reduce using rule 21 (arr_global_end_loop -> arr_global .)
    INTTYPE         reduce using rule 21 (arr_global_end_loop -> arr_global .)
    FLOATTYPE       reduce using rule 21 (arr_global_end_loop -> arr_global .)
    CHARTYPE        reduce using rule 21 (arr_global_end_loop -> arr_global .)
    BOOLTYPE        reduce using rule 21 (arr_global_end_loop -> arr_global .)
    MAIN            reduce using rule 21 (arr_global_end_loop -> arr_global .)


state 29

    (17) arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .

    ARR             reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    VOIDTYPE        reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    INTTYPE         reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    FLOATTYPE       reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    CHARTYPE        reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    BOOLTYPE        reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    MAIN            reduce using rule 17 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)


state 30

    (18) arr_global_id_loop -> ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType
    (24) add_arr_tam -> .

    RBRACKET        reduce using rule 24 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 41

state 31

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones . MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END

    MAIN            shift and go to state 42


state 32

    (79) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 79 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 79 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 79 (tipo -> CHARTYPE .)
    LCURLY          reduce using rule 79 (tipo -> CHARTYPE .)
    ARR             reduce using rule 79 (tipo -> CHARTYPE .)


state 33

    (42) declaracion_funciones -> funcion . declaracion_funciones
    (42) declaracion_funciones -> . funcion declaracion_funciones
    (43) declaracion_funciones -> .
    (44) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (45) funcion -> . VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    MAIN            reduce using rule 43 (declaracion_funciones -> .)
    VOIDTYPE        shift and go to state 38
    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34

    declaracion_funciones          shift and go to state 43
    tipo                           shift and go to state 37
    funcion                        shift and go to state 33

state 34

    (80) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 80 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 80 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 80 (tipo -> BOOLTYPE .)
    LCURLY          reduce using rule 80 (tipo -> BOOLTYPE .)
    ARR             reduce using rule 80 (tipo -> BOOLTYPE .)


state 35

    (78) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 78 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 78 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 78 (tipo -> FLOATTYPE .)
    LCURLY          reduce using rule 78 (tipo -> FLOATTYPE .)
    ARR             reduce using rule 78 (tipo -> FLOATTYPE .)


state 36

    (77) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 77 (tipo -> INTTYPE .)
    FUNC            reduce using rule 77 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 77 (tipo -> INTTYPE .)
    LCURLY          reduce using rule 77 (tipo -> INTTYPE .)
    ARR             reduce using rule 77 (tipo -> INTTYPE .)


state 37

    (44) funcion -> tipo . FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    FUNC            shift and go to state 44


state 38

    (45) funcion -> VOIDTYPE . FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (81) tipo -> VOIDTYPE .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 45

  ! FUNC            [ reduce using rule 81 (tipo -> VOIDTYPE .) ]


state 39

    (8) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON . tipo global_addType
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 47

state 40

    (9) variable_global_id_loop_coma -> COMA ID . add_pila_var_globales variable_global_id_loop_coma
    (11) add_pila_var_globales -> .

    COMA            reduce using rule 11 (add_pila_var_globales -> .)
    COLON           reduce using rule 11 (add_pila_var_globales -> .)

    add_pila_var_globales          shift and go to state 48

state 41

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    RBRACKET        shift and go to state 49


state 42

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN . init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END
    (3) init_goto -> .

    LPARENTHESIS    reduce using rule 3 (init_goto -> .)

    init_goto                      shift and go to state 50

state 43

    (42) declaracion_funciones -> funcion declaracion_funciones .

    MAIN            reduce using rule 42 (declaracion_funciones -> funcion declaracion_funciones .)


state 44

    (44) funcion -> tipo FUNC . ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    ID              shift and go to state 51


state 45

    (45) funcion -> VOIDTYPE FUNC . ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    ID              shift and go to state 52


state 46

    (81) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 81 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 81 (tipo -> VOIDTYPE .)
    LCURLY          reduce using rule 81 (tipo -> VOIDTYPE .)
    ARR             reduce using rule 81 (tipo -> VOIDTYPE .)


state 47

    (8) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo . global_addType
    (14) global_addType -> .

    SEMICOLON       reduce using rule 14 (global_addType -> .)

    global_addType                 shift and go to state 53

state 48

    (9) variable_global_id_loop_coma -> COMA ID add_pila_var_globales . variable_global_id_loop_coma
    (9) variable_global_id_loop_coma -> . COMA ID add_pila_var_globales variable_global_id_loop_coma
    (10) variable_global_id_loop_coma -> .

    COMA            shift and go to state 27
    COLON           reduce using rule 10 (variable_global_id_loop_coma -> .)

    variable_global_id_loop_coma   shift and go to state 54

state 49

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType
    (23) add_pila_arr_globales -> .

    COMA            reduce using rule 23 (add_pila_arr_globales -> .)
    COLON           reduce using rule 23 (add_pila_arr_globales -> .)

    add_pila_arr_globales          shift and go to state 55

state 50

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto . LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END

    LPARENTHESIS    shift and go to state 56


state 51

    (44) funcion -> tipo FUNC ID . add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (46) add_dir_funciones -> .

    LPARENTHESIS    reduce using rule 46 (add_dir_funciones -> .)

    add_dir_funciones              shift and go to state 57

state 52

    (45) funcion -> VOIDTYPE FUNC ID . add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (46) add_dir_funciones -> .

    LPARENTHESIS    reduce using rule 46 (add_dir_funciones -> .)

    add_dir_funciones              shift and go to state 58

state 53

    (8) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType .

    SEMICOLON       reduce using rule 8 (variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType .)


state 54

    (9) variable_global_id_loop_coma -> COMA ID add_pila_var_globales variable_global_id_loop_coma .

    COLON           reduce using rule 9 (variable_global_id_loop_coma -> COMA ID add_pila_var_globales variable_global_id_loop_coma .)


state 55

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales . arr_global_id_loop_coma COLON tipo arr_global_addType
    (19) arr_global_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
    (20) arr_global_id_loop_coma -> .

    COMA            shift and go to state 60
    COLON           reduce using rule 20 (arr_global_id_loop_coma -> .)

    arr_global_id_loop_coma        shift and go to state 59

state 56

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS . RPARENTHESIS bloque second_update_dir_proc end_cuad END

    RPARENTHESIS    shift and go to state 61


state 57

    (44) funcion -> tipo FUNC ID add_dir_funciones . LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    LPARENTHESIS    shift and go to state 62


state 58

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones . LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    LPARENTHESIS    shift and go to state 63


state 59

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma . COLON tipo arr_global_addType

    COLON           shift and go to state 64


state 60

    (19) arr_global_id_loop_coma -> COMA . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    ID              shift and go to state 65


state 61

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS . bloque second_update_dir_proc end_cuad END
    (82) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 67

state 62

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS . params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (47) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (48) params -> .

    ID              shift and go to state 69
    RPARENTHESIS    reduce using rule 48 (params -> .)

    params                         shift and go to state 68

state 63

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS . params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (47) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (48) params -> .

    ID              shift and go to state 69
    RPARENTHESIS    reduce using rule 48 (params -> .)

    params                         shift and go to state 70

state 64

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON . tipo arr_global_addType
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 71

state 65

    (19) arr_global_id_loop_coma -> COMA ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    LBRACKET        shift and go to state 72


state 66

    (82) bloque -> LCURLY . bloque_est_loop RCURLY
    (83) bloque_est_loop -> . estatuto bloque_est_loop
    (84) bloque_est_loop -> .
    (85) estatuto -> . asignacion
    (86) estatuto -> . condicion
    (87) estatuto -> . escritura
    (88) estatuto -> . ciclo
    (89) estatuto -> . variables_locales
    (90) estatuto -> . arreglos_locales
    (91) estatuto -> . regreso
    (92) estatuto -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON
    (130) asignacion -> . ID asignacion_option
    (100) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if
    (95) escritura -> . PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON
    (97) ciclo -> . WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while
    (26) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop
    (34) arreglos_locales -> . ARR arr_local_id_loop SEMICOLON arr_local_end_loop
    (93) regreso -> . RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON

    RCURLY          reduce using rule 84 (bloque_est_loop -> .)
    CALL            shift and go to state 87
    ID              shift and go to state 82
    IF              shift and go to state 83
    PRINT           shift and go to state 76
    WHILE           shift and go to state 75
    VAR             shift and go to state 81
    ARR             shift and go to state 84
    RETURN          shift and go to state 73

    arreglos_locales               shift and go to state 74
    ciclo                          shift and go to state 77
    estatuto                       shift and go to state 78
    condicion                      shift and go to state 79
    variables_locales              shift and go to state 80
    regreso                        shift and go to state 85
    asignacion                     shift and go to state 86
    bloque_est_loop                shift and go to state 88
    escritura                      shift and go to state 89

state 67

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque . second_update_dir_proc end_cuad END
    (76) second_update_dir_proc -> .

    END             reduce using rule 76 (second_update_dir_proc -> .)

    second_update_dir_proc         shift and go to state 90

state 68

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params . RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    RPARENTHESIS    shift and go to state 91


state 69

    (47) params -> ID . add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (51) add_pila_funciones -> .

    COMA            reduce using rule 51 (add_pila_funciones -> .)
    COLON           reduce using rule 51 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 92

state 70

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params . RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    RPARENTHESIS    shift and go to state 93


state 71

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo . arr_global_addType
    (25) arr_global_addType -> .

    SEMICOLON       reduce using rule 25 (arr_global_addType -> .)

    arr_global_addType             shift and go to state 94

state 72

    (19) arr_global_id_loop_coma -> COMA ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    CTEINT          shift and go to state 95


state 73

    (93) regreso -> RETURN . LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 96


state 74

    (90) estatuto -> arreglos_locales .

    CALL            reduce using rule 90 (estatuto -> arreglos_locales .)
    ID              reduce using rule 90 (estatuto -> arreglos_locales .)
    IF              reduce using rule 90 (estatuto -> arreglos_locales .)
    PRINT           reduce using rule 90 (estatuto -> arreglos_locales .)
    WHILE           reduce using rule 90 (estatuto -> arreglos_locales .)
    VAR             reduce using rule 90 (estatuto -> arreglos_locales .)
    ARR             reduce using rule 90 (estatuto -> arreglos_locales .)
    RETURN          reduce using rule 90 (estatuto -> arreglos_locales .)
    RCURLY          reduce using rule 90 (estatuto -> arreglos_locales .)


state 75

    (97) ciclo -> WHILE . LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while

    LPARENTHESIS    shift and go to state 97


state 76

    (95) escritura -> PRINT . LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 98


state 77

    (88) estatuto -> ciclo .

    CALL            reduce using rule 88 (estatuto -> ciclo .)
    ID              reduce using rule 88 (estatuto -> ciclo .)
    IF              reduce using rule 88 (estatuto -> ciclo .)
    PRINT           reduce using rule 88 (estatuto -> ciclo .)
    WHILE           reduce using rule 88 (estatuto -> ciclo .)
    VAR             reduce using rule 88 (estatuto -> ciclo .)
    ARR             reduce using rule 88 (estatuto -> ciclo .)
    RETURN          reduce using rule 88 (estatuto -> ciclo .)
    RCURLY          reduce using rule 88 (estatuto -> ciclo .)


state 78

    (83) bloque_est_loop -> estatuto . bloque_est_loop
    (83) bloque_est_loop -> . estatuto bloque_est_loop
    (84) bloque_est_loop -> .
    (85) estatuto -> . asignacion
    (86) estatuto -> . condicion
    (87) estatuto -> . escritura
    (88) estatuto -> . ciclo
    (89) estatuto -> . variables_locales
    (90) estatuto -> . arreglos_locales
    (91) estatuto -> . regreso
    (92) estatuto -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON
    (130) asignacion -> . ID asignacion_option
    (100) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if
    (95) escritura -> . PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON
    (97) ciclo -> . WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while
    (26) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop
    (34) arreglos_locales -> . ARR arr_local_id_loop SEMICOLON arr_local_end_loop
    (93) regreso -> . RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON

    RCURLY          reduce using rule 84 (bloque_est_loop -> .)
    CALL            shift and go to state 87
    ID              shift and go to state 82
    IF              shift and go to state 83
    PRINT           shift and go to state 76
    WHILE           shift and go to state 75
    VAR             shift and go to state 81
    ARR             shift and go to state 84
    RETURN          shift and go to state 73

    arreglos_locales               shift and go to state 74
    ciclo                          shift and go to state 77
    estatuto                       shift and go to state 78
    condicion                      shift and go to state 79
    variables_locales              shift and go to state 80
    regreso                        shift and go to state 85
    asignacion                     shift and go to state 86
    bloque_est_loop                shift and go to state 99
    escritura                      shift and go to state 89

state 79

    (86) estatuto -> condicion .

    CALL            reduce using rule 86 (estatuto -> condicion .)
    ID              reduce using rule 86 (estatuto -> condicion .)
    IF              reduce using rule 86 (estatuto -> condicion .)
    PRINT           reduce using rule 86 (estatuto -> condicion .)
    WHILE           reduce using rule 86 (estatuto -> condicion .)
    VAR             reduce using rule 86 (estatuto -> condicion .)
    ARR             reduce using rule 86 (estatuto -> condicion .)
    RETURN          reduce using rule 86 (estatuto -> condicion .)
    RCURLY          reduce using rule 86 (estatuto -> condicion .)


state 80

    (89) estatuto -> variables_locales .

    CALL            reduce using rule 89 (estatuto -> variables_locales .)
    ID              reduce using rule 89 (estatuto -> variables_locales .)
    IF              reduce using rule 89 (estatuto -> variables_locales .)
    PRINT           reduce using rule 89 (estatuto -> variables_locales .)
    WHILE           reduce using rule 89 (estatuto -> variables_locales .)
    VAR             reduce using rule 89 (estatuto -> variables_locales .)
    ARR             reduce using rule 89 (estatuto -> variables_locales .)
    RETURN          reduce using rule 89 (estatuto -> variables_locales .)
    RCURLY          reduce using rule 89 (estatuto -> variables_locales .)


state 81

    (26) variables_locales -> VAR . variable_local_id_loop SEMICOLON variable_local_end_loop
    (27) variable_local_id_loop -> . ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType

    ID              shift and go to state 101

    variable_local_id_loop         shift and go to state 100

state 82

    (130) asignacion -> ID . asignacion_option
    (131) asignacion_option -> . ASSIGN expresion evalua_asignacion SEMICOLON
    (132) asignacion_option -> . ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (133) asignacion_option -> . ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON
    (134) asignacion_option -> . LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON

    ASSIGN          shift and go to state 103
    LBRACKET        shift and go to state 104

    asignacion_option              shift and go to state 102

state 83

    (100) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if

    LPARENTHESIS    shift and go to state 105


state 84

    (34) arreglos_locales -> ARR . arr_local_id_loop SEMICOLON arr_local_end_loop
    (35) arr_local_id_loop -> . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    ID              shift and go to state 107

    arr_local_id_loop              shift and go to state 106

state 85

    (91) estatuto -> regreso .

    CALL            reduce using rule 91 (estatuto -> regreso .)
    ID              reduce using rule 91 (estatuto -> regreso .)
    IF              reduce using rule 91 (estatuto -> regreso .)
    PRINT           reduce using rule 91 (estatuto -> regreso .)
    WHILE           reduce using rule 91 (estatuto -> regreso .)
    VAR             reduce using rule 91 (estatuto -> regreso .)
    ARR             reduce using rule 91 (estatuto -> regreso .)
    RETURN          reduce using rule 91 (estatuto -> regreso .)
    RCURLY          reduce using rule 91 (estatuto -> regreso .)


state 86

    (85) estatuto -> asignacion .

    CALL            reduce using rule 85 (estatuto -> asignacion .)
    ID              reduce using rule 85 (estatuto -> asignacion .)
    IF              reduce using rule 85 (estatuto -> asignacion .)
    PRINT           reduce using rule 85 (estatuto -> asignacion .)
    WHILE           reduce using rule 85 (estatuto -> asignacion .)
    VAR             reduce using rule 85 (estatuto -> asignacion .)
    ARR             reduce using rule 85 (estatuto -> asignacion .)
    RETURN          reduce using rule 85 (estatuto -> asignacion .)
    RCURLY          reduce using rule 85 (estatuto -> asignacion .)


state 87

    (92) estatuto -> CALL . ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON

    ID              shift and go to state 108


state 88

    (82) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 109


state 89

    (87) estatuto -> escritura .

    CALL            reduce using rule 87 (estatuto -> escritura .)
    ID              reduce using rule 87 (estatuto -> escritura .)
    IF              reduce using rule 87 (estatuto -> escritura .)
    PRINT           reduce using rule 87 (estatuto -> escritura .)
    WHILE           reduce using rule 87 (estatuto -> escritura .)
    VAR             reduce using rule 87 (estatuto -> escritura .)
    ARR             reduce using rule 87 (estatuto -> escritura .)
    RETURN          reduce using rule 87 (estatuto -> escritura .)
    RCURLY          reduce using rule 87 (estatuto -> escritura .)


state 90

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc . end_cuad END
    (4) end_cuad -> .

    END             reduce using rule 4 (end_cuad -> .)

    end_cuad                       shift and go to state 110

state 91

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS . vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (58) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (59) vars_locales_funcion -> .

    VAR             shift and go to state 112
    ARR             reduce using rule 59 (vars_locales_funcion -> .)
    LCURLY          reduce using rule 59 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 111

state 92

    (47) params -> ID add_pila_funciones . params_loop COLON tipo function_add_type semicolon_function_loop
    (49) params_loop -> . COMA ID add_pila_funciones params_loop
    (50) params_loop -> .

    COMA            shift and go to state 114
    COLON           reduce using rule 50 (params_loop -> .)

    params_loop                    shift and go to state 113

state 93

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS . vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (58) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (59) vars_locales_funcion -> .

    VAR             shift and go to state 112
    ARR             reduce using rule 59 (vars_locales_funcion -> .)
    LCURLY          reduce using rule 59 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 115

state 94

    (18) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType .

    SEMICOLON       reduce using rule 18 (arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType .)


state 95

    (19) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
    (24) add_arr_tam -> .

    RBRACKET        reduce using rule 24 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 116

state 96

    (93) regreso -> RETURN LPARENTHESIS . expresion return_cuad RPARENTHESIS SEMICOLON
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 129
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 97

    (97) ciclo -> WHILE LPARENTHESIS . salto_while expresion RPARENTHESIS cuad_gotof bloque end_while
    (98) salto_while -> .

    CALL            reduce using rule 98 (salto_while -> .)
    LPARENTHESIS    reduce using rule 98 (salto_while -> .)
    ID              reduce using rule 98 (salto_while -> .)
    CTEINT          reduce using rule 98 (salto_while -> .)
    CTEFLOAT        reduce using rule 98 (salto_while -> .)
    CTECHAR         reduce using rule 98 (salto_while -> .)
    TRUE            reduce using rule 98 (salto_while -> .)
    FALSE           reduce using rule 98 (salto_while -> .)

    salto_while                    shift and go to state 134

state 98

    (95) escritura -> PRINT LPARENTHESIS . expresion print_cuad RPARENTHESIS SEMICOLON
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 135
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 99

    (83) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 83 (bloque_est_loop -> estatuto bloque_est_loop .)


state 100

    (26) variables_locales -> VAR variable_local_id_loop . SEMICOLON variable_local_end_loop

    SEMICOLON       shift and go to state 136


state 101

    (27) variable_local_id_loop -> ID . add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType
    (30) add_pila_var_locales -> .

    COMA            reduce using rule 30 (add_pila_var_locales -> .)
    COLON           reduce using rule 30 (add_pila_var_locales -> .)

    add_pila_var_locales           shift and go to state 137

state 102

    (130) asignacion -> ID asignacion_option .

    CALL            reduce using rule 130 (asignacion -> ID asignacion_option .)
    ID              reduce using rule 130 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 130 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 130 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 130 (asignacion -> ID asignacion_option .)
    VAR             reduce using rule 130 (asignacion -> ID asignacion_option .)
    ARR             reduce using rule 130 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 130 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 130 (asignacion -> ID asignacion_option .)


state 103

    (131) asignacion_option -> ASSIGN . expresion evalua_asignacion SEMICOLON
    (132) asignacion_option -> ASSIGN . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (133) asignacion_option -> ASSIGN . LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 140
    LBRACKET        shift and go to state 138
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 139
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 104

    (134) asignacion_option -> LBRACKET . expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 141
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 105

    (100) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    varcte                         shift and go to state 119
    expresion                      shift and go to state 142
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 106

    (34) arreglos_locales -> ARR arr_local_id_loop . SEMICOLON arr_local_end_loop

    SEMICOLON       shift and go to state 143


state 107

    (35) arr_local_id_loop -> ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    LBRACKET        shift and go to state 144


state 108

    (92) estatuto -> CALL ID . function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON
    (150) function_call -> .

    LPARENTHESIS    reduce using rule 150 (function_call -> .)

    function_call                  shift and go to state 145

state 109

    (82) bloque -> LCURLY bloque_est_loop RCURLY .

    ELSE            reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CALL            reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VAR             reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ARR             reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 82 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 110

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad . END

    END             shift and go to state 146


state 111

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion . arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (65) arrs_locales_funcion -> . ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (66) arrs_locales_funcion -> .

    ARR             shift and go to state 148
    LCURLY          reduce using rule 66 (arrs_locales_funcion -> .)

    arrs_locales_funcion           shift and go to state 147

state 112

    (58) vars_locales_funcion -> VAR . ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop

    ID              shift and go to state 149


state 113

    (47) params -> ID add_pila_funciones params_loop . COLON tipo function_add_type semicolon_function_loop

    COLON           shift and go to state 150


state 114

    (49) params_loop -> COMA . ID add_pila_funciones params_loop

    ID              shift and go to state 151


state 115

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion . arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (65) arrs_locales_funcion -> . ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (66) arrs_locales_funcion -> .

    ARR             shift and go to state 148
    LCURLY          reduce using rule 66 (arrs_locales_funcion -> .)

    arrs_locales_funcion           shift and go to state 152

state 116

    (19) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    RBRACKET        shift and go to state 153


state 117

    (159) exp -> termino . evalua_termino exp_loop
    (166) evalua_termino -> .

    ADDITION        reduce using rule 166 (evalua_termino -> .)
    SUBTRACTION     reduce using rule 166 (evalua_termino -> .)
    LESS            reduce using rule 166 (evalua_termino -> .)
    GREATER         reduce using rule 166 (evalua_termino -> .)
    LESSEQUAL       reduce using rule 166 (evalua_termino -> .)
    GREATEREQUAL    reduce using rule 166 (evalua_termino -> .)
    NOTEQUAL        reduce using rule 166 (evalua_termino -> .)
    EQUAL           reduce using rule 166 (evalua_termino -> .)
    AND             reduce using rule 166 (evalua_termino -> .)
    OR              reduce using rule 166 (evalua_termino -> .)
    CALL            reduce using rule 166 (evalua_termino -> .)
    LPARENTHESIS    reduce using rule 166 (evalua_termino -> .)
    ID              reduce using rule 166 (evalua_termino -> .)
    CTEINT          reduce using rule 166 (evalua_termino -> .)
    CTEFLOAT        reduce using rule 166 (evalua_termino -> .)
    CTECHAR         reduce using rule 166 (evalua_termino -> .)
    TRUE            reduce using rule 166 (evalua_termino -> .)
    FALSE           reduce using rule 166 (evalua_termino -> .)
    RPARENTHESIS    reduce using rule 166 (evalua_termino -> .)
    SEMICOLON       reduce using rule 166 (evalua_termino -> .)
    RBRACKET        reduce using rule 166 (evalua_termino -> .)
    COMA            reduce using rule 166 (evalua_termino -> .)

    evalua_termino                 shift and go to state 154

state 118

    (190) CTEBOOL -> TRUE .

    LBRACKET        reduce using rule 190 (CTEBOOL -> TRUE .)
    MULTIPLICATION  reduce using rule 190 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 190 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 190 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 190 (CTEBOOL -> TRUE .)
    AND             reduce using rule 190 (CTEBOOL -> TRUE .)
    OR              reduce using rule 190 (CTEBOOL -> TRUE .)
    CALL            reduce using rule 190 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 190 (CTEBOOL -> TRUE .)
    ID              reduce using rule 190 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 190 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 190 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 190 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 190 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 190 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 190 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 190 (CTEBOOL -> TRUE .)
    RBRACKET        reduce using rule 190 (CTEBOOL -> TRUE .)
    COMA            reduce using rule 190 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 190 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 190 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 190 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 190 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 190 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 190 (CTEBOOL -> TRUE .)


state 119

    (179) factor_var -> varcte . validar_variable
    (182) validar_variable -> .

    LBRACKET        reduce using rule 182 (validar_variable -> .)
    MULTIPLICATION  reduce using rule 182 (validar_variable -> .)
    DIVISION        reduce using rule 182 (validar_variable -> .)
    ADDITION        reduce using rule 182 (validar_variable -> .)
    SUBTRACTION     reduce using rule 182 (validar_variable -> .)
    LESS            reduce using rule 182 (validar_variable -> .)
    GREATER         reduce using rule 182 (validar_variable -> .)
    LESSEQUAL       reduce using rule 182 (validar_variable -> .)
    GREATEREQUAL    reduce using rule 182 (validar_variable -> .)
    NOTEQUAL        reduce using rule 182 (validar_variable -> .)
    EQUAL           reduce using rule 182 (validar_variable -> .)
    AND             reduce using rule 182 (validar_variable -> .)
    OR              reduce using rule 182 (validar_variable -> .)
    CALL            reduce using rule 182 (validar_variable -> .)
    LPARENTHESIS    reduce using rule 182 (validar_variable -> .)
    ID              reduce using rule 182 (validar_variable -> .)
    CTEINT          reduce using rule 182 (validar_variable -> .)
    CTEFLOAT        reduce using rule 182 (validar_variable -> .)
    CTECHAR         reduce using rule 182 (validar_variable -> .)
    TRUE            reduce using rule 182 (validar_variable -> .)
    FALSE           reduce using rule 182 (validar_variable -> .)
    RPARENTHESIS    reduce using rule 182 (validar_variable -> .)
    SEMICOLON       reduce using rule 182 (validar_variable -> .)
    RBRACKET        reduce using rule 182 (validar_variable -> .)
    COMA            reduce using rule 182 (validar_variable -> .)

    validar_variable               shift and go to state 155

state 120

    (187) varcte -> CTEFLOAT . nodoCteF
    (194) nodoCteF -> .

    LBRACKET        reduce using rule 194 (nodoCteF -> .)
    MULTIPLICATION  reduce using rule 194 (nodoCteF -> .)
    DIVISION        reduce using rule 194 (nodoCteF -> .)
    ADDITION        reduce using rule 194 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 194 (nodoCteF -> .)
    LESS            reduce using rule 194 (nodoCteF -> .)
    GREATER         reduce using rule 194 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 194 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 194 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 194 (nodoCteF -> .)
    EQUAL           reduce using rule 194 (nodoCteF -> .)
    AND             reduce using rule 194 (nodoCteF -> .)
    OR              reduce using rule 194 (nodoCteF -> .)
    CALL            reduce using rule 194 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 194 (nodoCteF -> .)
    ID              reduce using rule 194 (nodoCteF -> .)
    CTEINT          reduce using rule 194 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 194 (nodoCteF -> .)
    CTECHAR         reduce using rule 194 (nodoCteF -> .)
    TRUE            reduce using rule 194 (nodoCteF -> .)
    FALSE           reduce using rule 194 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 194 (nodoCteF -> .)
    SEMICOLON       reduce using rule 194 (nodoCteF -> .)
    RBRACKET        reduce using rule 194 (nodoCteF -> .)
    COMA            reduce using rule 194 (nodoCteF -> .)

    nodoCteF                       shift and go to state 156

state 121

    (191) CTEBOOL -> FALSE .

    LBRACKET        reduce using rule 191 (CTEBOOL -> FALSE .)
    MULTIPLICATION  reduce using rule 191 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 191 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 191 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 191 (CTEBOOL -> FALSE .)
    AND             reduce using rule 191 (CTEBOOL -> FALSE .)
    OR              reduce using rule 191 (CTEBOOL -> FALSE .)
    CALL            reduce using rule 191 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 191 (CTEBOOL -> FALSE .)
    ID              reduce using rule 191 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 191 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 191 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 191 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 191 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 191 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 191 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 191 (CTEBOOL -> FALSE .)
    RBRACKET        reduce using rule 191 (CTEBOOL -> FALSE .)
    COMA            reduce using rule 191 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 191 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 191 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 191 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 191 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 191 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 191 (CTEBOOL -> FALSE .)


state 122

    (167) termino -> factor . evalua_factor termino_loop
    (174) evalua_factor -> .

    MULTIPLICATION  reduce using rule 174 (evalua_factor -> .)
    DIVISION        reduce using rule 174 (evalua_factor -> .)
    ADDITION        reduce using rule 174 (evalua_factor -> .)
    SUBTRACTION     reduce using rule 174 (evalua_factor -> .)
    LESS            reduce using rule 174 (evalua_factor -> .)
    GREATER         reduce using rule 174 (evalua_factor -> .)
    LESSEQUAL       reduce using rule 174 (evalua_factor -> .)
    GREATEREQUAL    reduce using rule 174 (evalua_factor -> .)
    NOTEQUAL        reduce using rule 174 (evalua_factor -> .)
    EQUAL           reduce using rule 174 (evalua_factor -> .)
    AND             reduce using rule 174 (evalua_factor -> .)
    OR              reduce using rule 174 (evalua_factor -> .)
    CALL            reduce using rule 174 (evalua_factor -> .)
    LPARENTHESIS    reduce using rule 174 (evalua_factor -> .)
    ID              reduce using rule 174 (evalua_factor -> .)
    CTEINT          reduce using rule 174 (evalua_factor -> .)
    CTEFLOAT        reduce using rule 174 (evalua_factor -> .)
    CTECHAR         reduce using rule 174 (evalua_factor -> .)
    TRUE            reduce using rule 174 (evalua_factor -> .)
    FALSE           reduce using rule 174 (evalua_factor -> .)
    RPARENTHESIS    reduce using rule 174 (evalua_factor -> .)
    SEMICOLON       reduce using rule 174 (evalua_factor -> .)
    RBRACKET        reduce using rule 174 (evalua_factor -> .)
    COMA            reduce using rule 174 (evalua_factor -> .)

    evalua_factor                  shift and go to state 157

state 123

    (189) varcte -> CTECHAR . nodoCteC
    (196) nodoCteC -> .

    LBRACKET        reduce using rule 196 (nodoCteC -> .)
    MULTIPLICATION  reduce using rule 196 (nodoCteC -> .)
    DIVISION        reduce using rule 196 (nodoCteC -> .)
    ADDITION        reduce using rule 196 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 196 (nodoCteC -> .)
    LESS            reduce using rule 196 (nodoCteC -> .)
    GREATER         reduce using rule 196 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 196 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 196 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 196 (nodoCteC -> .)
    EQUAL           reduce using rule 196 (nodoCteC -> .)
    AND             reduce using rule 196 (nodoCteC -> .)
    OR              reduce using rule 196 (nodoCteC -> .)
    CALL            reduce using rule 196 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 196 (nodoCteC -> .)
    ID              reduce using rule 196 (nodoCteC -> .)
    CTEINT          reduce using rule 196 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 196 (nodoCteC -> .)
    CTECHAR         reduce using rule 196 (nodoCteC -> .)
    TRUE            reduce using rule 196 (nodoCteC -> .)
    FALSE           reduce using rule 196 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 196 (nodoCteC -> .)
    SEMICOLON       reduce using rule 196 (nodoCteC -> .)
    RBRACKET        reduce using rule 196 (nodoCteC -> .)
    COMA            reduce using rule 196 (nodoCteC -> .)

    nodoCteC                       shift and go to state 158

state 124

    (186) varcte -> CTEINT . nodoCteE
    (193) nodoCteE -> .

    LBRACKET        reduce using rule 193 (nodoCteE -> .)
    MULTIPLICATION  reduce using rule 193 (nodoCteE -> .)
    DIVISION        reduce using rule 193 (nodoCteE -> .)
    ADDITION        reduce using rule 193 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 193 (nodoCteE -> .)
    LESS            reduce using rule 193 (nodoCteE -> .)
    GREATER         reduce using rule 193 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 193 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 193 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 193 (nodoCteE -> .)
    EQUAL           reduce using rule 193 (nodoCteE -> .)
    AND             reduce using rule 193 (nodoCteE -> .)
    OR              reduce using rule 193 (nodoCteE -> .)
    CALL            reduce using rule 193 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 193 (nodoCteE -> .)
    ID              reduce using rule 193 (nodoCteE -> .)
    CTEINT          reduce using rule 193 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 193 (nodoCteE -> .)
    CTECHAR         reduce using rule 193 (nodoCteE -> .)
    TRUE            reduce using rule 193 (nodoCteE -> .)
    FALSE           reduce using rule 193 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 193 (nodoCteE -> .)
    SEMICOLON       reduce using rule 193 (nodoCteE -> .)
    RBRACKET        reduce using rule 193 (nodoCteE -> .)
    COMA            reduce using rule 193 (nodoCteE -> .)

    nodoCteE                       shift and go to state 159

state 125

    (178) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 178 (factor -> factor_exp .)
    DIVISION        reduce using rule 178 (factor -> factor_exp .)
    ADDITION        reduce using rule 178 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 178 (factor -> factor_exp .)
    LESS            reduce using rule 178 (factor -> factor_exp .)
    GREATER         reduce using rule 178 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 178 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 178 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 178 (factor -> factor_exp .)
    EQUAL           reduce using rule 178 (factor -> factor_exp .)
    AND             reduce using rule 178 (factor -> factor_exp .)
    OR              reduce using rule 178 (factor -> factor_exp .)
    CALL            reduce using rule 178 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 178 (factor -> factor_exp .)
    ID              reduce using rule 178 (factor -> factor_exp .)
    CTEINT          reduce using rule 178 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 178 (factor -> factor_exp .)
    CTECHAR         reduce using rule 178 (factor -> factor_exp .)
    TRUE            reduce using rule 178 (factor -> factor_exp .)
    FALSE           reduce using rule 178 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 178 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 178 (factor -> factor_exp .)
    RBRACKET        reduce using rule 178 (factor -> factor_exp .)
    COMA            reduce using rule 178 (factor -> factor_exp .)


state 126

    (180) factor_exp -> LPARENTHESIS . agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (183) agrega_parentesis_izq -> .

    CALL            reduce using rule 183 (agrega_parentesis_izq -> .)
    LPARENTHESIS    reduce using rule 183 (agrega_parentesis_izq -> .)
    ID              reduce using rule 183 (agrega_parentesis_izq -> .)
    CTEINT          reduce using rule 183 (agrega_parentesis_izq -> .)
    CTEFLOAT        reduce using rule 183 (agrega_parentesis_izq -> .)
    CTECHAR         reduce using rule 183 (agrega_parentesis_izq -> .)
    TRUE            reduce using rule 183 (agrega_parentesis_izq -> .)
    FALSE           reduce using rule 183 (agrega_parentesis_izq -> .)

    agrega_parentesis_izq          shift and go to state 160

state 127

    (106) expresion -> nuevaexp . expresion_option evalua_nueva_exp expresion_loop
    (107) expresion_option -> . AND agregar_operador_and nuevaexp
    (108) expresion_option -> . OR agregar_operador_or nuevaexp
    (109) expresion_option -> .

    AND             shift and go to state 161
    OR              shift and go to state 163
    CALL            reduce using rule 109 (expresion_option -> .)
    LPARENTHESIS    reduce using rule 109 (expresion_option -> .)
    ID              reduce using rule 109 (expresion_option -> .)
    CTEINT          reduce using rule 109 (expresion_option -> .)
    CTEFLOAT        reduce using rule 109 (expresion_option -> .)
    CTECHAR         reduce using rule 109 (expresion_option -> .)
    TRUE            reduce using rule 109 (expresion_option -> .)
    FALSE           reduce using rule 109 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 109 (expresion_option -> .)
    SEMICOLON       reduce using rule 109 (expresion_option -> .)
    RBRACKET        reduce using rule 109 (expresion_option -> .)
    COMA            reduce using rule 109 (expresion_option -> .)

    expresion_option               shift and go to state 162

state 128

    (185) varcte -> ID . nodoCteV
    (192) nodoCteV -> .

    LBRACKET        reduce using rule 192 (nodoCteV -> .)
    MULTIPLICATION  reduce using rule 192 (nodoCteV -> .)
    DIVISION        reduce using rule 192 (nodoCteV -> .)
    ADDITION        reduce using rule 192 (nodoCteV -> .)
    SUBTRACTION     reduce using rule 192 (nodoCteV -> .)
    LESS            reduce using rule 192 (nodoCteV -> .)
    GREATER         reduce using rule 192 (nodoCteV -> .)
    LESSEQUAL       reduce using rule 192 (nodoCteV -> .)
    GREATEREQUAL    reduce using rule 192 (nodoCteV -> .)
    NOTEQUAL        reduce using rule 192 (nodoCteV -> .)
    EQUAL           reduce using rule 192 (nodoCteV -> .)
    AND             reduce using rule 192 (nodoCteV -> .)
    OR              reduce using rule 192 (nodoCteV -> .)
    CALL            reduce using rule 192 (nodoCteV -> .)
    LPARENTHESIS    reduce using rule 192 (nodoCteV -> .)
    ID              reduce using rule 192 (nodoCteV -> .)
    CTEINT          reduce using rule 192 (nodoCteV -> .)
    CTEFLOAT        reduce using rule 192 (nodoCteV -> .)
    CTECHAR         reduce using rule 192 (nodoCteV -> .)
    TRUE            reduce using rule 192 (nodoCteV -> .)
    FALSE           reduce using rule 192 (nodoCteV -> .)
    RPARENTHESIS    reduce using rule 192 (nodoCteV -> .)
    SEMICOLON       reduce using rule 192 (nodoCteV -> .)
    RBRACKET        reduce using rule 192 (nodoCteV -> .)
    COMA            reduce using rule 192 (nodoCteV -> .)

    nodoCteV                       shift and go to state 164

state 129

    (93) regreso -> RETURN LPARENTHESIS expresion . return_cuad RPARENTHESIS SEMICOLON
    (94) return_cuad -> .

    RPARENTHESIS    reduce using rule 94 (return_cuad -> .)

    return_cuad                    shift and go to state 165

state 130

    (188) varcte -> CTEBOOL . nodoCteB
    (195) nodoCteB -> .

    LBRACKET        reduce using rule 195 (nodoCteB -> .)
    MULTIPLICATION  reduce using rule 195 (nodoCteB -> .)
    DIVISION        reduce using rule 195 (nodoCteB -> .)
    ADDITION        reduce using rule 195 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 195 (nodoCteB -> .)
    LESS            reduce using rule 195 (nodoCteB -> .)
    GREATER         reduce using rule 195 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 195 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 195 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 195 (nodoCteB -> .)
    EQUAL           reduce using rule 195 (nodoCteB -> .)
    AND             reduce using rule 195 (nodoCteB -> .)
    OR              reduce using rule 195 (nodoCteB -> .)
    CALL            reduce using rule 195 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 195 (nodoCteB -> .)
    ID              reduce using rule 195 (nodoCteB -> .)
    CTEINT          reduce using rule 195 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 195 (nodoCteB -> .)
    CTECHAR         reduce using rule 195 (nodoCteB -> .)
    TRUE            reduce using rule 195 (nodoCteB -> .)
    FALSE           reduce using rule 195 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 195 (nodoCteB -> .)
    SEMICOLON       reduce using rule 195 (nodoCteB -> .)
    RBRACKET        reduce using rule 195 (nodoCteB -> .)
    COMA            reduce using rule 195 (nodoCteB -> .)

    nodoCteB                       shift and go to state 166

state 131

    (175) factor -> CALL . ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type

    ID              shift and go to state 167


state 132

    (115) nuevaexp -> exp . nuevaexp_type evalua_exp
    (116) nuevaexp_type -> . LESS agregar_operador_menor exp
    (117) nuevaexp_type -> . GREATER agregar_operador_mayor exp
    (118) nuevaexp_type -> . LESSEQUAL agregar_operador_menorig exp
    (119) nuevaexp_type -> . GREATEREQUAL agregar_operador_mayorig exp
    (120) nuevaexp_type -> . NOTEQUAL agregar_operador_dif exp
    (121) nuevaexp_type -> . EQUAL agregar_operador_igual exp
    (122) nuevaexp_type -> .

    LESS            shift and go to state 170
    GREATER         shift and go to state 169
    LESSEQUAL       shift and go to state 174
    GREATEREQUAL    shift and go to state 171
    NOTEQUAL        shift and go to state 168
    EQUAL           shift and go to state 172
    AND             reduce using rule 122 (nuevaexp_type -> .)
    OR              reduce using rule 122 (nuevaexp_type -> .)
    CALL            reduce using rule 122 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 122 (nuevaexp_type -> .)
    ID              reduce using rule 122 (nuevaexp_type -> .)
    CTEINT          reduce using rule 122 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 122 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 122 (nuevaexp_type -> .)
    TRUE            reduce using rule 122 (nuevaexp_type -> .)
    FALSE           reduce using rule 122 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 122 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 122 (nuevaexp_type -> .)
    RBRACKET        reduce using rule 122 (nuevaexp_type -> .)
    COMA            reduce using rule 122 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 173

state 133

    (176) factor -> factor_var .
    (177) factor -> factor_var . LBRACKET expresion acceso_arr RBRACKET

    MULTIPLICATION  reduce using rule 176 (factor -> factor_var .)
    DIVISION        reduce using rule 176 (factor -> factor_var .)
    ADDITION        reduce using rule 176 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 176 (factor -> factor_var .)
    LESS            reduce using rule 176 (factor -> factor_var .)
    GREATER         reduce using rule 176 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 176 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 176 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 176 (factor -> factor_var .)
    EQUAL           reduce using rule 176 (factor -> factor_var .)
    AND             reduce using rule 176 (factor -> factor_var .)
    OR              reduce using rule 176 (factor -> factor_var .)
    CALL            reduce using rule 176 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 176 (factor -> factor_var .)
    ID              reduce using rule 176 (factor -> factor_var .)
    CTEINT          reduce using rule 176 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 176 (factor -> factor_var .)
    CTECHAR         reduce using rule 176 (factor -> factor_var .)
    TRUE            reduce using rule 176 (factor -> factor_var .)
    FALSE           reduce using rule 176 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 176 (factor -> factor_var .)
    SEMICOLON       reduce using rule 176 (factor -> factor_var .)
    RBRACKET        reduce using rule 176 (factor -> factor_var .)
    COMA            reduce using rule 176 (factor -> factor_var .)
    LBRACKET        shift and go to state 175


state 134

    (97) ciclo -> WHILE LPARENTHESIS salto_while . expresion RPARENTHESIS cuad_gotof bloque end_while
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 176
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 135

    (95) escritura -> PRINT LPARENTHESIS expresion . print_cuad RPARENTHESIS SEMICOLON
    (96) print_cuad -> .

    RPARENTHESIS    reduce using rule 96 (print_cuad -> .)

    print_cuad                     shift and go to state 177

state 136

    (26) variables_locales -> VAR variable_local_id_loop SEMICOLON . variable_local_end_loop
    (31) variable_local_end_loop -> . variables_locales
    (32) variable_local_end_loop -> .
    (26) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

  ! shift/reduce conflict for VAR resolved as shift
    CALL            reduce using rule 32 (variable_local_end_loop -> .)
    ID              reduce using rule 32 (variable_local_end_loop -> .)
    IF              reduce using rule 32 (variable_local_end_loop -> .)
    PRINT           reduce using rule 32 (variable_local_end_loop -> .)
    WHILE           reduce using rule 32 (variable_local_end_loop -> .)
    ARR             reduce using rule 32 (variable_local_end_loop -> .)
    RETURN          reduce using rule 32 (variable_local_end_loop -> .)
    RCURLY          reduce using rule 32 (variable_local_end_loop -> .)
    VAR             shift and go to state 81

  ! VAR             [ reduce using rule 32 (variable_local_end_loop -> .) ]

    variable_local_end_loop        shift and go to state 178
    variables_locales              shift and go to state 179

state 137

    (27) variable_local_id_loop -> ID add_pila_var_locales . variable_local_id_loop_coma COLON tipo local_addType
    (28) variable_local_id_loop_coma -> . COMA ID add_pila_var_locales variable_local_id_loop_coma
    (29) variable_local_id_loop_coma -> .

    COMA            shift and go to state 181
    COLON           reduce using rule 29 (variable_local_id_loop_coma -> .)

    variable_local_id_loop_coma    shift and go to state 180

state 138

    (133) asignacion_option -> ASSIGN LBRACKET . asignacion_type RBRACKET set_arr_values SEMICOLON
    (135) asignacion_type -> . CTEINT add_arr_valores_pila asignacion_coma_loop
    (136) asignacion_type -> . CTEFLOAT add_arr_valores_pila asignacion_coma_loop
    (137) asignacion_type -> . CTECHAR add_arr_valores_pila asignacion_coma_loop
    (138) asignacion_type -> . CTEBOOL add_arr_valores_pila asignacion_coma_loop
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CTEINT          shift and go to state 183
    CTEFLOAT        shift and go to state 184
    CTECHAR         shift and go to state 185
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    asignacion_type                shift and go to state 186
    CTEBOOL                        shift and go to state 182

state 139

    (131) asignacion_option -> ASSIGN expresion . evalua_asignacion SEMICOLON
    (158) evalua_asignacion -> .

    SEMICOLON       reduce using rule 158 (evalua_asignacion -> .)

    evalua_asignacion              shift and go to state 187

state 140

    (132) asignacion_option -> ASSIGN CALL . ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (175) factor -> CALL . ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type

    ID              shift and go to state 188


state 141

    (134) asignacion_option -> LBRACKET expresion . arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON
    (148) arr_pos -> .

    RBRACKET        reduce using rule 148 (arr_pos -> .)

    arr_pos                        shift and go to state 189

state 142

    (100) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS cuad_gotof bloque condicion_option end_if

    RPARENTHESIS    shift and go to state 190


state 143

    (34) arreglos_locales -> ARR arr_local_id_loop SEMICOLON . arr_local_end_loop
    (38) arr_local_end_loop -> . arreglos_locales
    (39) arr_local_end_loop -> .
    (34) arreglos_locales -> . ARR arr_local_id_loop SEMICOLON arr_local_end_loop

  ! shift/reduce conflict for ARR resolved as shift
    CALL            reduce using rule 39 (arr_local_end_loop -> .)
    ID              reduce using rule 39 (arr_local_end_loop -> .)
    IF              reduce using rule 39 (arr_local_end_loop -> .)
    PRINT           reduce using rule 39 (arr_local_end_loop -> .)
    WHILE           reduce using rule 39 (arr_local_end_loop -> .)
    VAR             reduce using rule 39 (arr_local_end_loop -> .)
    RETURN          reduce using rule 39 (arr_local_end_loop -> .)
    RCURLY          reduce using rule 39 (arr_local_end_loop -> .)
    ARR             shift and go to state 84

  ! ARR             [ reduce using rule 39 (arr_local_end_loop -> .) ]

    arr_local_end_loop             shift and go to state 191
    arreglos_locales               shift and go to state 192

state 144

    (35) arr_local_id_loop -> ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    CTEINT          shift and go to state 193


state 145

    (92) estatuto -> CALL ID function_call . LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON

    LPARENTHESIS    shift and go to state 194


state 146

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc end_cuad END .)


state 147

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion . add_cantidad_vars bloque ret_cuad
    (56) add_cantidad_vars -> .

    LCURLY          reduce using rule 56 (add_cantidad_vars -> .)

    add_cantidad_vars              shift and go to state 195

state 148

    (65) arrs_locales_funcion -> ARR . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    ID              shift and go to state 196


state 149

    (58) vars_locales_funcion -> VAR ID . add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (51) add_pila_funciones -> .

    COMA            reduce using rule 51 (add_pila_funciones -> .)
    COLON           reduce using rule 51 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 197

state 150

    (47) params -> ID add_pila_funciones params_loop COLON . tipo function_add_type semicolon_function_loop
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 198

state 151

    (49) params_loop -> COMA ID . add_pila_funciones params_loop
    (51) add_pila_funciones -> .

    COMA            reduce using rule 51 (add_pila_funciones -> .)
    COLON           reduce using rule 51 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 199

state 152

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion . add_cantidad_vars bloque ret_cuad
    (56) add_cantidad_vars -> .

    LCURLY          reduce using rule 56 (add_cantidad_vars -> .)

    add_cantidad_vars              shift and go to state 200

state 153

    (19) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_globales arr_global_id_loop_coma
    (23) add_pila_arr_globales -> .

    COMA            reduce using rule 23 (add_pila_arr_globales -> .)
    COLON           reduce using rule 23 (add_pila_arr_globales -> .)

    add_pila_arr_globales          shift and go to state 201

state 154

    (159) exp -> termino evalua_termino . exp_loop
    (160) exp_loop -> . exp_type_loop
    (161) exp_loop -> .
    (162) exp_type_loop -> . ADDITION agregar_operador_suma exp
    (163) exp_type_loop -> . SUBTRACTION agregar_operador_resta exp

    LESS            reduce using rule 161 (exp_loop -> .)
    GREATER         reduce using rule 161 (exp_loop -> .)
    LESSEQUAL       reduce using rule 161 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 161 (exp_loop -> .)
    NOTEQUAL        reduce using rule 161 (exp_loop -> .)
    EQUAL           reduce using rule 161 (exp_loop -> .)
    AND             reduce using rule 161 (exp_loop -> .)
    OR              reduce using rule 161 (exp_loop -> .)
    CALL            reduce using rule 161 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 161 (exp_loop -> .)
    ID              reduce using rule 161 (exp_loop -> .)
    CTEINT          reduce using rule 161 (exp_loop -> .)
    CTEFLOAT        reduce using rule 161 (exp_loop -> .)
    CTECHAR         reduce using rule 161 (exp_loop -> .)
    TRUE            reduce using rule 161 (exp_loop -> .)
    FALSE           reduce using rule 161 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 161 (exp_loop -> .)
    SEMICOLON       reduce using rule 161 (exp_loop -> .)
    RBRACKET        reduce using rule 161 (exp_loop -> .)
    COMA            reduce using rule 161 (exp_loop -> .)
    ADDITION        shift and go to state 203
    SUBTRACTION     shift and go to state 205

    exp_type_loop                  shift and go to state 202
    exp_loop                       shift and go to state 204

state 155

    (179) factor_var -> varcte validar_variable .

    LBRACKET        reduce using rule 179 (factor_var -> varcte validar_variable .)
    MULTIPLICATION  reduce using rule 179 (factor_var -> varcte validar_variable .)
    DIVISION        reduce using rule 179 (factor_var -> varcte validar_variable .)
    ADDITION        reduce using rule 179 (factor_var -> varcte validar_variable .)
    SUBTRACTION     reduce using rule 179 (factor_var -> varcte validar_variable .)
    LESS            reduce using rule 179 (factor_var -> varcte validar_variable .)
    GREATER         reduce using rule 179 (factor_var -> varcte validar_variable .)
    LESSEQUAL       reduce using rule 179 (factor_var -> varcte validar_variable .)
    GREATEREQUAL    reduce using rule 179 (factor_var -> varcte validar_variable .)
    NOTEQUAL        reduce using rule 179 (factor_var -> varcte validar_variable .)
    EQUAL           reduce using rule 179 (factor_var -> varcte validar_variable .)
    AND             reduce using rule 179 (factor_var -> varcte validar_variable .)
    OR              reduce using rule 179 (factor_var -> varcte validar_variable .)
    CALL            reduce using rule 179 (factor_var -> varcte validar_variable .)
    LPARENTHESIS    reduce using rule 179 (factor_var -> varcte validar_variable .)
    ID              reduce using rule 179 (factor_var -> varcte validar_variable .)
    CTEINT          reduce using rule 179 (factor_var -> varcte validar_variable .)
    CTEFLOAT        reduce using rule 179 (factor_var -> varcte validar_variable .)
    CTECHAR         reduce using rule 179 (factor_var -> varcte validar_variable .)
    TRUE            reduce using rule 179 (factor_var -> varcte validar_variable .)
    FALSE           reduce using rule 179 (factor_var -> varcte validar_variable .)
    COMA            reduce using rule 179 (factor_var -> varcte validar_variable .)
    RPARENTHESIS    reduce using rule 179 (factor_var -> varcte validar_variable .)
    SEMICOLON       reduce using rule 179 (factor_var -> varcte validar_variable .)
    RBRACKET        reduce using rule 179 (factor_var -> varcte validar_variable .)


state 156

    (187) varcte -> CTEFLOAT nodoCteF .

    LBRACKET        reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    MULTIPLICATION  reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    CALL            reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    RBRACKET        reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)
    COMA            reduce using rule 187 (varcte -> CTEFLOAT nodoCteF .)


state 157

    (167) termino -> factor evalua_factor . termino_loop
    (168) termino_loop -> . termino_type_loop
    (169) termino_loop -> .
    (170) termino_type_loop -> . MULTIPLICATION agregar_operador_mult termino
    (171) termino_type_loop -> . DIVISION agregar_operador_div termino

    ADDITION        reduce using rule 169 (termino_loop -> .)
    SUBTRACTION     reduce using rule 169 (termino_loop -> .)
    LESS            reduce using rule 169 (termino_loop -> .)
    GREATER         reduce using rule 169 (termino_loop -> .)
    LESSEQUAL       reduce using rule 169 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 169 (termino_loop -> .)
    NOTEQUAL        reduce using rule 169 (termino_loop -> .)
    EQUAL           reduce using rule 169 (termino_loop -> .)
    AND             reduce using rule 169 (termino_loop -> .)
    OR              reduce using rule 169 (termino_loop -> .)
    CALL            reduce using rule 169 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 169 (termino_loop -> .)
    ID              reduce using rule 169 (termino_loop -> .)
    CTEINT          reduce using rule 169 (termino_loop -> .)
    CTEFLOAT        reduce using rule 169 (termino_loop -> .)
    CTECHAR         reduce using rule 169 (termino_loop -> .)
    TRUE            reduce using rule 169 (termino_loop -> .)
    FALSE           reduce using rule 169 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 169 (termino_loop -> .)
    SEMICOLON       reduce using rule 169 (termino_loop -> .)
    RBRACKET        reduce using rule 169 (termino_loop -> .)
    COMA            reduce using rule 169 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 208
    DIVISION        shift and go to state 206

    termino_type_loop              shift and go to state 207
    termino_loop                   shift and go to state 209

state 158

    (189) varcte -> CTECHAR nodoCteC .

    LBRACKET        reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    MULTIPLICATION  reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    CALL            reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    RBRACKET        reduce using rule 189 (varcte -> CTECHAR nodoCteC .)
    COMA            reduce using rule 189 (varcte -> CTECHAR nodoCteC .)


state 159

    (186) varcte -> CTEINT nodoCteE .

    LBRACKET        reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    MULTIPLICATION  reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    CALL            reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    RBRACKET        reduce using rule 186 (varcte -> CTEINT nodoCteE .)
    COMA            reduce using rule 186 (varcte -> CTEINT nodoCteE .)


state 160

    (180) factor_exp -> LPARENTHESIS agrega_parentesis_izq . expresion RPARENTHESIS agrega_parentesis_der
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 210
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 161

    (107) expresion_option -> AND . agregar_operador_and nuevaexp
    (112) agregar_operador_and -> .

    CALL            reduce using rule 112 (agregar_operador_and -> .)
    LPARENTHESIS    reduce using rule 112 (agregar_operador_and -> .)
    ID              reduce using rule 112 (agregar_operador_and -> .)
    CTEINT          reduce using rule 112 (agregar_operador_and -> .)
    CTEFLOAT        reduce using rule 112 (agregar_operador_and -> .)
    CTECHAR         reduce using rule 112 (agregar_operador_and -> .)
    TRUE            reduce using rule 112 (agregar_operador_and -> .)
    FALSE           reduce using rule 112 (agregar_operador_and -> .)

    agregar_operador_and           shift and go to state 211

state 162

    (106) expresion -> nuevaexp expresion_option . evalua_nueva_exp expresion_loop
    (114) evalua_nueva_exp -> .

    CALL            reduce using rule 114 (evalua_nueva_exp -> .)
    LPARENTHESIS    reduce using rule 114 (evalua_nueva_exp -> .)
    ID              reduce using rule 114 (evalua_nueva_exp -> .)
    CTEINT          reduce using rule 114 (evalua_nueva_exp -> .)
    CTEFLOAT        reduce using rule 114 (evalua_nueva_exp -> .)
    CTECHAR         reduce using rule 114 (evalua_nueva_exp -> .)
    TRUE            reduce using rule 114 (evalua_nueva_exp -> .)
    FALSE           reduce using rule 114 (evalua_nueva_exp -> .)
    RPARENTHESIS    reduce using rule 114 (evalua_nueva_exp -> .)
    SEMICOLON       reduce using rule 114 (evalua_nueva_exp -> .)
    RBRACKET        reduce using rule 114 (evalua_nueva_exp -> .)
    COMA            reduce using rule 114 (evalua_nueva_exp -> .)

    evalua_nueva_exp               shift and go to state 212

state 163

    (108) expresion_option -> OR . agregar_operador_or nuevaexp
    (113) agregar_operador_or -> .

    CALL            reduce using rule 113 (agregar_operador_or -> .)
    LPARENTHESIS    reduce using rule 113 (agregar_operador_or -> .)
    ID              reduce using rule 113 (agregar_operador_or -> .)
    CTEINT          reduce using rule 113 (agregar_operador_or -> .)
    CTEFLOAT        reduce using rule 113 (agregar_operador_or -> .)
    CTECHAR         reduce using rule 113 (agregar_operador_or -> .)
    TRUE            reduce using rule 113 (agregar_operador_or -> .)
    FALSE           reduce using rule 113 (agregar_operador_or -> .)

    agregar_operador_or            shift and go to state 213

state 164

    (185) varcte -> ID nodoCteV .

    LBRACKET        reduce using rule 185 (varcte -> ID nodoCteV .)
    MULTIPLICATION  reduce using rule 185 (varcte -> ID nodoCteV .)
    DIVISION        reduce using rule 185 (varcte -> ID nodoCteV .)
    ADDITION        reduce using rule 185 (varcte -> ID nodoCteV .)
    SUBTRACTION     reduce using rule 185 (varcte -> ID nodoCteV .)
    LESS            reduce using rule 185 (varcte -> ID nodoCteV .)
    GREATER         reduce using rule 185 (varcte -> ID nodoCteV .)
    LESSEQUAL       reduce using rule 185 (varcte -> ID nodoCteV .)
    GREATEREQUAL    reduce using rule 185 (varcte -> ID nodoCteV .)
    NOTEQUAL        reduce using rule 185 (varcte -> ID nodoCteV .)
    EQUAL           reduce using rule 185 (varcte -> ID nodoCteV .)
    AND             reduce using rule 185 (varcte -> ID nodoCteV .)
    OR              reduce using rule 185 (varcte -> ID nodoCteV .)
    CALL            reduce using rule 185 (varcte -> ID nodoCteV .)
    LPARENTHESIS    reduce using rule 185 (varcte -> ID nodoCteV .)
    ID              reduce using rule 185 (varcte -> ID nodoCteV .)
    CTEINT          reduce using rule 185 (varcte -> ID nodoCteV .)
    CTEFLOAT        reduce using rule 185 (varcte -> ID nodoCteV .)
    CTECHAR         reduce using rule 185 (varcte -> ID nodoCteV .)
    TRUE            reduce using rule 185 (varcte -> ID nodoCteV .)
    FALSE           reduce using rule 185 (varcte -> ID nodoCteV .)
    RPARENTHESIS    reduce using rule 185 (varcte -> ID nodoCteV .)
    SEMICOLON       reduce using rule 185 (varcte -> ID nodoCteV .)
    RBRACKET        reduce using rule 185 (varcte -> ID nodoCteV .)
    COMA            reduce using rule 185 (varcte -> ID nodoCteV .)


state 165

    (93) regreso -> RETURN LPARENTHESIS expresion return_cuad . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 214


state 166

    (188) varcte -> CTEBOOL nodoCteB .

    LBRACKET        reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    MULTIPLICATION  reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    CALL            reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    RBRACKET        reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)
    COMA            reduce using rule 188 (varcte -> CTEBOOL nodoCteB .)


state 167

    (175) factor -> CALL ID . function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (150) function_call -> .

    LPARENTHESIS    reduce using rule 150 (function_call -> .)

    function_call                  shift and go to state 215

state 168

    (120) nuevaexp_type -> NOTEQUAL . agregar_operador_dif exp
    (128) agregar_operador_dif -> .

    CALL            reduce using rule 128 (agregar_operador_dif -> .)
    LPARENTHESIS    reduce using rule 128 (agregar_operador_dif -> .)
    ID              reduce using rule 128 (agregar_operador_dif -> .)
    CTEINT          reduce using rule 128 (agregar_operador_dif -> .)
    CTEFLOAT        reduce using rule 128 (agregar_operador_dif -> .)
    CTECHAR         reduce using rule 128 (agregar_operador_dif -> .)
    TRUE            reduce using rule 128 (agregar_operador_dif -> .)
    FALSE           reduce using rule 128 (agregar_operador_dif -> .)

    agregar_operador_dif           shift and go to state 216

state 169

    (117) nuevaexp_type -> GREATER . agregar_operador_mayor exp
    (125) agregar_operador_mayor -> .

    CALL            reduce using rule 125 (agregar_operador_mayor -> .)
    LPARENTHESIS    reduce using rule 125 (agregar_operador_mayor -> .)
    ID              reduce using rule 125 (agregar_operador_mayor -> .)
    CTEINT          reduce using rule 125 (agregar_operador_mayor -> .)
    CTEFLOAT        reduce using rule 125 (agregar_operador_mayor -> .)
    CTECHAR         reduce using rule 125 (agregar_operador_mayor -> .)
    TRUE            reduce using rule 125 (agregar_operador_mayor -> .)
    FALSE           reduce using rule 125 (agregar_operador_mayor -> .)

    agregar_operador_mayor         shift and go to state 217

state 170

    (116) nuevaexp_type -> LESS . agregar_operador_menor exp
    (124) agregar_operador_menor -> .

    CALL            reduce using rule 124 (agregar_operador_menor -> .)
    LPARENTHESIS    reduce using rule 124 (agregar_operador_menor -> .)
    ID              reduce using rule 124 (agregar_operador_menor -> .)
    CTEINT          reduce using rule 124 (agregar_operador_menor -> .)
    CTEFLOAT        reduce using rule 124 (agregar_operador_menor -> .)
    CTECHAR         reduce using rule 124 (agregar_operador_menor -> .)
    TRUE            reduce using rule 124 (agregar_operador_menor -> .)
    FALSE           reduce using rule 124 (agregar_operador_menor -> .)

    agregar_operador_menor         shift and go to state 218

state 171

    (119) nuevaexp_type -> GREATEREQUAL . agregar_operador_mayorig exp
    (127) agregar_operador_mayorig -> .

    CALL            reduce using rule 127 (agregar_operador_mayorig -> .)
    LPARENTHESIS    reduce using rule 127 (agregar_operador_mayorig -> .)
    ID              reduce using rule 127 (agregar_operador_mayorig -> .)
    CTEINT          reduce using rule 127 (agregar_operador_mayorig -> .)
    CTEFLOAT        reduce using rule 127 (agregar_operador_mayorig -> .)
    CTECHAR         reduce using rule 127 (agregar_operador_mayorig -> .)
    TRUE            reduce using rule 127 (agregar_operador_mayorig -> .)
    FALSE           reduce using rule 127 (agregar_operador_mayorig -> .)

    agregar_operador_mayorig       shift and go to state 219

state 172

    (121) nuevaexp_type -> EQUAL . agregar_operador_igual exp
    (129) agregar_operador_igual -> .

    CALL            reduce using rule 129 (agregar_operador_igual -> .)
    LPARENTHESIS    reduce using rule 129 (agregar_operador_igual -> .)
    ID              reduce using rule 129 (agregar_operador_igual -> .)
    CTEINT          reduce using rule 129 (agregar_operador_igual -> .)
    CTEFLOAT        reduce using rule 129 (agregar_operador_igual -> .)
    CTECHAR         reduce using rule 129 (agregar_operador_igual -> .)
    TRUE            reduce using rule 129 (agregar_operador_igual -> .)
    FALSE           reduce using rule 129 (agregar_operador_igual -> .)

    agregar_operador_igual         shift and go to state 220

state 173

    (115) nuevaexp -> exp nuevaexp_type . evalua_exp
    (123) evalua_exp -> .

    AND             reduce using rule 123 (evalua_exp -> .)
    OR              reduce using rule 123 (evalua_exp -> .)
    CALL            reduce using rule 123 (evalua_exp -> .)
    LPARENTHESIS    reduce using rule 123 (evalua_exp -> .)
    ID              reduce using rule 123 (evalua_exp -> .)
    CTEINT          reduce using rule 123 (evalua_exp -> .)
    CTEFLOAT        reduce using rule 123 (evalua_exp -> .)
    CTECHAR         reduce using rule 123 (evalua_exp -> .)
    TRUE            reduce using rule 123 (evalua_exp -> .)
    FALSE           reduce using rule 123 (evalua_exp -> .)
    RPARENTHESIS    reduce using rule 123 (evalua_exp -> .)
    SEMICOLON       reduce using rule 123 (evalua_exp -> .)
    RBRACKET        reduce using rule 123 (evalua_exp -> .)
    COMA            reduce using rule 123 (evalua_exp -> .)

    evalua_exp                     shift and go to state 221

state 174

    (118) nuevaexp_type -> LESSEQUAL . agregar_operador_menorig exp
    (126) agregar_operador_menorig -> .

    CALL            reduce using rule 126 (agregar_operador_menorig -> .)
    LPARENTHESIS    reduce using rule 126 (agregar_operador_menorig -> .)
    ID              reduce using rule 126 (agregar_operador_menorig -> .)
    CTEINT          reduce using rule 126 (agregar_operador_menorig -> .)
    CTEFLOAT        reduce using rule 126 (agregar_operador_menorig -> .)
    CTECHAR         reduce using rule 126 (agregar_operador_menorig -> .)
    TRUE            reduce using rule 126 (agregar_operador_menorig -> .)
    FALSE           reduce using rule 126 (agregar_operador_menorig -> .)

    agregar_operador_menorig       shift and go to state 222

state 175

    (177) factor -> factor_var LBRACKET . expresion acceso_arr RBRACKET
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 223
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 176

    (97) ciclo -> WHILE LPARENTHESIS salto_while expresion . RPARENTHESIS cuad_gotof bloque end_while

    RPARENTHESIS    shift and go to state 224


state 177

    (95) escritura -> PRINT LPARENTHESIS expresion print_cuad . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 225


state 178

    (26) variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .

    CALL            reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    ID              reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    IF              reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    PRINT           reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    WHILE           reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    VAR             reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    ARR             reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RETURN          reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RCURLY          reduce using rule 26 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)


state 179

    (31) variable_local_end_loop -> variables_locales .

    CALL            reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    ID              reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    IF              reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    PRINT           reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    WHILE           reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    VAR             reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    ARR             reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    RETURN          reduce using rule 31 (variable_local_end_loop -> variables_locales .)
    RCURLY          reduce using rule 31 (variable_local_end_loop -> variables_locales .)


state 180

    (27) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma . COLON tipo local_addType

    COLON           shift and go to state 226


state 181

    (28) variable_local_id_loop_coma -> COMA . ID add_pila_var_locales variable_local_id_loop_coma

    ID              shift and go to state 227


state 182

    (138) asignacion_type -> CTEBOOL . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 228

state 183

    (135) asignacion_type -> CTEINT . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 229

state 184

    (136) asignacion_type -> CTEFLOAT . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 230

state 185

    (137) asignacion_type -> CTECHAR . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 231

state 186

    (133) asignacion_option -> ASSIGN LBRACKET asignacion_type . RBRACKET set_arr_values SEMICOLON

    RBRACKET        shift and go to state 232


state 187

    (131) asignacion_option -> ASSIGN expresion evalua_asignacion . SEMICOLON

    SEMICOLON       shift and go to state 233


state 188

    (132) asignacion_option -> ASSIGN CALL ID . function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (175) factor -> CALL ID . function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (150) function_call -> .

    LPARENTHESIS    reduce using rule 150 (function_call -> .)

    function_call                  shift and go to state 234

state 189

    (134) asignacion_option -> LBRACKET expresion arr_pos . RBRACKET ASSIGN expresion asign_arr SEMICOLON

    RBRACKET        shift and go to state 235


state 190

    (100) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . cuad_gotof bloque condicion_option end_if
    (105) cuad_gotof -> .

    LCURLY          reduce using rule 105 (cuad_gotof -> .)

    cuad_gotof                     shift and go to state 236

state 191

    (34) arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .

    CALL            reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    ID              reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    IF              reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    PRINT           reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    WHILE           reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    VAR             reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    ARR             reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    RETURN          reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    RCURLY          reduce using rule 34 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)


state 192

    (38) arr_local_end_loop -> arreglos_locales .

    CALL            reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    ID              reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    IF              reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    PRINT           reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    WHILE           reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    VAR             reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    ARR             reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    RETURN          reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)
    RCURLY          reduce using rule 38 (arr_local_end_loop -> arreglos_locales .)


state 193

    (35) arr_local_id_loop -> ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType
    (24) add_arr_tam -> .

    RBRACKET        reduce using rule 24 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 237

state 194

    (92) estatuto -> CALL ID function_call LPARENTHESIS . func_args RPARENTHESIS gosub verify_void_type SEMICOLON
    (151) func_args -> . expresion args_cuad func_args_loop
    (152) func_args -> .
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 152 (func_args -> .)
    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    func_args                      shift and go to state 238
    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 239
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 195

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars . bloque ret_cuad
    (82) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 240

state 196

    (65) arrs_locales_funcion -> ARR ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    LBRACKET        shift and go to state 241


state 197

    (58) vars_locales_funcion -> VAR ID add_pila_funciones . vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (60) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (61) vars_locales_id_loop -> .

    COMA            shift and go to state 243
    COLON           reduce using rule 61 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 242

state 198

    (47) params -> ID add_pila_funciones params_loop COLON tipo . function_add_type semicolon_function_loop
    (57) function_add_type -> .

    SEMICOLON       reduce using rule 57 (function_add_type -> .)
    RPARENTHESIS    reduce using rule 57 (function_add_type -> .)

    function_add_type              shift and go to state 244

state 199

    (49) params_loop -> COMA ID add_pila_funciones . params_loop
    (49) params_loop -> . COMA ID add_pila_funciones params_loop
    (50) params_loop -> .

    COMA            shift and go to state 114
    COLON           reduce using rule 50 (params_loop -> .)

    params_loop                    shift and go to state 245

state 200

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars . bloque ret_cuad
    (82) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 246

state 201

    (19) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales . arr_global_id_loop_coma
    (19) arr_global_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
    (20) arr_global_id_loop_coma -> .

    COMA            shift and go to state 60
    COLON           reduce using rule 20 (arr_global_id_loop_coma -> .)

    arr_global_id_loop_coma        shift and go to state 247

state 202

    (160) exp_loop -> exp_type_loop .

    LESS            reduce using rule 160 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 160 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 160 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 160 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 160 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 160 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 160 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 160 (exp_loop -> exp_type_loop .)
    CALL            reduce using rule 160 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 160 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 160 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 160 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 160 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 160 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 160 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 160 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 160 (exp_loop -> exp_type_loop .)
    SEMICOLON       reduce using rule 160 (exp_loop -> exp_type_loop .)
    RBRACKET        reduce using rule 160 (exp_loop -> exp_type_loop .)
    COMA            reduce using rule 160 (exp_loop -> exp_type_loop .)


state 203

    (162) exp_type_loop -> ADDITION . agregar_operador_suma exp
    (164) agregar_operador_suma -> .

    CALL            reduce using rule 164 (agregar_operador_suma -> .)
    LPARENTHESIS    reduce using rule 164 (agregar_operador_suma -> .)
    ID              reduce using rule 164 (agregar_operador_suma -> .)
    CTEINT          reduce using rule 164 (agregar_operador_suma -> .)
    CTEFLOAT        reduce using rule 164 (agregar_operador_suma -> .)
    CTECHAR         reduce using rule 164 (agregar_operador_suma -> .)
    TRUE            reduce using rule 164 (agregar_operador_suma -> .)
    FALSE           reduce using rule 164 (agregar_operador_suma -> .)

    agregar_operador_suma          shift and go to state 248

state 204

    (159) exp -> termino evalua_termino exp_loop .

    LESS            reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    GREATER         reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    LESSEQUAL       reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    GREATEREQUAL    reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    NOTEQUAL        reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    EQUAL           reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    AND             reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    OR              reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    CALL            reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    LPARENTHESIS    reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    ID              reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    CTEINT          reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    CTEFLOAT        reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    CTECHAR         reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    TRUE            reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    FALSE           reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    SEMICOLON       reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    RPARENTHESIS    reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    RBRACKET        reduce using rule 159 (exp -> termino evalua_termino exp_loop .)
    COMA            reduce using rule 159 (exp -> termino evalua_termino exp_loop .)


state 205

    (163) exp_type_loop -> SUBTRACTION . agregar_operador_resta exp
    (165) agregar_operador_resta -> .

    CALL            reduce using rule 165 (agregar_operador_resta -> .)
    LPARENTHESIS    reduce using rule 165 (agregar_operador_resta -> .)
    ID              reduce using rule 165 (agregar_operador_resta -> .)
    CTEINT          reduce using rule 165 (agregar_operador_resta -> .)
    CTEFLOAT        reduce using rule 165 (agregar_operador_resta -> .)
    CTECHAR         reduce using rule 165 (agregar_operador_resta -> .)
    TRUE            reduce using rule 165 (agregar_operador_resta -> .)
    FALSE           reduce using rule 165 (agregar_operador_resta -> .)

    agregar_operador_resta         shift and go to state 249

state 206

    (171) termino_type_loop -> DIVISION . agregar_operador_div termino
    (173) agregar_operador_div -> .

    CALL            reduce using rule 173 (agregar_operador_div -> .)
    LPARENTHESIS    reduce using rule 173 (agregar_operador_div -> .)
    ID              reduce using rule 173 (agregar_operador_div -> .)
    CTEINT          reduce using rule 173 (agregar_operador_div -> .)
    CTEFLOAT        reduce using rule 173 (agregar_operador_div -> .)
    CTECHAR         reduce using rule 173 (agregar_operador_div -> .)
    TRUE            reduce using rule 173 (agregar_operador_div -> .)
    FALSE           reduce using rule 173 (agregar_operador_div -> .)

    agregar_operador_div           shift and go to state 250

state 207

    (168) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 168 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 168 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 168 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 168 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 168 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 168 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 168 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 168 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 168 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 168 (termino_loop -> termino_type_loop .)
    CALL            reduce using rule 168 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 168 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 168 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 168 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 168 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 168 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 168 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 168 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 168 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 168 (termino_loop -> termino_type_loop .)
    RBRACKET        reduce using rule 168 (termino_loop -> termino_type_loop .)
    COMA            reduce using rule 168 (termino_loop -> termino_type_loop .)


state 208

    (170) termino_type_loop -> MULTIPLICATION . agregar_operador_mult termino
    (172) agregar_operador_mult -> .

    CALL            reduce using rule 172 (agregar_operador_mult -> .)
    LPARENTHESIS    reduce using rule 172 (agregar_operador_mult -> .)
    ID              reduce using rule 172 (agregar_operador_mult -> .)
    CTEINT          reduce using rule 172 (agregar_operador_mult -> .)
    CTEFLOAT        reduce using rule 172 (agregar_operador_mult -> .)
    CTECHAR         reduce using rule 172 (agregar_operador_mult -> .)
    TRUE            reduce using rule 172 (agregar_operador_mult -> .)
    FALSE           reduce using rule 172 (agregar_operador_mult -> .)

    agregar_operador_mult          shift and go to state 251

state 209

    (167) termino -> factor evalua_factor termino_loop .

    ADDITION        reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    SUBTRACTION     reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    LESS            reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    GREATER         reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    LESSEQUAL       reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    GREATEREQUAL    reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    NOTEQUAL        reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    EQUAL           reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    AND             reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    OR              reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    CALL            reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    LPARENTHESIS    reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    ID              reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    CTEINT          reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    CTEFLOAT        reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    CTECHAR         reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    TRUE            reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    FALSE           reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    RPARENTHESIS    reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    SEMICOLON       reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    RBRACKET        reduce using rule 167 (termino -> factor evalua_factor termino_loop .)
    COMA            reduce using rule 167 (termino -> factor evalua_factor termino_loop .)


state 210

    (180) factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion . RPARENTHESIS agrega_parentesis_der

    RPARENTHESIS    shift and go to state 252


state 211

    (107) expresion_option -> AND agregar_operador_and . nuevaexp
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 253
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 212

    (106) expresion -> nuevaexp expresion_option evalua_nueva_exp . expresion_loop
    (110) expresion_loop -> . expresion
    (111) expresion_loop -> .
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 111 (expresion_loop -> .)
    SEMICOLON       reduce using rule 111 (expresion_loop -> .)
    RBRACKET        reduce using rule 111 (expresion_loop -> .)
    COMA            reduce using rule 111 (expresion_loop -> .)
    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion_loop                 shift and go to state 254
    expresion                      shift and go to state 255
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 213

    (108) expresion_option -> OR agregar_operador_or . nuevaexp
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 256
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 214

    (93) regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 257


state 215

    (175) factor -> CALL ID function_call . LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type

    LPARENTHESIS    shift and go to state 258


state 216

    (120) nuevaexp_type -> NOTEQUAL agregar_operador_dif . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 259
    factor_var                     shift and go to state 133

state 217

    (117) nuevaexp_type -> GREATER agregar_operador_mayor . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 260
    factor_var                     shift and go to state 133

state 218

    (116) nuevaexp_type -> LESS agregar_operador_menor . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 261
    factor_var                     shift and go to state 133

state 219

    (119) nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 262
    factor_var                     shift and go to state 133

state 220

    (121) nuevaexp_type -> EQUAL agregar_operador_igual . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 263
    factor_var                     shift and go to state 133

state 221

    (115) nuevaexp -> exp nuevaexp_type evalua_exp .

    AND             reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    OR              reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    CALL            reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    LPARENTHESIS    reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    ID              reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    CTEINT          reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    CTEFLOAT        reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    CTECHAR         reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    TRUE            reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    FALSE           reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    RPARENTHESIS    reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    SEMICOLON       reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    RBRACKET        reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)
    COMA            reduce using rule 115 (nuevaexp -> exp nuevaexp_type evalua_exp .)


state 222

    (118) nuevaexp_type -> LESSEQUAL agregar_operador_menorig . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 264
    factor_var                     shift and go to state 133

state 223

    (177) factor -> factor_var LBRACKET expresion . acceso_arr RBRACKET
    (181) acceso_arr -> .

    RBRACKET        reduce using rule 181 (acceso_arr -> .)

    acceso_arr                     shift and go to state 265

state 224

    (97) ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS . cuad_gotof bloque end_while
    (105) cuad_gotof -> .

    LCURLY          reduce using rule 105 (cuad_gotof -> .)

    cuad_gotof                     shift and go to state 266

state 225

    (95) escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 267


state 226

    (27) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON . tipo local_addType
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 268

state 227

    (28) variable_local_id_loop_coma -> COMA ID . add_pila_var_locales variable_local_id_loop_coma
    (30) add_pila_var_locales -> .

    COMA            reduce using rule 30 (add_pila_var_locales -> .)
    COLON           reduce using rule 30 (add_pila_var_locales -> .)

    add_pila_var_locales           shift and go to state 269

state 228

    (138) asignacion_type -> CTEBOOL add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 271

state 229

    (135) asignacion_type -> CTEINT add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 272

state 230

    (136) asignacion_type -> CTEFLOAT add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 273

state 231

    (137) asignacion_type -> CTECHAR add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 274

state 232

    (133) asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET . set_arr_values SEMICOLON
    (147) set_arr_values -> .

    SEMICOLON       reduce using rule 147 (set_arr_values -> .)

    set_arr_values                 shift and go to state 275

state 233

    (131) asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .

    CALL            reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    ID              reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    IF              reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    PRINT           reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    WHILE           reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    VAR             reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    ARR             reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    RETURN          reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)
    RCURLY          reduce using rule 131 (asignacion_option -> ASSIGN expresion evalua_asignacion SEMICOLON .)


state 234

    (132) asignacion_option -> ASSIGN CALL ID function_call . LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (175) factor -> CALL ID function_call . LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type

    LPARENTHESIS    shift and go to state 276


state 235

    (134) asignacion_option -> LBRACKET expresion arr_pos RBRACKET . ASSIGN expresion asign_arr SEMICOLON

    ASSIGN          shift and go to state 277


state 236

    (100) condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof . bloque condicion_option end_if
    (82) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 278

state 237

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    RBRACKET        shift and go to state 279


state 238

    (92) estatuto -> CALL ID function_call LPARENTHESIS func_args . RPARENTHESIS gosub verify_void_type SEMICOLON

    RPARENTHESIS    shift and go to state 280


state 239

    (151) func_args -> expresion . args_cuad func_args_loop
    (156) args_cuad -> .

    COMA            reduce using rule 156 (args_cuad -> .)
    RPARENTHESIS    reduce using rule 156 (args_cuad -> .)

    args_cuad                      shift and go to state 281

state 240

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque . ret_cuad
    (73) ret_cuad -> .

    VOIDTYPE        reduce using rule 73 (ret_cuad -> .)
    INTTYPE         reduce using rule 73 (ret_cuad -> .)
    FLOATTYPE       reduce using rule 73 (ret_cuad -> .)
    CHARTYPE        reduce using rule 73 (ret_cuad -> .)
    BOOLTYPE        reduce using rule 73 (ret_cuad -> .)
    MAIN            reduce using rule 73 (ret_cuad -> .)

    ret_cuad                       shift and go to state 282

state 241

    (65) arrs_locales_funcion -> ARR ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    CTEINT          shift and go to state 283


state 242

    (58) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop . COLON tipo function_local_add_type semicolon_function_local_loop

    COLON           shift and go to state 284


state 243

    (60) vars_locales_id_loop -> COMA . ID add_pila_funciones vars_locales_id_loop

    ID              shift and go to state 285


state 244

    (47) params -> ID add_pila_funciones params_loop COLON tipo function_add_type . semicolon_function_loop
    (52) semicolon_function_loop -> . SEMICOLON params
    (53) semicolon_function_loop -> .

    SEMICOLON       shift and go to state 286
    RPARENTHESIS    reduce using rule 53 (semicolon_function_loop -> .)

    semicolon_function_loop        shift and go to state 287

state 245

    (49) params_loop -> COMA ID add_pila_funciones params_loop .

    COLON           reduce using rule 49 (params_loop -> COMA ID add_pila_funciones params_loop .)


state 246

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque . ret_cuad
    (73) ret_cuad -> .

    VOIDTYPE        reduce using rule 73 (ret_cuad -> .)
    INTTYPE         reduce using rule 73 (ret_cuad -> .)
    FLOATTYPE       reduce using rule 73 (ret_cuad -> .)
    CHARTYPE        reduce using rule 73 (ret_cuad -> .)
    BOOLTYPE        reduce using rule 73 (ret_cuad -> .)
    MAIN            reduce using rule 73 (ret_cuad -> .)

    ret_cuad                       shift and go to state 288

state 247

    (19) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma .

    COLON           reduce using rule 19 (arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma .)


state 248

    (162) exp_type_loop -> ADDITION agregar_operador_suma . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 289
    factor_var                     shift and go to state 133

state 249

    (163) exp_type_loop -> SUBTRACTION agregar_operador_resta . exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 290
    factor_var                     shift and go to state 133

state 250

    (171) termino_type_loop -> DIVISION agregar_operador_div . termino
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 291
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    factor_var                     shift and go to state 133

state 251

    (170) termino_type_loop -> MULTIPLICATION agregar_operador_mult . termino
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 292
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    CTEBOOL                        shift and go to state 130
    factor_var                     shift and go to state 133

state 252

    (180) factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS . agrega_parentesis_der
    (184) agrega_parentesis_der -> .

    MULTIPLICATION  reduce using rule 184 (agrega_parentesis_der -> .)
    DIVISION        reduce using rule 184 (agrega_parentesis_der -> .)
    ADDITION        reduce using rule 184 (agrega_parentesis_der -> .)
    SUBTRACTION     reduce using rule 184 (agrega_parentesis_der -> .)
    LESS            reduce using rule 184 (agrega_parentesis_der -> .)
    GREATER         reduce using rule 184 (agrega_parentesis_der -> .)
    LESSEQUAL       reduce using rule 184 (agrega_parentesis_der -> .)
    GREATEREQUAL    reduce using rule 184 (agrega_parentesis_der -> .)
    NOTEQUAL        reduce using rule 184 (agrega_parentesis_der -> .)
    EQUAL           reduce using rule 184 (agrega_parentesis_der -> .)
    AND             reduce using rule 184 (agrega_parentesis_der -> .)
    OR              reduce using rule 184 (agrega_parentesis_der -> .)
    CALL            reduce using rule 184 (agrega_parentesis_der -> .)
    LPARENTHESIS    reduce using rule 184 (agrega_parentesis_der -> .)
    ID              reduce using rule 184 (agrega_parentesis_der -> .)
    CTEINT          reduce using rule 184 (agrega_parentesis_der -> .)
    CTEFLOAT        reduce using rule 184 (agrega_parentesis_der -> .)
    CTECHAR         reduce using rule 184 (agrega_parentesis_der -> .)
    TRUE            reduce using rule 184 (agrega_parentesis_der -> .)
    FALSE           reduce using rule 184 (agrega_parentesis_der -> .)
    RPARENTHESIS    reduce using rule 184 (agrega_parentesis_der -> .)
    SEMICOLON       reduce using rule 184 (agrega_parentesis_der -> .)
    RBRACKET        reduce using rule 184 (agrega_parentesis_der -> .)
    COMA            reduce using rule 184 (agrega_parentesis_der -> .)

    agrega_parentesis_der          shift and go to state 293

state 253

    (107) expresion_option -> AND agregar_operador_and nuevaexp .

    CALL            reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    LPARENTHESIS    reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    ID              reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    CTEINT          reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    CTEFLOAT        reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    CTECHAR         reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    TRUE            reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    FALSE           reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    RPARENTHESIS    reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    SEMICOLON       reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    RBRACKET        reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)
    COMA            reduce using rule 107 (expresion_option -> AND agregar_operador_and nuevaexp .)


state 254

    (106) expresion -> nuevaexp expresion_option evalua_nueva_exp expresion_loop .

    RBRACKET        reduce using rule 106 (expresion -> nuevaexp expresion_option evalua_nueva_exp expresion_loop .)
    RPARENTHESIS    reduce using rule 106 (expresion -> nuevaexp expresion_option evalua_nueva_exp expresion_loop .)
    SEMICOLON       reduce using rule 106 (expresion -> nuevaexp expresion_option evalua_nueva_exp expresion_loop .)
    COMA            reduce using rule 106 (expresion -> nuevaexp expresion_option evalua_nueva_exp expresion_loop .)


state 255

    (110) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 110 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 110 (expresion_loop -> expresion .)
    RBRACKET        reduce using rule 110 (expresion_loop -> expresion .)
    COMA            reduce using rule 110 (expresion_loop -> expresion .)


state 256

    (108) expresion_option -> OR agregar_operador_or nuevaexp .

    CALL            reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    LPARENTHESIS    reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    ID              reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    CTEINT          reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    CTEFLOAT        reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    CTECHAR         reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    TRUE            reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    FALSE           reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    RPARENTHESIS    reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    SEMICOLON       reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    RBRACKET        reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)
    COMA            reduce using rule 108 (expresion_option -> OR agregar_operador_or nuevaexp .)


state 257

    (93) regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .

    CALL            reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    ID              reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    ARR             reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 93 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)


state 258

    (175) factor -> CALL ID function_call LPARENTHESIS . func_args RPARENTHESIS gosub verify_func_type
    (151) func_args -> . expresion args_cuad func_args_loop
    (152) func_args -> .
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 152 (func_args -> .)
    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    func_args                      shift and go to state 294
    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 239
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 259

    (120) nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .

    AND             reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    OR              reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    CALL            reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    LPARENTHESIS    reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    ID              reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    CTEINT          reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    CTEFLOAT        reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    CTECHAR         reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    TRUE            reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    FALSE           reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    RPARENTHESIS    reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    SEMICOLON       reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    RBRACKET        reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)
    COMA            reduce using rule 120 (nuevaexp_type -> NOTEQUAL agregar_operador_dif exp .)


state 260

    (117) nuevaexp_type -> GREATER agregar_operador_mayor exp .

    AND             reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    OR              reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    CALL            reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    LPARENTHESIS    reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    ID              reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    CTEINT          reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    CTEFLOAT        reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    CTECHAR         reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    TRUE            reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    FALSE           reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    RPARENTHESIS    reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    SEMICOLON       reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    RBRACKET        reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)
    COMA            reduce using rule 117 (nuevaexp_type -> GREATER agregar_operador_mayor exp .)


state 261

    (116) nuevaexp_type -> LESS agregar_operador_menor exp .

    AND             reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    OR              reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    CALL            reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    LPARENTHESIS    reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    ID              reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    CTEINT          reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    CTEFLOAT        reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    CTECHAR         reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    TRUE            reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    FALSE           reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    RPARENTHESIS    reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    SEMICOLON       reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    RBRACKET        reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)
    COMA            reduce using rule 116 (nuevaexp_type -> LESS agregar_operador_menor exp .)


state 262

    (119) nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .

    AND             reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    OR              reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    CALL            reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    LPARENTHESIS    reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    ID              reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    CTEINT          reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    CTEFLOAT        reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    CTECHAR         reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    TRUE            reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    FALSE           reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    RPARENTHESIS    reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    SEMICOLON       reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    RBRACKET        reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)
    COMA            reduce using rule 119 (nuevaexp_type -> GREATEREQUAL agregar_operador_mayorig exp .)


state 263

    (121) nuevaexp_type -> EQUAL agregar_operador_igual exp .

    AND             reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    OR              reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    CALL            reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    LPARENTHESIS    reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    ID              reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    CTEINT          reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    CTEFLOAT        reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    CTECHAR         reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    TRUE            reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    FALSE           reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    RPARENTHESIS    reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    SEMICOLON       reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    RBRACKET        reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)
    COMA            reduce using rule 121 (nuevaexp_type -> EQUAL agregar_operador_igual exp .)


state 264

    (118) nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .

    AND             reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    OR              reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    CALL            reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    LPARENTHESIS    reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    ID              reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    CTEINT          reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    CTEFLOAT        reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    CTECHAR         reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    TRUE            reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    FALSE           reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    RPARENTHESIS    reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    SEMICOLON       reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    RBRACKET        reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)
    COMA            reduce using rule 118 (nuevaexp_type -> LESSEQUAL agregar_operador_menorig exp .)


state 265

    (177) factor -> factor_var LBRACKET expresion acceso_arr . RBRACKET

    RBRACKET        shift and go to state 295


state 266

    (97) ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof . bloque end_while
    (82) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 296

state 267

    (95) escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .

    CALL            reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    ID              reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    ARR             reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 95 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)


state 268

    (27) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo . local_addType
    (33) local_addType -> .

    SEMICOLON       reduce using rule 33 (local_addType -> .)

    local_addType                  shift and go to state 297

state 269

    (28) variable_local_id_loop_coma -> COMA ID add_pila_var_locales . variable_local_id_loop_coma
    (28) variable_local_id_loop_coma -> . COMA ID add_pila_var_locales variable_local_id_loop_coma
    (29) variable_local_id_loop_coma -> .

    COMA            shift and go to state 181
    COLON           reduce using rule 29 (variable_local_id_loop_coma -> .)

    variable_local_id_loop_coma    shift and go to state 298

state 270

    (139) asignacion_coma_loop -> COMA . asignacion_type_loop
    (141) asignacion_type_loop -> . CTEINT add_arr_valores_pila asignacion_coma_loop
    (142) asignacion_type_loop -> . CTEFLOAT add_arr_valores_pila asignacion_coma_loop
    (143) asignacion_type_loop -> . CTECHAR add_arr_valores_pila asignacion_coma_loop
    (144) asignacion_type_loop -> . CTEBOOL add_arr_valores_pila asignacion_coma_loop
    (145) asignacion_type_loop -> .
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CTEINT          shift and go to state 300
    CTEFLOAT        shift and go to state 301
    CTECHAR         shift and go to state 303
    RBRACKET        reduce using rule 145 (asignacion_type_loop -> .)
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    asignacion_type_loop           shift and go to state 302
    CTEBOOL                        shift and go to state 299

state 271

    (138) asignacion_type -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 138 (asignacion_type -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .)


state 272

    (135) asignacion_type -> CTEINT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 135 (asignacion_type -> CTEINT add_arr_valores_pila asignacion_coma_loop .)


state 273

    (136) asignacion_type -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 136 (asignacion_type -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .)


state 274

    (137) asignacion_type -> CTECHAR add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 137 (asignacion_type -> CTECHAR add_arr_valores_pila asignacion_coma_loop .)


state 275

    (133) asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values . SEMICOLON

    SEMICOLON       shift and go to state 304


state 276

    (132) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS . func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (175) factor -> CALL ID function_call LPARENTHESIS . func_args RPARENTHESIS gosub verify_func_type
    (151) func_args -> . expresion args_cuad func_args_loop
    (152) func_args -> .
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 152 (func_args -> .)
    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    func_args                      shift and go to state 305
    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 239
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 277

    (134) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN . expresion asign_arr SEMICOLON
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 306
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 278

    (100) condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque . condicion_option end_if
    (101) condicion_option -> . ELSE cuad_goto bloque
    (102) condicion_option -> .

    ELSE            shift and go to state 307
    CALL            reduce using rule 102 (condicion_option -> .)
    ID              reduce using rule 102 (condicion_option -> .)
    IF              reduce using rule 102 (condicion_option -> .)
    PRINT           reduce using rule 102 (condicion_option -> .)
    WHILE           reduce using rule 102 (condicion_option -> .)
    VAR             reduce using rule 102 (condicion_option -> .)
    ARR             reduce using rule 102 (condicion_option -> .)
    RETURN          reduce using rule 102 (condicion_option -> .)
    RCURLY          reduce using rule 102 (condicion_option -> .)

    condicion_option               shift and go to state 308

state 279

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType
    (40) add_pila_arr_locales -> .

    COMA            reduce using rule 40 (add_pila_arr_locales -> .)
    COLON           reduce using rule 40 (add_pila_arr_locales -> .)

    add_pila_arr_locales           shift and go to state 309

state 280

    (92) estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS . gosub verify_void_type SEMICOLON
    (155) gosub -> .

    SEMICOLON       reduce using rule 155 (gosub -> .)

    gosub                          shift and go to state 310

state 281

    (151) func_args -> expresion args_cuad . func_args_loop
    (153) func_args_loop -> . COMA expresion args_cuad func_args_loop
    (154) func_args_loop -> .

    COMA            shift and go to state 311
    RPARENTHESIS    reduce using rule 154 (func_args_loop -> .)

    func_args_loop                 shift and go to state 312

state 282

    (44) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .

    VOIDTYPE        reduce using rule 44 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    INTTYPE         reduce using rule 44 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    FLOATTYPE       reduce using rule 44 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    CHARTYPE        reduce using rule 44 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    BOOLTYPE        reduce using rule 44 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    MAIN            reduce using rule 44 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)


state 283

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (24) add_arr_tam -> .

    RBRACKET        reduce using rule 24 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 313

state 284

    (58) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON . tipo function_local_add_type semicolon_function_local_loop
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 314

state 285

    (60) vars_locales_id_loop -> COMA ID . add_pila_funciones vars_locales_id_loop
    (51) add_pila_funciones -> .

    COMA            reduce using rule 51 (add_pila_funciones -> .)
    COLON           reduce using rule 51 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 315

state 286

    (52) semicolon_function_loop -> SEMICOLON . params
    (47) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (48) params -> .

    ID              shift and go to state 69
    RPARENTHESIS    reduce using rule 48 (params -> .)

    params                         shift and go to state 316

state 287

    (47) params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .

    RPARENTHESIS    reduce using rule 47 (params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .)


state 288

    (45) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .

    VOIDTYPE        reduce using rule 45 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    INTTYPE         reduce using rule 45 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    FLOATTYPE       reduce using rule 45 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    CHARTYPE        reduce using rule 45 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    BOOLTYPE        reduce using rule 45 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    MAIN            reduce using rule 45 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)


state 289

    (162) exp_type_loop -> ADDITION agregar_operador_suma exp .

    LESS            reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    GREATER         reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    LESSEQUAL       reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    GREATEREQUAL    reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    NOTEQUAL        reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    EQUAL           reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    AND             reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    OR              reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    CALL            reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    LPARENTHESIS    reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    ID              reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    CTEINT          reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    CTEFLOAT        reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    CTECHAR         reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    TRUE            reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    FALSE           reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    RPARENTHESIS    reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    SEMICOLON       reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    RBRACKET        reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)
    COMA            reduce using rule 162 (exp_type_loop -> ADDITION agregar_operador_suma exp .)


state 290

    (163) exp_type_loop -> SUBTRACTION agregar_operador_resta exp .

    LESS            reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    GREATER         reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    LESSEQUAL       reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    GREATEREQUAL    reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    NOTEQUAL        reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    EQUAL           reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    AND             reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    OR              reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    CALL            reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    LPARENTHESIS    reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    ID              reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    CTEINT          reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    CTEFLOAT        reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    CTECHAR         reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    TRUE            reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    FALSE           reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    RPARENTHESIS    reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    SEMICOLON       reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    RBRACKET        reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)
    COMA            reduce using rule 163 (exp_type_loop -> SUBTRACTION agregar_operador_resta exp .)


state 291

    (171) termino_type_loop -> DIVISION agregar_operador_div termino .

    ADDITION        reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    SUBTRACTION     reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    LESS            reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    GREATER         reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    LESSEQUAL       reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    GREATEREQUAL    reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    NOTEQUAL        reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    EQUAL           reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    AND             reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    OR              reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    CALL            reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    LPARENTHESIS    reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    ID              reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    CTEINT          reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    CTEFLOAT        reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    CTECHAR         reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    TRUE            reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    FALSE           reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    RPARENTHESIS    reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    SEMICOLON       reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    RBRACKET        reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)
    COMA            reduce using rule 171 (termino_type_loop -> DIVISION agregar_operador_div termino .)


state 292

    (170) termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .

    ADDITION        reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    SUBTRACTION     reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    LESS            reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    GREATER         reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    LESSEQUAL       reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    GREATEREQUAL    reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    NOTEQUAL        reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    EQUAL           reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    AND             reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    OR              reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    CALL            reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    LPARENTHESIS    reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    ID              reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    CTEINT          reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    CTEFLOAT        reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    CTECHAR         reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    TRUE            reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    FALSE           reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    RPARENTHESIS    reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    SEMICOLON       reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    RBRACKET        reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)
    COMA            reduce using rule 170 (termino_type_loop -> MULTIPLICATION agregar_operador_mult termino .)


state 293

    (180) factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .

    MULTIPLICATION  reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    DIVISION        reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    ADDITION        reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    SUBTRACTION     reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    LESS            reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    GREATER         reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    LESSEQUAL       reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    GREATEREQUAL    reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    NOTEQUAL        reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    EQUAL           reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    AND             reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    OR              reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    CALL            reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    LPARENTHESIS    reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    ID              reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    CTEINT          reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    CTEFLOAT        reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    CTECHAR         reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    TRUE            reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    FALSE           reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    COMA            reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    RPARENTHESIS    reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    SEMICOLON       reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)
    RBRACKET        reduce using rule 180 (factor_exp -> LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der .)


state 294

    (175) factor -> CALL ID function_call LPARENTHESIS func_args . RPARENTHESIS gosub verify_func_type

    RPARENTHESIS    shift and go to state 317


state 295

    (177) factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .

    MULTIPLICATION  reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    DIVISION        reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    ADDITION        reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    SUBTRACTION     reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    LESS            reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    GREATER         reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    LESSEQUAL       reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    GREATEREQUAL    reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    NOTEQUAL        reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    EQUAL           reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    AND             reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    OR              reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    CALL            reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    LPARENTHESIS    reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    ID              reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    CTEINT          reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    CTEFLOAT        reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    CTECHAR         reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    TRUE            reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    FALSE           reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    RPARENTHESIS    reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    SEMICOLON       reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    RBRACKET        reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)
    COMA            reduce using rule 177 (factor -> factor_var LBRACKET expresion acceso_arr RBRACKET .)


state 296

    (97) ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque . end_while
    (99) end_while -> .

    CALL            reduce using rule 99 (end_while -> .)
    ID              reduce using rule 99 (end_while -> .)
    IF              reduce using rule 99 (end_while -> .)
    PRINT           reduce using rule 99 (end_while -> .)
    WHILE           reduce using rule 99 (end_while -> .)
    VAR             reduce using rule 99 (end_while -> .)
    ARR             reduce using rule 99 (end_while -> .)
    RETURN          reduce using rule 99 (end_while -> .)
    RCURLY          reduce using rule 99 (end_while -> .)

    end_while                      shift and go to state 318

state 297

    (27) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType .

    SEMICOLON       reduce using rule 27 (variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType .)


state 298

    (28) variable_local_id_loop_coma -> COMA ID add_pila_var_locales variable_local_id_loop_coma .

    COLON           reduce using rule 28 (variable_local_id_loop_coma -> COMA ID add_pila_var_locales variable_local_id_loop_coma .)


state 299

    (144) asignacion_type_loop -> CTEBOOL . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 319

state 300

    (141) asignacion_type_loop -> CTEINT . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 320

state 301

    (142) asignacion_type_loop -> CTEFLOAT . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 321

state 302

    (139) asignacion_coma_loop -> COMA asignacion_type_loop .

    RBRACKET        reduce using rule 139 (asignacion_coma_loop -> COMA asignacion_type_loop .)


state 303

    (143) asignacion_type_loop -> CTECHAR . add_arr_valores_pila asignacion_coma_loop
    (146) add_arr_valores_pila -> .

    COMA            reduce using rule 146 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 146 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 322

state 304

    (133) asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .

    CALL            reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    ID              reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    IF              reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    PRINT           reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    WHILE           reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    VAR             reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    ARR             reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    RETURN          reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    RCURLY          reduce using rule 133 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)


state 305

    (132) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args . RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (175) factor -> CALL ID function_call LPARENTHESIS func_args . RPARENTHESIS gosub verify_func_type

    RPARENTHESIS    shift and go to state 323


state 306

    (134) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion . asign_arr SEMICOLON
    (149) asign_arr -> .

    SEMICOLON       reduce using rule 149 (asign_arr -> .)

    asign_arr                      shift and go to state 324

state 307

    (101) condicion_option -> ELSE . cuad_goto bloque
    (104) cuad_goto -> .

    LCURLY          reduce using rule 104 (cuad_goto -> .)

    cuad_goto                      shift and go to state 325

state 308

    (100) condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option . end_if
    (103) end_if -> .

    CALL            reduce using rule 103 (end_if -> .)
    ID              reduce using rule 103 (end_if -> .)
    IF              reduce using rule 103 (end_if -> .)
    PRINT           reduce using rule 103 (end_if -> .)
    WHILE           reduce using rule 103 (end_if -> .)
    VAR             reduce using rule 103 (end_if -> .)
    ARR             reduce using rule 103 (end_if -> .)
    RETURN          reduce using rule 103 (end_if -> .)
    RCURLY          reduce using rule 103 (end_if -> .)

    end_if                         shift and go to state 326

state 309

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales . arr_local_id_loop_coma COLON tipo arr_local_addType
    (36) arr_local_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
    (37) arr_local_id_loop_coma -> .

    COMA            shift and go to state 328
    COLON           reduce using rule 37 (arr_local_id_loop_coma -> .)

    arr_local_id_loop_coma         shift and go to state 327

state 310

    (92) estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub . verify_void_type SEMICOLON
    (55) verify_void_type -> .

    SEMICOLON       reduce using rule 55 (verify_void_type -> .)

    verify_void_type               shift and go to state 329

state 311

    (153) func_args_loop -> COMA . expresion args_cuad func_args_loop
    (106) expresion -> . nuevaexp expresion_option evalua_nueva_exp expresion_loop
    (115) nuevaexp -> . exp nuevaexp_type evalua_exp
    (159) exp -> . termino evalua_termino exp_loop
    (167) termino -> . factor evalua_factor termino_loop
    (175) factor -> . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type
    (176) factor -> . factor_var
    (177) factor -> . factor_var LBRACKET expresion acceso_arr RBRACKET
    (178) factor -> . factor_exp
    (179) factor_var -> . varcte validar_variable
    (180) factor_exp -> . LPARENTHESIS agrega_parentesis_izq expresion RPARENTHESIS agrega_parentesis_der
    (185) varcte -> . ID nodoCteV
    (186) varcte -> . CTEINT nodoCteE
    (187) varcte -> . CTEFLOAT nodoCteF
    (188) varcte -> . CTEBOOL nodoCteB
    (189) varcte -> . CTECHAR nodoCteC
    (190) CTEBOOL -> . TRUE
    (191) CTEBOOL -> . FALSE

    CALL            shift and go to state 131
    LPARENTHESIS    shift and go to state 126
    ID              shift and go to state 128
    CTEINT          shift and go to state 124
    CTEFLOAT        shift and go to state 120
    CTECHAR         shift and go to state 123
    TRUE            shift and go to state 118
    FALSE           shift and go to state 121

    termino                        shift and go to state 117
    varcte                         shift and go to state 119
    factor                         shift and go to state 122
    factor_exp                     shift and go to state 125
    nuevaexp                       shift and go to state 127
    expresion                      shift and go to state 330
    CTEBOOL                        shift and go to state 130
    exp                            shift and go to state 132
    factor_var                     shift and go to state 133

state 312

    (151) func_args -> expresion args_cuad func_args_loop .

    RPARENTHESIS    reduce using rule 151 (func_args -> expresion args_cuad func_args_loop .)


state 313

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    RBRACKET        shift and go to state 331


state 314

    (58) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo . function_local_add_type semicolon_function_local_loop
    (64) function_local_add_type -> .

    SEMICOLON       reduce using rule 64 (function_local_add_type -> .)
    ARR             reduce using rule 64 (function_local_add_type -> .)
    LCURLY          reduce using rule 64 (function_local_add_type -> .)

    function_local_add_type        shift and go to state 332

state 315

    (60) vars_locales_id_loop -> COMA ID add_pila_funciones . vars_locales_id_loop
    (60) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (61) vars_locales_id_loop -> .

    COMA            shift and go to state 243
    COLON           reduce using rule 61 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 333

state 316

    (52) semicolon_function_loop -> SEMICOLON params .

    RPARENTHESIS    reduce using rule 52 (semicolon_function_loop -> SEMICOLON params .)


state 317

    (175) factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS . gosub verify_func_type
    (155) gosub -> .

    MULTIPLICATION  reduce using rule 155 (gosub -> .)
    DIVISION        reduce using rule 155 (gosub -> .)
    ADDITION        reduce using rule 155 (gosub -> .)
    SUBTRACTION     reduce using rule 155 (gosub -> .)
    LESS            reduce using rule 155 (gosub -> .)
    GREATER         reduce using rule 155 (gosub -> .)
    LESSEQUAL       reduce using rule 155 (gosub -> .)
    GREATEREQUAL    reduce using rule 155 (gosub -> .)
    NOTEQUAL        reduce using rule 155 (gosub -> .)
    EQUAL           reduce using rule 155 (gosub -> .)
    AND             reduce using rule 155 (gosub -> .)
    OR              reduce using rule 155 (gosub -> .)
    CALL            reduce using rule 155 (gosub -> .)
    LPARENTHESIS    reduce using rule 155 (gosub -> .)
    ID              reduce using rule 155 (gosub -> .)
    CTEINT          reduce using rule 155 (gosub -> .)
    CTEFLOAT        reduce using rule 155 (gosub -> .)
    CTECHAR         reduce using rule 155 (gosub -> .)
    TRUE            reduce using rule 155 (gosub -> .)
    FALSE           reduce using rule 155 (gosub -> .)
    RPARENTHESIS    reduce using rule 155 (gosub -> .)
    RBRACKET        reduce using rule 155 (gosub -> .)
    COMA            reduce using rule 155 (gosub -> .)
    SEMICOLON       reduce using rule 155 (gosub -> .)

    gosub                          shift and go to state 334

state 318

    (97) ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .

    CALL            reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    ID              reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    IF              reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    PRINT           reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    WHILE           reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    VAR             reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    ARR             reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    RETURN          reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)
    RCURLY          reduce using rule 97 (ciclo -> WHILE LPARENTHESIS salto_while expresion RPARENTHESIS cuad_gotof bloque end_while .)


state 319

    (144) asignacion_type_loop -> CTEBOOL add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 335

state 320

    (141) asignacion_type_loop -> CTEINT add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 336

state 321

    (142) asignacion_type_loop -> CTEFLOAT add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 337

state 322

    (143) asignacion_type_loop -> CTECHAR add_arr_valores_pila . asignacion_coma_loop
    (139) asignacion_coma_loop -> . COMA asignacion_type_loop
    (140) asignacion_coma_loop -> .

    COMA            shift and go to state 270
    RBRACKET        reduce using rule 140 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 338

state 323

    (132) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS . gosub SEMICOLON asign_return_cuad
    (175) factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS . gosub verify_func_type
    (155) gosub -> .

    SEMICOLON       reduce using rule 155 (gosub -> .)
    MULTIPLICATION  reduce using rule 155 (gosub -> .)
    DIVISION        reduce using rule 155 (gosub -> .)
    ADDITION        reduce using rule 155 (gosub -> .)
    SUBTRACTION     reduce using rule 155 (gosub -> .)
    LESS            reduce using rule 155 (gosub -> .)
    GREATER         reduce using rule 155 (gosub -> .)
    LESSEQUAL       reduce using rule 155 (gosub -> .)
    GREATEREQUAL    reduce using rule 155 (gosub -> .)
    NOTEQUAL        reduce using rule 155 (gosub -> .)
    EQUAL           reduce using rule 155 (gosub -> .)
    AND             reduce using rule 155 (gosub -> .)
    OR              reduce using rule 155 (gosub -> .)
    CALL            reduce using rule 155 (gosub -> .)
    LPARENTHESIS    reduce using rule 155 (gosub -> .)
    ID              reduce using rule 155 (gosub -> .)
    CTEINT          reduce using rule 155 (gosub -> .)
    CTEFLOAT        reduce using rule 155 (gosub -> .)
    CTECHAR         reduce using rule 155 (gosub -> .)
    TRUE            reduce using rule 155 (gosub -> .)
    FALSE           reduce using rule 155 (gosub -> .)
    COMA            reduce using rule 155 (gosub -> .)
    RPARENTHESIS    reduce using rule 155 (gosub -> .)

    gosub                          shift and go to state 339

state 324

    (134) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr . SEMICOLON

    SEMICOLON       shift and go to state 340


state 325

    (101) condicion_option -> ELSE cuad_goto . bloque
    (82) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 341

state 326

    (100) condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .

    CALL            reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    ID              reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    IF              reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    PRINT           reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    WHILE           reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    VAR             reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    ARR             reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    RETURN          reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)
    RCURLY          reduce using rule 100 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS cuad_gotof bloque condicion_option end_if .)


state 327

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma . COLON tipo arr_local_addType

    COLON           shift and go to state 342


state 328

    (36) arr_local_id_loop_coma -> COMA . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    ID              shift and go to state 343


state 329

    (92) estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type . SEMICOLON

    SEMICOLON       shift and go to state 344


state 330

    (153) func_args_loop -> COMA expresion . args_cuad func_args_loop
    (156) args_cuad -> .

    COMA            reduce using rule 156 (args_cuad -> .)
    RPARENTHESIS    reduce using rule 156 (args_cuad -> .)

    args_cuad                      shift and go to state 345

state 331

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (71) add_pila_arr_funciones -> .

    COMA            reduce using rule 71 (add_pila_arr_funciones -> .)
    COLON           reduce using rule 71 (add_pila_arr_funciones -> .)

    add_pila_arr_funciones         shift and go to state 346

state 332

    (58) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type . semicolon_function_local_loop
    (62) semicolon_function_local_loop -> . SEMICOLON vars_locales_funcion
    (63) semicolon_function_local_loop -> .

    SEMICOLON       shift and go to state 347
    ARR             reduce using rule 63 (semicolon_function_local_loop -> .)
    LCURLY          reduce using rule 63 (semicolon_function_local_loop -> .)

    semicolon_function_local_loop  shift and go to state 348

state 333

    (60) vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .

    COLON           reduce using rule 60 (vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .)


state 334

    (175) factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub . verify_func_type
    (54) verify_func_type -> .

    MULTIPLICATION  reduce using rule 54 (verify_func_type -> .)
    DIVISION        reduce using rule 54 (verify_func_type -> .)
    ADDITION        reduce using rule 54 (verify_func_type -> .)
    SUBTRACTION     reduce using rule 54 (verify_func_type -> .)
    LESS            reduce using rule 54 (verify_func_type -> .)
    GREATER         reduce using rule 54 (verify_func_type -> .)
    LESSEQUAL       reduce using rule 54 (verify_func_type -> .)
    GREATEREQUAL    reduce using rule 54 (verify_func_type -> .)
    NOTEQUAL        reduce using rule 54 (verify_func_type -> .)
    EQUAL           reduce using rule 54 (verify_func_type -> .)
    AND             reduce using rule 54 (verify_func_type -> .)
    OR              reduce using rule 54 (verify_func_type -> .)
    CALL            reduce using rule 54 (verify_func_type -> .)
    LPARENTHESIS    reduce using rule 54 (verify_func_type -> .)
    ID              reduce using rule 54 (verify_func_type -> .)
    CTEINT          reduce using rule 54 (verify_func_type -> .)
    CTEFLOAT        reduce using rule 54 (verify_func_type -> .)
    CTECHAR         reduce using rule 54 (verify_func_type -> .)
    TRUE            reduce using rule 54 (verify_func_type -> .)
    FALSE           reduce using rule 54 (verify_func_type -> .)
    RPARENTHESIS    reduce using rule 54 (verify_func_type -> .)
    RBRACKET        reduce using rule 54 (verify_func_type -> .)
    COMA            reduce using rule 54 (verify_func_type -> .)
    SEMICOLON       reduce using rule 54 (verify_func_type -> .)

    verify_func_type               shift and go to state 349

state 335

    (144) asignacion_type_loop -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 144 (asignacion_type_loop -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .)


state 336

    (141) asignacion_type_loop -> CTEINT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 141 (asignacion_type_loop -> CTEINT add_arr_valores_pila asignacion_coma_loop .)


state 337

    (142) asignacion_type_loop -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 142 (asignacion_type_loop -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .)


state 338

    (143) asignacion_type_loop -> CTECHAR add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 143 (asignacion_type_loop -> CTECHAR add_arr_valores_pila asignacion_coma_loop .)


state 339

    (132) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub . SEMICOLON asign_return_cuad
    (175) factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub . verify_func_type
    (54) verify_func_type -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 350
    MULTIPLICATION  reduce using rule 54 (verify_func_type -> .)
    DIVISION        reduce using rule 54 (verify_func_type -> .)
    ADDITION        reduce using rule 54 (verify_func_type -> .)
    SUBTRACTION     reduce using rule 54 (verify_func_type -> .)
    LESS            reduce using rule 54 (verify_func_type -> .)
    GREATER         reduce using rule 54 (verify_func_type -> .)
    LESSEQUAL       reduce using rule 54 (verify_func_type -> .)
    GREATEREQUAL    reduce using rule 54 (verify_func_type -> .)
    NOTEQUAL        reduce using rule 54 (verify_func_type -> .)
    EQUAL           reduce using rule 54 (verify_func_type -> .)
    AND             reduce using rule 54 (verify_func_type -> .)
    OR              reduce using rule 54 (verify_func_type -> .)
    CALL            reduce using rule 54 (verify_func_type -> .)
    LPARENTHESIS    reduce using rule 54 (verify_func_type -> .)
    ID              reduce using rule 54 (verify_func_type -> .)
    CTEINT          reduce using rule 54 (verify_func_type -> .)
    CTEFLOAT        reduce using rule 54 (verify_func_type -> .)
    CTECHAR         reduce using rule 54 (verify_func_type -> .)
    TRUE            reduce using rule 54 (verify_func_type -> .)
    FALSE           reduce using rule 54 (verify_func_type -> .)
    COMA            reduce using rule 54 (verify_func_type -> .)
    RPARENTHESIS    reduce using rule 54 (verify_func_type -> .)

  ! SEMICOLON       [ reduce using rule 54 (verify_func_type -> .) ]

    verify_func_type               shift and go to state 349

state 340

    (134) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .

    CALL            reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    ID              reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    IF              reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    PRINT           reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    WHILE           reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    VAR             reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    ARR             reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    RETURN          reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    RCURLY          reduce using rule 134 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)


state 341

    (101) condicion_option -> ELSE cuad_goto bloque .

    CALL            reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    ID              reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    IF              reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    PRINT           reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    WHILE           reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    VAR             reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    ARR             reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    RETURN          reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)
    RCURLY          reduce using rule 101 (condicion_option -> ELSE cuad_goto bloque .)


state 342

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON . tipo arr_local_addType
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 351

state 343

    (36) arr_local_id_loop_coma -> COMA ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    LBRACKET        shift and go to state 352


state 344

    (92) estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .

    CALL            reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    ID              reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    IF              reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    PRINT           reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    WHILE           reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    VAR             reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    ARR             reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    RETURN          reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)
    RCURLY          reduce using rule 92 (estatuto -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_void_type SEMICOLON .)


state 345

    (153) func_args_loop -> COMA expresion args_cuad . func_args_loop
    (153) func_args_loop -> . COMA expresion args_cuad func_args_loop
    (154) func_args_loop -> .

    COMA            shift and go to state 311
    RPARENTHESIS    reduce using rule 154 (func_args_loop -> .)

    func_args_loop                 shift and go to state 353

state 346

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones . arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (67) arrs_locales_id_loop -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
    (68) arrs_locales_id_loop -> .

    COMA            shift and go to state 354
    COLON           reduce using rule 68 (arrs_locales_id_loop -> .)

    arrs_locales_id_loop           shift and go to state 355

state 347

    (62) semicolon_function_local_loop -> SEMICOLON . vars_locales_funcion
    (58) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (59) vars_locales_funcion -> .

    VAR             shift and go to state 112
    ARR             reduce using rule 59 (vars_locales_funcion -> .)
    LCURLY          reduce using rule 59 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 356

state 348

    (58) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .

    ARR             reduce using rule 58 (vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .)
    LCURLY          reduce using rule 58 (vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .)


state 349

    (175) factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .

    MULTIPLICATION  reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    DIVISION        reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    ADDITION        reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    SUBTRACTION     reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    LESS            reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    GREATER         reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    LESSEQUAL       reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    GREATEREQUAL    reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    NOTEQUAL        reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    EQUAL           reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    AND             reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    OR              reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    CALL            reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    LPARENTHESIS    reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    ID              reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    CTEINT          reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    CTEFLOAT        reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    CTECHAR         reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    TRUE            reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    FALSE           reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    RPARENTHESIS    reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    SEMICOLON       reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    RBRACKET        reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)
    COMA            reduce using rule 175 (factor -> CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub verify_func_type .)


state 350

    (132) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON . asign_return_cuad
    (157) asign_return_cuad -> .

    CALL            reduce using rule 157 (asign_return_cuad -> .)
    ID              reduce using rule 157 (asign_return_cuad -> .)
    IF              reduce using rule 157 (asign_return_cuad -> .)
    PRINT           reduce using rule 157 (asign_return_cuad -> .)
    WHILE           reduce using rule 157 (asign_return_cuad -> .)
    VAR             reduce using rule 157 (asign_return_cuad -> .)
    ARR             reduce using rule 157 (asign_return_cuad -> .)
    RETURN          reduce using rule 157 (asign_return_cuad -> .)
    RCURLY          reduce using rule 157 (asign_return_cuad -> .)

    asign_return_cuad              shift and go to state 357

state 351

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo . arr_local_addType
    (41) arr_local_addType -> .

    SEMICOLON       reduce using rule 41 (arr_local_addType -> .)

    arr_local_addType              shift and go to state 358

state 352

    (36) arr_local_id_loop_coma -> COMA ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    CTEINT          shift and go to state 359


state 353

    (153) func_args_loop -> COMA expresion args_cuad func_args_loop .

    RPARENTHESIS    reduce using rule 153 (func_args_loop -> COMA expresion args_cuad func_args_loop .)


state 354

    (67) arrs_locales_id_loop -> COMA . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    ID              shift and go to state 360


state 355

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop . COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    COLON           shift and go to state 361


state 356

    (62) semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .

    ARR             reduce using rule 62 (semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .)
    LCURLY          reduce using rule 62 (semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .)


state 357

    (132) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .

    CALL            reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    ID              reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    IF              reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    PRINT           reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    WHILE           reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    VAR             reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    ARR             reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    RETURN          reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    RCURLY          reduce using rule 132 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)


state 358

    (35) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType .

    SEMICOLON       reduce using rule 35 (arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType .)


state 359

    (36) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
    (24) add_arr_tam -> .

    RBRACKET        reduce using rule 24 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 362

state 360

    (67) arrs_locales_id_loop -> COMA ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    LBRACKET        shift and go to state 363


state 361

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON . tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (77) tipo -> . INTTYPE
    (78) tipo -> . FLOATTYPE
    (79) tipo -> . CHARTYPE
    (80) tipo -> . BOOLTYPE
    (81) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 364

state 362

    (36) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    RBRACKET        shift and go to state 365


state 363

    (67) arrs_locales_id_loop -> COMA ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    CTEINT          shift and go to state 366


state 364

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo . function_local_arr_add_type semicolon_function_local_arr_loop
    (72) function_local_arr_add_type -> .

    SEMICOLON       reduce using rule 72 (function_local_arr_add_type -> .)
    LCURLY          reduce using rule 72 (function_local_arr_add_type -> .)

    function_local_arr_add_type    shift and go to state 367

state 365

    (36) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_locales arr_local_id_loop_coma
    (40) add_pila_arr_locales -> .

    COMA            reduce using rule 40 (add_pila_arr_locales -> .)
    COLON           reduce using rule 40 (add_pila_arr_locales -> .)

    add_pila_arr_locales           shift and go to state 368

state 366

    (67) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
    (24) add_arr_tam -> .

    RBRACKET        reduce using rule 24 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 369

state 367

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type . semicolon_function_local_arr_loop
    (69) semicolon_function_local_arr_loop -> . SEMICOLON arrs_locales_funcion
    (70) semicolon_function_local_arr_loop -> .

    SEMICOLON       shift and go to state 370
    LCURLY          reduce using rule 70 (semicolon_function_local_arr_loop -> .)

    semicolon_function_local_arr_loop shift and go to state 371

state 368

    (36) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales . arr_local_id_loop_coma
    (36) arr_local_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
    (37) arr_local_id_loop_coma -> .

    COMA            shift and go to state 328
    COLON           reduce using rule 37 (arr_local_id_loop_coma -> .)

    arr_local_id_loop_coma         shift and go to state 372

state 369

    (67) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    RBRACKET        shift and go to state 373


state 370

    (69) semicolon_function_local_arr_loop -> SEMICOLON . arrs_locales_funcion
    (65) arrs_locales_funcion -> . ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (66) arrs_locales_funcion -> .

    ARR             shift and go to state 148
    LCURLY          reduce using rule 66 (arrs_locales_funcion -> .)

    arrs_locales_funcion           shift and go to state 374

state 371

    (65) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop .

    LCURLY          reduce using rule 65 (arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop .)


state 372

    (36) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma .

    COLON           reduce using rule 36 (arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma .)


state 373

    (67) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_funciones arrs_locales_id_loop
    (71) add_pila_arr_funciones -> .

    COMA            reduce using rule 71 (add_pila_arr_funciones -> .)
    COLON           reduce using rule 71 (add_pila_arr_funciones -> .)

    add_pila_arr_funciones         shift and go to state 375

state 374

    (69) semicolon_function_local_arr_loop -> SEMICOLON arrs_locales_funcion .

    LCURLY          reduce using rule 69 (semicolon_function_local_arr_loop -> SEMICOLON arrs_locales_funcion .)


state 375

    (67) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones . arrs_locales_id_loop
    (67) arrs_locales_id_loop -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
    (68) arrs_locales_id_loop -> .

    COMA            shift and go to state 354
    COLON           reduce using rule 68 (arrs_locales_id_loop -> .)

    arrs_locales_id_loop           shift and go to state 376

state 376

    (67) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop .

    COLON           reduce using rule 67 (arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 38 resolved as shift
WARNING: shift/reduce conflict for VAR in state 136 resolved as shift
WARNING: shift/reduce conflict for ARR in state 143 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 339 resolved as shift
