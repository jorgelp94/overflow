Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     addProcDir -> <empty>
Rule 3     addMainProc -> <empty>
Rule 4     programa_var_loop -> variable programa_var_loop
Rule 5     programa_var_loop -> <empty>
Rule 6     programa_func_loop -> funcion programa_func_loop
Rule 7     programa_func_loop -> <empty>
Rule 8     bloque -> LCURLY bloque_est_loop RCURLY
Rule 9     bloque_est_loop -> estatuto bloque_est_loop
Rule 10    bloque_est_loop -> <empty>
Rule 11    tipo -> INTTYPE
Rule 12    tipo -> FLOATTYPE
Rule 13    tipo -> CHARTYPE
Rule 14    tipo -> BOOLTYPE
Rule 15    tipo -> VOIDTYPE
Rule 16    subtipo -> INTTYPE
Rule 17    subtipo -> FLOATTYPE
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> escritura
Rule 21    estatuto -> regreso
Rule 22    estatuto -> ciclo
Rule 23    regreso -> RETURN exp SEMICOLON
Rule 24    variable -> VAR variable_loop
Rule 25    variable_loop -> variable_id_loop SEMICOLON variable_end_loop
Rule 26    variable_loop -> variable_arr_loop SEMICOLON variable_end_loop
Rule 27    addType -> <empty>
Rule 28    variable_id_loop -> variable_id_loop_coma COLON tipo addType
Rule 29    variable_id_loop_coma -> ID addDirVarGlobales
Rule 30    variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma
Rule 31    variable_arr_loop -> variable_arr_coma COLON subtipo addType
Rule 32    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET
Rule 33    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
Rule 34    addDirVarGlobales -> <empty>
Rule 35    variable_end_loop -> variable
Rule 36    variable_end_loop -> <empty>
Rule 37    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 38    escritura_type -> expresion
Rule 39    escritura_type -> QUOTE CTECHAR QUOTE
Rule 40    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
Rule 41    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque
Rule 42    variable_func -> VAR variable_loop_func
Rule 43    variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func
Rule 44    variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func
Rule 45    variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc
Rule 46    variable_end_loop_func -> variable_func
Rule 47    variable_end_loop_func -> <empty>
Rule 48    variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc
Rule 49    variable_id_loop_coma_func -> ID addDirVarGlobalesFunc
Rule 50    variable_id_loop_coma_func -> ID addDirVarGlobalesFunc COMA variable_id_loop_coma_func
Rule 51    variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET
Rule 52    variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
Rule 53    addProcDirFunc -> <empty>
Rule 54    funcion_option -> argumentos
Rule 55    funcion_option -> <empty>
Rule 56    argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
Rule 57    argumentos_loop -> COMA argumentos
Rule 58    argumentos_loop -> <empty>
Rule 59    addDirVarGlobalesFunc -> <empty>
Rule 60    addTypeFunc -> <empty>
Rule 61    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 62    nodo16 -> <empty>
Rule 63    nodo17 -> <empty>
Rule 64    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 65    condicion_option -> ELSE nodo14 bloque
Rule 66    condicion_option -> <empty>
Rule 67    nodo15 -> <empty>
Rule 68    nodo14 -> <empty>
Rule 69    nodo13 -> <empty>
Rule 70    expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 71    expresion_option -> AND nodo12_and nuevaexp
Rule 72    expresion_option -> OR nodo12_or nuevaexp
Rule 73    expresion_option -> <empty>
Rule 74    expresion_loop -> expresion
Rule 75    expresion_loop -> <empty>
Rule 76    nodo12_and -> <empty>
Rule 77    nodo12_or -> <empty>
Rule 78    nodo11 -> <empty>
Rule 79    nuevaexp -> exp nuevaexp_type nodo10
Rule 80    nuevaexp_type -> LESS nodo9_menor exp
Rule 81    nuevaexp_type -> GREATER nodo9_mayor exp
Rule 82    nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 83    nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 84    nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 85    nuevaexp_type -> EQUAL nodo9_igual exp
Rule 86    nuevaexp_type -> <empty>
Rule 87    nodo10 -> <empty>
Rule 88    nodo9_menor -> <empty>
Rule 89    nodo9_mayor -> <empty>
Rule 90    nodo9_menorig -> <empty>
Rule 91    nodo9_mayorig -> <empty>
Rule 92    nodo9_dif -> <empty>
Rule 93    nodo9_igual -> <empty>
Rule 94    asignacion -> ID asignacion_option
Rule 95    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 96    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 97    asignacion_type -> CTEINT
Rule 98    asignacion_type -> CTEFLOAT
Rule 99    asignacion_type -> CTEINT COMA asignacion_type
Rule 100   asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 101   nodo8 -> <empty>
Rule 102   exp -> termino nodo5 exp_loop
Rule 103   exp_loop -> exp_type_loop
Rule 104   exp_loop -> <empty>
Rule 105   exp_type_loop -> ADDITION nodo3_suma exp
Rule 106   exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 107   nodo3_suma -> <empty>
Rule 108   nodo3_resta -> <empty>
Rule 109   nodo5 -> <empty>
Rule 110   termino -> factor nodo4 termino_loop
Rule 111   termino_loop -> termino_type_loop
Rule 112   termino_loop -> <empty>
Rule 113   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 114   termino_type_loop -> DIVISION nodo2_div termino
Rule 115   nodo2_mult -> <empty>
Rule 116   nodo2_div -> <empty>
Rule 117   nodo4 -> <empty>
Rule 118   factor -> factor_var
Rule 119   factor -> factor_exp
Rule 120   factor_var -> varcte nodo1
Rule 121   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 122   nodo1 -> <empty>
Rule 123   nodo6 -> <empty>
Rule 124   nodo7 -> <empty>
Rule 125   varcte -> ID varcte_arr
Rule 126   varcte -> CTEINT nodoCteE
Rule 127   varcte -> CTEFLOAT nodoCteF
Rule 128   varcte -> CTEBOOL nodoCteB
Rule 129   varcte -> CTECHAR nodoCteC
Rule 130   llamada -> ID LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON
Rule 131   llamada_params -> params
Rule 132   llamada_params -> <empty>
Rule 133   params -> varcte
Rule 134   params -> varcte COMA params
Rule 135   varcte_arr -> LBRACKET RBRACKET
Rule 136   varcte_arr -> <empty>
Rule 137   CTEBOOL -> TRUE
Rule 138   CTEBOOL -> FALSE
Rule 139   nodoCteE -> <empty>
Rule 140   nodoCteF -> <empty>
Rule 141   nodoCteB -> <empty>
Rule 142   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 105
AND                  : 71
ASSIGN               : 95 96
BOOLTYPE             : 14
CHARTYPE             : 13
COLON                : 28 31 45 48 56
COMA                 : 30 33 50 52 57 99 100 134
CTECHAR              : 39 129
CTEFLOAT             : 98 100 127
CTEINT               : 96 97 99 126
DIVISION             : 114
ELSE                 : 65
END                  : 1
EQUAL                : 85
FALSE                : 138
FLOATTYPE            : 12 17
FUNC                 : 40 41
GREATER              : 81
GREATEREQUAL         : 83
ID                   : 1 29 30 32 33 40 41 49 50 51 52 56 94 125 130
IF                   : 64
INTTYPE              : 11 16
LBRACKET             : 32 33 51 52 96 96 135
LCURLY               : 8
LESS                 : 80
LESSEQUAL            : 82
LPARENTHESIS         : 1 37 40 41 61 64 121 130
MAIN                 : 1
MULTIPLICATION       : 113
NOTEQUAL             : 84
OR                   : 72
PRINT                : 37
PROGRAM              : 1
QUOTE                : 39 39
RBRACKET             : 32 33 51 52 96 96 135
RCURLY               : 8
RETURN               : 23
RPARENTHESIS         : 1 37 40 41 61 64 121 130
SEMICOLON            : 1 23 25 26 37 43 44 95 96 130
SUBTRACTION          : 106
TRUE                 : 137
VAR                  : 24 42
VOIDTYPE             : 15
WHILE                : 61
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 128
addDirVarGlobales    : 29 30 32 33
addDirVarGlobalesFunc : 49 50 51 52 56
addMainProc          : 1
addProcDir           : 1
addProcDirFunc       : 40 41
addType              : 28 31
addTypeFunc          : 45 48 56
argumentos           : 54 57
argumentos_loop      : 56
asignacion           : 18
asignacion_option    : 94
asignacion_type      : 96 99 100
bloque               : 1 40 41 61 64 65
bloque_est_loop      : 8 9
ciclo                : 22
condicion            : 19
condicion_option     : 64
escritura            : 20
escritura_type       : 37
estatuto             : 9
exp                  : 23 79 80 81 82 83 84 85 105 106
exp_loop             : 102
exp_type_loop        : 103
expresion            : 38 61 64 74 95 121
expresion_loop       : 70
expresion_option     : 70
factor               : 110
factor_exp           : 119
factor_var           : 118
funcion              : 6
funcion_option       : 40 41
llamada              : 
llamada_params       : 130
nodo1                : 120
nodo10               : 79
nodo11               : 70
nodo12_and           : 71
nodo12_or            : 72
nodo13               : 61 64
nodo14               : 65
nodo15               : 64
nodo16               : 61
nodo17               : 61
nodo2_div            : 114
nodo2_mult           : 113
nodo3_resta          : 106
nodo3_suma           : 105
nodo4                : 110
nodo5                : 102
nodo6                : 121
nodo7                : 121
nodo8                : 95 96
nodo9_dif            : 84
nodo9_igual          : 85
nodo9_mayor          : 81
nodo9_mayorig        : 83
nodo9_menor          : 80
nodo9_menorig        : 82
nodoCteB             : 128
nodoCteC             : 129
nodoCteE             : 126
nodoCteF             : 127
nuevaexp             : 70 71 72
nuevaexp_type        : 79
params               : 131 134
programa             : 0
programa_func_loop   : 1 6
programa_var_loop    : 1 4
regreso              : 21
subtipo              : 31 48
termino              : 102 113 114
termino_loop         : 110
termino_type_loop    : 111
tipo                 : 28 40 41 45 56
varcte               : 120 133 134
varcte_arr           : 125
variable             : 4 35
variable_arr_coma    : 31 33
variable_arr_coma_func : 48 52
variable_arr_loop    : 26
variable_arr_loop_func : 44
variable_end_loop    : 25 26
variable_end_loop_func : 43 44
variable_func        : 41 46
variable_id_loop     : 25
variable_id_loop_coma : 28 30
variable_id_loop_coma_func : 45 50
variable_id_loop_func : 43
variable_loop        : 24
variable_loop_func   : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    programa_var_loop              shift and go to state 6
    variable                       shift and go to state 7

state 5

    (24) variable -> VAR . variable_loop
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 12

state 6

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop . programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (40) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 18
    funcion                        shift and go to state 15

state 7

    (4) programa_var_loop -> variable . programa_var_loop
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    variable                       shift and go to state 7
    programa_var_loop              shift and go to state 22

state 8

    (26) variable_loop -> variable_arr_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 23


state 9

    (28) variable_id_loop -> variable_id_loop_coma . COLON tipo addType

    COLON           shift and go to state 24


state 10

    (25) variable_loop -> variable_id_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 25


state 11

    (31) variable_arr_loop -> variable_arr_coma . COLON subtipo addType

    COLON           shift and go to state 26


state 12

    (24) variable -> VAR variable_loop .

    VAR             reduce using rule 24 (variable -> VAR variable_loop .)
    INTTYPE         reduce using rule 24 (variable -> VAR variable_loop .)
    FLOATTYPE       reduce using rule 24 (variable -> VAR variable_loop .)
    CHARTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    BOOLTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    VOIDTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    MAIN            reduce using rule 24 (variable -> VAR variable_loop .)


state 13

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 27

state 14

    (40) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque

    FUNC            shift and go to state 28


state 15

    (6) programa_func_loop -> funcion . programa_func_loop
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (40) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 29
    funcion                        shift and go to state 15

state 16

    (14) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 14 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 14 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 14 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> BOOLTYPE .)


state 17

    (12) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 12 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 12 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 12 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> FLOATTYPE .)


state 18

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop . addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) addProcDir -> .

    MAIN            reduce using rule 2 (addProcDir -> .)

    addProcDir                     shift and go to state 30

state 19

    (11) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 11 (tipo -> INTTYPE .)
    FUNC            reduce using rule 11 (tipo -> INTTYPE .)
    COMA            reduce using rule 11 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 11 (tipo -> INTTYPE .)


state 20

    (15) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 15 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 15 (tipo -> VOIDTYPE .)
    COMA            reduce using rule 15 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> VOIDTYPE .)


state 21

    (13) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 13 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 13 (tipo -> CHARTYPE .)
    COMA            reduce using rule 13 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> CHARTYPE .)


state 22

    (4) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)


state 23

    (26) variable_loop -> variable_arr_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable
    (36) variable_end_loop -> .
    (24) variable -> . VAR variable_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 36 (variable_end_loop -> .) ]

    variable                       shift and go to state 32
    variable_end_loop              shift and go to state 31

state 24

    (28) variable_id_loop -> variable_id_loop_coma COLON . tipo addType
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 33

state 25

    (25) variable_loop -> variable_id_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable
    (36) variable_end_loop -> .
    (24) variable -> . VAR variable_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 36 (variable_end_loop -> .) ]

    variable                       shift and go to state 32
    variable_end_loop              shift and go to state 34

state 26

    (31) variable_arr_loop -> variable_arr_coma COLON . subtipo addType
    (16) subtipo -> . INTTYPE
    (17) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 35
    FLOATTYPE       shift and go to state 36

    subtipo                        shift and go to state 37

state 27

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39
    LBRACKET        shift and go to state 38


state 28

    (40) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque

    ID              shift and go to state 40


state 29

    (6) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 6 (programa_func_loop -> funcion programa_func_loop .)


state 30

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 41


state 31

    (26) variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)


state 32

    (35) variable_end_loop -> variable .

    VAR             reduce using rule 35 (variable_end_loop -> variable .)
    INTTYPE         reduce using rule 35 (variable_end_loop -> variable .)
    FLOATTYPE       reduce using rule 35 (variable_end_loop -> variable .)
    CHARTYPE        reduce using rule 35 (variable_end_loop -> variable .)
    BOOLTYPE        reduce using rule 35 (variable_end_loop -> variable .)
    VOIDTYPE        reduce using rule 35 (variable_end_loop -> variable .)
    MAIN            reduce using rule 35 (variable_end_loop -> variable .)


state 33

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 42

state 34

    (25) variable_loop -> variable_id_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)


state 35

    (16) subtipo -> INTTYPE .

    SEMICOLON       reduce using rule 16 (subtipo -> INTTYPE .)


state 36

    (17) subtipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 17 (subtipo -> FLOATTYPE .)


state 37

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 43

state 38

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET COMA variable_arr_coma

    RBRACKET        shift and go to state 44


state 39

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA . variable_id_loop_coma
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma

    ID              shift and go to state 45

    variable_id_loop_coma          shift and go to state 46

state 40

    (40) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque

    LPARENTHESIS    shift and go to state 47


state 41

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addMainProc -> .

    LPARENTHESIS    reduce using rule 3 (addMainProc -> .)

    addMainProc                    shift and go to state 48

state 42

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo addType .

    SEMICOLON       reduce using rule 28 (variable_id_loop -> variable_id_loop_coma COLON tipo addType .)


state 43

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo addType .

    SEMICOLON       reduce using rule 31 (variable_arr_loop -> variable_arr_coma COLON subtipo addType .)


state 44

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET . COMA variable_arr_coma

    COLON           reduce using rule 32 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .)
    COMA            shift and go to state 49


state 45

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 50

state 46

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .

    COLON           reduce using rule 30 (variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .)


state 47

    (40) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS variable_func addProcDirFunc bloque
    (54) funcion_option -> . argumentos
    (55) funcion_option -> .
    (56) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    RPARENTHESIS    reduce using rule 55 (funcion_option -> .)
    ID              shift and go to state 53

    funcion_option                 shift and go to state 51
    argumentos                     shift and go to state 52

state 48

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 54


state 49

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA . variable_arr_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 56

    variable_arr_coma              shift and go to state 55

state 50

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39


state 51

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS addProcDirFunc bloque
    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS variable_func addProcDirFunc bloque

    RPARENTHESIS    shift and go to state 57


state 52

    (54) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 54 (funcion_option -> argumentos .)


state 53

    (56) argumentos -> ID . addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
    (59) addDirVarGlobalesFunc -> .

    COLON           reduce using rule 59 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 58

state 54

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 59


state 55

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .

    COLON           reduce using rule 33 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .)


state 56

    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 60

state 57

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . addProcDirFunc bloque
    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . variable_func addProcDirFunc bloque
    (53) addProcDirFunc -> .
    (42) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 53 (addProcDirFunc -> .)
    VAR             shift and go to state 62

    addProcDirFunc                 shift and go to state 61
    variable_func                  shift and go to state 63

state 58

    (56) argumentos -> ID addDirVarGlobalesFunc . COLON tipo addTypeFunc argumentos_loop

    COLON           shift and go to state 64


state 59

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 65

    bloque                         shift and go to state 66

state 60

    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    LBRACKET        shift and go to state 38


state 61

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 65

    bloque                         shift and go to state 67

state 62

    (42) variable_func -> VAR . variable_loop_func
    (43) variable_loop_func -> . variable_id_loop_func SEMICOLON variable_end_loop_func
    (44) variable_loop_func -> . variable_arr_loop_func SEMICOLON variable_end_loop_func
    (45) variable_id_loop_func -> . variable_id_loop_coma_func COLON tipo addTypeFunc
    (48) variable_arr_loop_func -> . variable_arr_coma_func COLON subtipo addTypeFunc
    (49) variable_id_loop_coma_func -> . ID addDirVarGlobalesFunc
    (50) variable_id_loop_coma_func -> . ID addDirVarGlobalesFunc COMA variable_id_loop_coma_func
    (51) variable_arr_coma_func -> . ID addDirVarGlobalesFunc LBRACKET RBRACKET
    (52) variable_arr_coma_func -> . ID addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func

    ID              shift and go to state 72

    variable_id_loop_func          shift and go to state 68
    variable_id_loop_coma_func     shift and go to state 69
    variable_arr_loop_func         shift and go to state 70
    variable_loop_func             shift and go to state 71
    variable_arr_coma_func         shift and go to state 73

state 63

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func . addProcDirFunc bloque
    (53) addProcDirFunc -> .

    LCURLY          reduce using rule 53 (addProcDirFunc -> .)

    addProcDirFunc                 shift and go to state 74

state 64

    (56) argumentos -> ID addDirVarGlobalesFunc COLON . tipo addTypeFunc argumentos_loop
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 75

state 65

    (8) bloque -> LCURLY . bloque_est_loop RCURLY
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (94) asignacion -> . ID asignacion_option
    (64) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (37) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (61) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 82
    IF              shift and go to state 83
    PRINT           shift and go to state 78
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77

    regreso                        shift and go to state 84
    ciclo                          shift and go to state 79
    asignacion                     shift and go to state 85
    estatuto                       shift and go to state 80
    condicion                      shift and go to state 81
    bloque_est_loop                shift and go to state 86
    escritura                      shift and go to state 87

state 66

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 88


state 67

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .

    INTTYPE         reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    FLOATTYPE       reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    CHARTYPE        reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    BOOLTYPE        reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    VOIDTYPE        reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    MAIN            reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)


state 68

    (43) variable_loop_func -> variable_id_loop_func . SEMICOLON variable_end_loop_func

    SEMICOLON       shift and go to state 89


state 69

    (45) variable_id_loop_func -> variable_id_loop_coma_func . COLON tipo addTypeFunc

    COLON           shift and go to state 90


state 70

    (44) variable_loop_func -> variable_arr_loop_func . SEMICOLON variable_end_loop_func

    SEMICOLON       shift and go to state 91


state 71

    (42) variable_func -> VAR variable_loop_func .

    LCURLY          reduce using rule 42 (variable_func -> VAR variable_loop_func .)


state 72

    (49) variable_id_loop_coma_func -> ID . addDirVarGlobalesFunc
    (50) variable_id_loop_coma_func -> ID . addDirVarGlobalesFunc COMA variable_id_loop_coma_func
    (51) variable_arr_coma_func -> ID . addDirVarGlobalesFunc LBRACKET RBRACKET
    (52) variable_arr_coma_func -> ID . addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
    (59) addDirVarGlobalesFunc -> .

    COMA            reduce using rule 59 (addDirVarGlobalesFunc -> .)
    LBRACKET        reduce using rule 59 (addDirVarGlobalesFunc -> .)
    COLON           reduce using rule 59 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 92

state 73

    (48) variable_arr_loop_func -> variable_arr_coma_func . COLON subtipo addTypeFunc

    COLON           shift and go to state 93


state 74

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 65

    bloque                         shift and go to state 94

state 75

    (56) argumentos -> ID addDirVarGlobalesFunc COLON tipo . addTypeFunc argumentos_loop
    (60) addTypeFunc -> .

    COMA            reduce using rule 60 (addTypeFunc -> .)
    RPARENTHESIS    reduce using rule 60 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 95

state 76

    (23) regreso -> RETURN . exp SEMICOLON
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 107
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 77

    (61) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 110


state 78

    (37) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 111


state 79

    (22) estatuto -> ciclo .

    ID              reduce using rule 22 (estatuto -> ciclo .)
    IF              reduce using rule 22 (estatuto -> ciclo .)
    PRINT           reduce using rule 22 (estatuto -> ciclo .)
    RETURN          reduce using rule 22 (estatuto -> ciclo .)
    WHILE           reduce using rule 22 (estatuto -> ciclo .)
    RCURLY          reduce using rule 22 (estatuto -> ciclo .)


state 80

    (9) bloque_est_loop -> estatuto . bloque_est_loop
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (94) asignacion -> . ID asignacion_option
    (64) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (37) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (61) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 82
    IF              shift and go to state 83
    PRINT           shift and go to state 78
    RETURN          shift and go to state 76
    WHILE           shift and go to state 77

    regreso                        shift and go to state 84
    ciclo                          shift and go to state 79
    asignacion                     shift and go to state 85
    estatuto                       shift and go to state 80
    condicion                      shift and go to state 81
    bloque_est_loop                shift and go to state 112
    escritura                      shift and go to state 87

state 81

    (19) estatuto -> condicion .

    ID              reduce using rule 19 (estatuto -> condicion .)
    IF              reduce using rule 19 (estatuto -> condicion .)
    PRINT           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RCURLY          reduce using rule 19 (estatuto -> condicion .)


state 82

    (94) asignacion -> ID . asignacion_option
    (95) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (96) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 114
    LBRACKET        shift and go to state 115

    asignacion_option              shift and go to state 113

state 83

    (64) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 116


state 84

    (21) estatuto -> regreso .

    ID              reduce using rule 21 (estatuto -> regreso .)
    IF              reduce using rule 21 (estatuto -> regreso .)
    PRINT           reduce using rule 21 (estatuto -> regreso .)
    RETURN          reduce using rule 21 (estatuto -> regreso .)
    WHILE           reduce using rule 21 (estatuto -> regreso .)
    RCURLY          reduce using rule 21 (estatuto -> regreso .)


state 85

    (18) estatuto -> asignacion .

    ID              reduce using rule 18 (estatuto -> asignacion .)
    IF              reduce using rule 18 (estatuto -> asignacion .)
    PRINT           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RCURLY          reduce using rule 18 (estatuto -> asignacion .)


state 86

    (8) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 117


state 87

    (20) estatuto -> escritura .

    ID              reduce using rule 20 (estatuto -> escritura .)
    IF              reduce using rule 20 (estatuto -> escritura .)
    PRINT           reduce using rule 20 (estatuto -> escritura .)
    RETURN          reduce using rule 20 (estatuto -> escritura .)
    WHILE           reduce using rule 20 (estatuto -> escritura .)
    RCURLY          reduce using rule 20 (estatuto -> escritura .)


state 88

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 89

    (43) variable_loop_func -> variable_id_loop_func SEMICOLON . variable_end_loop_func
    (46) variable_end_loop_func -> . variable_func
    (47) variable_end_loop_func -> .
    (42) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 47 (variable_end_loop_func -> .)
    VAR             shift and go to state 62

    variable_func                  shift and go to state 119
    variable_end_loop_func         shift and go to state 118

state 90

    (45) variable_id_loop_func -> variable_id_loop_coma_func COLON . tipo addTypeFunc
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 120

state 91

    (44) variable_loop_func -> variable_arr_loop_func SEMICOLON . variable_end_loop_func
    (46) variable_end_loop_func -> . variable_func
    (47) variable_end_loop_func -> .
    (42) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 47 (variable_end_loop_func -> .)
    VAR             shift and go to state 62

    variable_func                  shift and go to state 119
    variable_end_loop_func         shift and go to state 121

state 92

    (49) variable_id_loop_coma_func -> ID addDirVarGlobalesFunc .
    (50) variable_id_loop_coma_func -> ID addDirVarGlobalesFunc . COMA variable_id_loop_coma_func
    (51) variable_arr_coma_func -> ID addDirVarGlobalesFunc . LBRACKET RBRACKET
    (52) variable_arr_coma_func -> ID addDirVarGlobalesFunc . LBRACKET RBRACKET COMA variable_arr_coma_func

    COLON           reduce using rule 49 (variable_id_loop_coma_func -> ID addDirVarGlobalesFunc .)
    COMA            shift and go to state 123
    LBRACKET        shift and go to state 122


state 93

    (48) variable_arr_loop_func -> variable_arr_coma_func COLON . subtipo addTypeFunc
    (16) subtipo -> . INTTYPE
    (17) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 35
    FLOATTYPE       shift and go to state 36

    subtipo                        shift and go to state 124

state 94

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .

    INTTYPE         reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .)
    FLOATTYPE       reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .)
    CHARTYPE        reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .)
    BOOLTYPE        reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .)
    VOIDTYPE        reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .)
    MAIN            reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFunc bloque .)


state 95

    (56) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc . argumentos_loop
    (57) argumentos_loop -> . COMA argumentos
    (58) argumentos_loop -> .

    COMA            shift and go to state 126
    RPARENTHESIS    reduce using rule 58 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 125

state 96

    (129) varcte -> CTECHAR . nodoCteC
    (142) nodoCteC -> .

    MULTIPLICATION  reduce using rule 142 (nodoCteC -> .)
    DIVISION        reduce using rule 142 (nodoCteC -> .)
    ADDITION        reduce using rule 142 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 142 (nodoCteC -> .)
    SEMICOLON       reduce using rule 142 (nodoCteC -> .)
    LESS            reduce using rule 142 (nodoCteC -> .)
    GREATER         reduce using rule 142 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 142 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 142 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 142 (nodoCteC -> .)
    EQUAL           reduce using rule 142 (nodoCteC -> .)
    AND             reduce using rule 142 (nodoCteC -> .)
    OR              reduce using rule 142 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 142 (nodoCteC -> .)
    ID              reduce using rule 142 (nodoCteC -> .)
    CTEINT          reduce using rule 142 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 142 (nodoCteC -> .)
    CTECHAR         reduce using rule 142 (nodoCteC -> .)
    TRUE            reduce using rule 142 (nodoCteC -> .)
    FALSE           reduce using rule 142 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 142 (nodoCteC -> .)

    nodoCteC                       shift and go to state 127

state 97

    (137) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 137 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 137 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 137 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 137 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 137 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 137 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 137 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 137 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 137 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 137 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 137 (CTEBOOL -> TRUE .)
    AND             reduce using rule 137 (CTEBOOL -> TRUE .)
    OR              reduce using rule 137 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 137 (CTEBOOL -> TRUE .)
    ID              reduce using rule 137 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 137 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 137 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 137 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 137 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 137 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 137 (CTEBOOL -> TRUE .)


state 98

    (120) factor_var -> varcte . nodo1
    (122) nodo1 -> .

    MULTIPLICATION  reduce using rule 122 (nodo1 -> .)
    DIVISION        reduce using rule 122 (nodo1 -> .)
    ADDITION        reduce using rule 122 (nodo1 -> .)
    SUBTRACTION     reduce using rule 122 (nodo1 -> .)
    SEMICOLON       reduce using rule 122 (nodo1 -> .)
    LESS            reduce using rule 122 (nodo1 -> .)
    GREATER         reduce using rule 122 (nodo1 -> .)
    LESSEQUAL       reduce using rule 122 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 122 (nodo1 -> .)
    NOTEQUAL        reduce using rule 122 (nodo1 -> .)
    EQUAL           reduce using rule 122 (nodo1 -> .)
    AND             reduce using rule 122 (nodo1 -> .)
    OR              reduce using rule 122 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 122 (nodo1 -> .)
    ID              reduce using rule 122 (nodo1 -> .)
    CTEINT          reduce using rule 122 (nodo1 -> .)
    CTEFLOAT        reduce using rule 122 (nodo1 -> .)
    CTECHAR         reduce using rule 122 (nodo1 -> .)
    TRUE            reduce using rule 122 (nodo1 -> .)
    FALSE           reduce using rule 122 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 122 (nodo1 -> .)

    nodo1                          shift and go to state 128

state 99

    (127) varcte -> CTEFLOAT . nodoCteF
    (140) nodoCteF -> .

    MULTIPLICATION  reduce using rule 140 (nodoCteF -> .)
    DIVISION        reduce using rule 140 (nodoCteF -> .)
    ADDITION        reduce using rule 140 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 140 (nodoCteF -> .)
    SEMICOLON       reduce using rule 140 (nodoCteF -> .)
    LESS            reduce using rule 140 (nodoCteF -> .)
    GREATER         reduce using rule 140 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 140 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 140 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 140 (nodoCteF -> .)
    EQUAL           reduce using rule 140 (nodoCteF -> .)
    AND             reduce using rule 140 (nodoCteF -> .)
    OR              reduce using rule 140 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 140 (nodoCteF -> .)
    ID              reduce using rule 140 (nodoCteF -> .)
    CTEINT          reduce using rule 140 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 140 (nodoCteF -> .)
    CTECHAR         reduce using rule 140 (nodoCteF -> .)
    TRUE            reduce using rule 140 (nodoCteF -> .)
    FALSE           reduce using rule 140 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 140 (nodoCteF -> .)

    nodoCteF                       shift and go to state 129

state 100

    (110) termino -> factor . nodo4 termino_loop
    (117) nodo4 -> .

    MULTIPLICATION  reduce using rule 117 (nodo4 -> .)
    DIVISION        reduce using rule 117 (nodo4 -> .)
    ADDITION        reduce using rule 117 (nodo4 -> .)
    SUBTRACTION     reduce using rule 117 (nodo4 -> .)
    SEMICOLON       reduce using rule 117 (nodo4 -> .)
    LESS            reduce using rule 117 (nodo4 -> .)
    GREATER         reduce using rule 117 (nodo4 -> .)
    LESSEQUAL       reduce using rule 117 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 117 (nodo4 -> .)
    NOTEQUAL        reduce using rule 117 (nodo4 -> .)
    EQUAL           reduce using rule 117 (nodo4 -> .)
    AND             reduce using rule 117 (nodo4 -> .)
    OR              reduce using rule 117 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 117 (nodo4 -> .)
    ID              reduce using rule 117 (nodo4 -> .)
    CTEINT          reduce using rule 117 (nodo4 -> .)
    CTEFLOAT        reduce using rule 117 (nodo4 -> .)
    CTECHAR         reduce using rule 117 (nodo4 -> .)
    TRUE            reduce using rule 117 (nodo4 -> .)
    FALSE           reduce using rule 117 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 117 (nodo4 -> .)

    nodo4                          shift and go to state 130

state 101

    (119) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 119 (factor -> factor_exp .)
    DIVISION        reduce using rule 119 (factor -> factor_exp .)
    ADDITION        reduce using rule 119 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 119 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 119 (factor -> factor_exp .)
    LESS            reduce using rule 119 (factor -> factor_exp .)
    GREATER         reduce using rule 119 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 119 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 119 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 119 (factor -> factor_exp .)
    EQUAL           reduce using rule 119 (factor -> factor_exp .)
    AND             reduce using rule 119 (factor -> factor_exp .)
    OR              reduce using rule 119 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 119 (factor -> factor_exp .)
    ID              reduce using rule 119 (factor -> factor_exp .)
    CTEINT          reduce using rule 119 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 119 (factor -> factor_exp .)
    CTECHAR         reduce using rule 119 (factor -> factor_exp .)
    TRUE            reduce using rule 119 (factor -> factor_exp .)
    FALSE           reduce using rule 119 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 119 (factor -> factor_exp .)


state 102

    (126) varcte -> CTEINT . nodoCteE
    (139) nodoCteE -> .

    MULTIPLICATION  reduce using rule 139 (nodoCteE -> .)
    DIVISION        reduce using rule 139 (nodoCteE -> .)
    ADDITION        reduce using rule 139 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 139 (nodoCteE -> .)
    SEMICOLON       reduce using rule 139 (nodoCteE -> .)
    LESS            reduce using rule 139 (nodoCteE -> .)
    GREATER         reduce using rule 139 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 139 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 139 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 139 (nodoCteE -> .)
    EQUAL           reduce using rule 139 (nodoCteE -> .)
    AND             reduce using rule 139 (nodoCteE -> .)
    OR              reduce using rule 139 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 139 (nodoCteE -> .)
    ID              reduce using rule 139 (nodoCteE -> .)
    CTEINT          reduce using rule 139 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 139 (nodoCteE -> .)
    CTECHAR         reduce using rule 139 (nodoCteE -> .)
    TRUE            reduce using rule 139 (nodoCteE -> .)
    FALSE           reduce using rule 139 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 139 (nodoCteE -> .)

    nodoCteE                       shift and go to state 131

state 103

    (121) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (123) nodo6 -> .

    LPARENTHESIS    reduce using rule 123 (nodo6 -> .)
    ID              reduce using rule 123 (nodo6 -> .)
    CTEINT          reduce using rule 123 (nodo6 -> .)
    CTEFLOAT        reduce using rule 123 (nodo6 -> .)
    CTECHAR         reduce using rule 123 (nodo6 -> .)
    TRUE            reduce using rule 123 (nodo6 -> .)
    FALSE           reduce using rule 123 (nodo6 -> .)

    nodo6                          shift and go to state 132

state 104

    (125) varcte -> ID . varcte_arr
    (135) varcte_arr -> . LBRACKET RBRACKET
    (136) varcte_arr -> .

    LBRACKET        shift and go to state 133
    MULTIPLICATION  reduce using rule 136 (varcte_arr -> .)
    DIVISION        reduce using rule 136 (varcte_arr -> .)
    ADDITION        reduce using rule 136 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 136 (varcte_arr -> .)
    SEMICOLON       reduce using rule 136 (varcte_arr -> .)
    LESS            reduce using rule 136 (varcte_arr -> .)
    GREATER         reduce using rule 136 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 136 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 136 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 136 (varcte_arr -> .)
    EQUAL           reduce using rule 136 (varcte_arr -> .)
    AND             reduce using rule 136 (varcte_arr -> .)
    OR              reduce using rule 136 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 136 (varcte_arr -> .)
    ID              reduce using rule 136 (varcte_arr -> .)
    CTEINT          reduce using rule 136 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 136 (varcte_arr -> .)
    CTECHAR         reduce using rule 136 (varcte_arr -> .)
    TRUE            reduce using rule 136 (varcte_arr -> .)
    FALSE           reduce using rule 136 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 136 (varcte_arr -> .)

    varcte_arr                     shift and go to state 134

state 105

    (138) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 138 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 138 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 138 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 138 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 138 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 138 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 138 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 138 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 138 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 138 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 138 (CTEBOOL -> FALSE .)
    AND             reduce using rule 138 (CTEBOOL -> FALSE .)
    OR              reduce using rule 138 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 138 (CTEBOOL -> FALSE .)
    ID              reduce using rule 138 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 138 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 138 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 138 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 138 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 138 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 138 (CTEBOOL -> FALSE .)


state 106

    (128) varcte -> CTEBOOL . nodoCteB
    (141) nodoCteB -> .

    MULTIPLICATION  reduce using rule 141 (nodoCteB -> .)
    DIVISION        reduce using rule 141 (nodoCteB -> .)
    ADDITION        reduce using rule 141 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 141 (nodoCteB -> .)
    SEMICOLON       reduce using rule 141 (nodoCteB -> .)
    LESS            reduce using rule 141 (nodoCteB -> .)
    GREATER         reduce using rule 141 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 141 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 141 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 141 (nodoCteB -> .)
    EQUAL           reduce using rule 141 (nodoCteB -> .)
    AND             reduce using rule 141 (nodoCteB -> .)
    OR              reduce using rule 141 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 141 (nodoCteB -> .)
    ID              reduce using rule 141 (nodoCteB -> .)
    CTEINT          reduce using rule 141 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 141 (nodoCteB -> .)
    CTECHAR         reduce using rule 141 (nodoCteB -> .)
    TRUE            reduce using rule 141 (nodoCteB -> .)
    FALSE           reduce using rule 141 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 141 (nodoCteB -> .)

    nodoCteB                       shift and go to state 135

state 107

    (23) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 136


state 108

    (118) factor -> factor_var .

    MULTIPLICATION  reduce using rule 118 (factor -> factor_var .)
    DIVISION        reduce using rule 118 (factor -> factor_var .)
    ADDITION        reduce using rule 118 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 118 (factor -> factor_var .)
    SEMICOLON       reduce using rule 118 (factor -> factor_var .)
    LESS            reduce using rule 118 (factor -> factor_var .)
    GREATER         reduce using rule 118 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 118 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 118 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 118 (factor -> factor_var .)
    EQUAL           reduce using rule 118 (factor -> factor_var .)
    AND             reduce using rule 118 (factor -> factor_var .)
    OR              reduce using rule 118 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 118 (factor -> factor_var .)
    ID              reduce using rule 118 (factor -> factor_var .)
    CTEINT          reduce using rule 118 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 118 (factor -> factor_var .)
    CTECHAR         reduce using rule 118 (factor -> factor_var .)
    TRUE            reduce using rule 118 (factor -> factor_var .)
    FALSE           reduce using rule 118 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 118 (factor -> factor_var .)


state 109

    (102) exp -> termino . nodo5 exp_loop
    (109) nodo5 -> .

    ADDITION        reduce using rule 109 (nodo5 -> .)
    SUBTRACTION     reduce using rule 109 (nodo5 -> .)
    SEMICOLON       reduce using rule 109 (nodo5 -> .)
    LESS            reduce using rule 109 (nodo5 -> .)
    GREATER         reduce using rule 109 (nodo5 -> .)
    LESSEQUAL       reduce using rule 109 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 109 (nodo5 -> .)
    NOTEQUAL        reduce using rule 109 (nodo5 -> .)
    EQUAL           reduce using rule 109 (nodo5 -> .)
    AND             reduce using rule 109 (nodo5 -> .)
    OR              reduce using rule 109 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 109 (nodo5 -> .)
    ID              reduce using rule 109 (nodo5 -> .)
    CTEINT          reduce using rule 109 (nodo5 -> .)
    CTEFLOAT        reduce using rule 109 (nodo5 -> .)
    CTECHAR         reduce using rule 109 (nodo5 -> .)
    TRUE            reduce using rule 109 (nodo5 -> .)
    FALSE           reduce using rule 109 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 109 (nodo5 -> .)

    nodo5                          shift and go to state 137

state 110

    (61) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (62) nodo16 -> .

    LPARENTHESIS    reduce using rule 62 (nodo16 -> .)
    ID              reduce using rule 62 (nodo16 -> .)
    CTEINT          reduce using rule 62 (nodo16 -> .)
    CTEFLOAT        reduce using rule 62 (nodo16 -> .)
    CTECHAR         reduce using rule 62 (nodo16 -> .)
    TRUE            reduce using rule 62 (nodo16 -> .)
    FALSE           reduce using rule 62 (nodo16 -> .)

    nodo16                         shift and go to state 138

state 111

    (37) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (38) escritura_type -> . expresion
    (39) escritura_type -> . QUOTE CTECHAR QUOTE
    (70) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 139
    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    escritura_type                 shift and go to state 140
    nuevaexp                       shift and go to state 141
    expresion                      shift and go to state 142
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 112

    (9) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 9 (bloque_est_loop -> estatuto bloque_est_loop .)


state 113

    (94) asignacion -> ID asignacion_option .

    ID              reduce using rule 94 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 94 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 94 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 94 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 94 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 94 (asignacion -> ID asignacion_option .)


state 114

    (95) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (70) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 141
    expresion                      shift and go to state 144
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 115

    (96) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 145


state 116

    (64) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (70) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 141
    expresion                      shift and go to state 146
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 117

    (8) bloque -> LCURLY bloque_est_loop RCURLY .

    END             reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 118

    (43) variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func .

    LCURLY          reduce using rule 43 (variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func .)


state 119

    (46) variable_end_loop_func -> variable_func .

    LCURLY          reduce using rule 46 (variable_end_loop_func -> variable_func .)


state 120

    (45) variable_id_loop_func -> variable_id_loop_coma_func COLON tipo . addTypeFunc
    (60) addTypeFunc -> .

    SEMICOLON       reduce using rule 60 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 147

state 121

    (44) variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func .

    LCURLY          reduce using rule 44 (variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func .)


state 122

    (51) variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET . RBRACKET
    (52) variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET . RBRACKET COMA variable_arr_coma_func

    RBRACKET        shift and go to state 148


state 123

    (50) variable_id_loop_coma_func -> ID addDirVarGlobalesFunc COMA . variable_id_loop_coma_func
    (49) variable_id_loop_coma_func -> . ID addDirVarGlobalesFunc
    (50) variable_id_loop_coma_func -> . ID addDirVarGlobalesFunc COMA variable_id_loop_coma_func

    ID              shift and go to state 150

    variable_id_loop_coma_func     shift and go to state 149

state 124

    (48) variable_arr_loop_func -> variable_arr_coma_func COLON subtipo . addTypeFunc
    (60) addTypeFunc -> .

    SEMICOLON       reduce using rule 60 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 151

state 125

    (56) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 56 (argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .)


state 126

    (57) argumentos_loop -> COMA . argumentos
    (56) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    ID              shift and go to state 53

    argumentos                     shift and go to state 152

state 127

    (129) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 129 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 129 (varcte -> CTECHAR nodoCteC .)


state 128

    (120) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 120 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 120 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 120 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 120 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 120 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 120 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 120 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 120 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 120 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 120 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 120 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 120 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 120 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 120 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 120 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 120 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 120 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 120 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 120 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 120 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 120 (factor_var -> varcte nodo1 .)


state 129

    (127) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 127 (varcte -> CTEFLOAT nodoCteF .)


state 130

    (110) termino -> factor nodo4 . termino_loop
    (111) termino_loop -> . termino_type_loop
    (112) termino_loop -> .
    (113) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (114) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 112 (termino_loop -> .)
    SUBTRACTION     reduce using rule 112 (termino_loop -> .)
    SEMICOLON       reduce using rule 112 (termino_loop -> .)
    LESS            reduce using rule 112 (termino_loop -> .)
    GREATER         reduce using rule 112 (termino_loop -> .)
    LESSEQUAL       reduce using rule 112 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 112 (termino_loop -> .)
    NOTEQUAL        reduce using rule 112 (termino_loop -> .)
    EQUAL           reduce using rule 112 (termino_loop -> .)
    AND             reduce using rule 112 (termino_loop -> .)
    OR              reduce using rule 112 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 112 (termino_loop -> .)
    ID              reduce using rule 112 (termino_loop -> .)
    CTEINT          reduce using rule 112 (termino_loop -> .)
    CTEFLOAT        reduce using rule 112 (termino_loop -> .)
    CTECHAR         reduce using rule 112 (termino_loop -> .)
    TRUE            reduce using rule 112 (termino_loop -> .)
    FALSE           reduce using rule 112 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 112 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 155
    DIVISION        shift and go to state 153

    termino_type_loop              shift and go to state 154
    termino_loop                   shift and go to state 156

state 131

    (126) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 126 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 126 (varcte -> CTEINT nodoCteE .)


state 132

    (121) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (70) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 141
    expresion                      shift and go to state 157
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 133

    (135) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 158


state 134

    (125) varcte -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 125 (varcte -> ID varcte_arr .)
    DIVISION        reduce using rule 125 (varcte -> ID varcte_arr .)
    ADDITION        reduce using rule 125 (varcte -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 125 (varcte -> ID varcte_arr .)
    LESS            reduce using rule 125 (varcte -> ID varcte_arr .)
    GREATER         reduce using rule 125 (varcte -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 125 (varcte -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 125 (varcte -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 125 (varcte -> ID varcte_arr .)
    EQUAL           reduce using rule 125 (varcte -> ID varcte_arr .)
    AND             reduce using rule 125 (varcte -> ID varcte_arr .)
    OR              reduce using rule 125 (varcte -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 125 (varcte -> ID varcte_arr .)
    ID              reduce using rule 125 (varcte -> ID varcte_arr .)
    CTEINT          reduce using rule 125 (varcte -> ID varcte_arr .)
    CTEFLOAT        reduce using rule 125 (varcte -> ID varcte_arr .)
    CTECHAR         reduce using rule 125 (varcte -> ID varcte_arr .)
    TRUE            reduce using rule 125 (varcte -> ID varcte_arr .)
    FALSE           reduce using rule 125 (varcte -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 125 (varcte -> ID varcte_arr .)
    SEMICOLON       reduce using rule 125 (varcte -> ID varcte_arr .)


state 135

    (128) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 128 (varcte -> CTEBOOL nodoCteB .)


state 136

    (23) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)


state 137

    (102) exp -> termino nodo5 . exp_loop
    (103) exp_loop -> . exp_type_loop
    (104) exp_loop -> .
    (105) exp_type_loop -> . ADDITION nodo3_suma exp
    (106) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 104 (exp_loop -> .)
    LESS            reduce using rule 104 (exp_loop -> .)
    GREATER         reduce using rule 104 (exp_loop -> .)
    LESSEQUAL       reduce using rule 104 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 104 (exp_loop -> .)
    NOTEQUAL        reduce using rule 104 (exp_loop -> .)
    EQUAL           reduce using rule 104 (exp_loop -> .)
    AND             reduce using rule 104 (exp_loop -> .)
    OR              reduce using rule 104 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 104 (exp_loop -> .)
    ID              reduce using rule 104 (exp_loop -> .)
    CTEINT          reduce using rule 104 (exp_loop -> .)
    CTEFLOAT        reduce using rule 104 (exp_loop -> .)
    CTECHAR         reduce using rule 104 (exp_loop -> .)
    TRUE            reduce using rule 104 (exp_loop -> .)
    FALSE           reduce using rule 104 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 104 (exp_loop -> .)
    ADDITION        shift and go to state 159
    SUBTRACTION     shift and go to state 162

    exp_loop                       shift and go to state 160
    exp_type_loop                  shift and go to state 161

state 138

    (61) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (70) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 141
    expresion                      shift and go to state 163
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 139

    (39) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 164


state 140

    (37) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 165


state 141

    (70) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (71) expresion_option -> . AND nodo12_and nuevaexp
    (72) expresion_option -> . OR nodo12_or nuevaexp
    (73) expresion_option -> .

    AND             shift and go to state 166
    OR              shift and go to state 168
    LPARENTHESIS    reduce using rule 73 (expresion_option -> .)
    ID              reduce using rule 73 (expresion_option -> .)
    CTEINT          reduce using rule 73 (expresion_option -> .)
    CTEFLOAT        reduce using rule 73 (expresion_option -> .)
    CTECHAR         reduce using rule 73 (expresion_option -> .)
    TRUE            reduce using rule 73 (expresion_option -> .)
    FALSE           reduce using rule 73 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 73 (expresion_option -> .)
    SEMICOLON       reduce using rule 73 (expresion_option -> .)

    expresion_option               shift and go to state 167

state 142

    (38) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 38 (escritura_type -> expresion .)


state 143

    (79) nuevaexp -> exp . nuevaexp_type nodo10
    (80) nuevaexp_type -> . LESS nodo9_menor exp
    (81) nuevaexp_type -> . GREATER nodo9_mayor exp
    (82) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (83) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (84) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (85) nuevaexp_type -> . EQUAL nodo9_igual exp
    (86) nuevaexp_type -> .

    LESS            shift and go to state 171
    GREATER         shift and go to state 170
    LESSEQUAL       shift and go to state 175
    GREATEREQUAL    shift and go to state 169
    NOTEQUAL        shift and go to state 173
    EQUAL           shift and go to state 172
    AND             reduce using rule 86 (nuevaexp_type -> .)
    OR              reduce using rule 86 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 86 (nuevaexp_type -> .)
    ID              reduce using rule 86 (nuevaexp_type -> .)
    CTEINT          reduce using rule 86 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 86 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 86 (nuevaexp_type -> .)
    TRUE            reduce using rule 86 (nuevaexp_type -> .)
    FALSE           reduce using rule 86 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 86 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 86 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 174

state 144

    (95) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (101) nodo8 -> .

    SEMICOLON       reduce using rule 101 (nodo8 -> .)

    nodo8                          shift and go to state 176

state 145

    (96) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 177


state 146

    (64) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 178


state 147

    (45) variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc .

    SEMICOLON       reduce using rule 45 (variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc .)


state 148

    (51) variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET .
    (52) variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET . COMA variable_arr_coma_func

    COLON           reduce using rule 51 (variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET .)
    COMA            shift and go to state 179


state 149

    (50) variable_id_loop_coma_func -> ID addDirVarGlobalesFunc COMA variable_id_loop_coma_func .

    COLON           reduce using rule 50 (variable_id_loop_coma_func -> ID addDirVarGlobalesFunc COMA variable_id_loop_coma_func .)


state 150

    (49) variable_id_loop_coma_func -> ID . addDirVarGlobalesFunc
    (50) variable_id_loop_coma_func -> ID . addDirVarGlobalesFunc COMA variable_id_loop_coma_func
    (59) addDirVarGlobalesFunc -> .

    COMA            reduce using rule 59 (addDirVarGlobalesFunc -> .)
    COLON           reduce using rule 59 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 180

state 151

    (48) variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc .

    SEMICOLON       reduce using rule 48 (variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc .)


state 152

    (57) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 57 (argumentos_loop -> COMA argumentos .)


state 153

    (114) termino_type_loop -> DIVISION . nodo2_div termino
    (116) nodo2_div -> .

    LPARENTHESIS    reduce using rule 116 (nodo2_div -> .)
    ID              reduce using rule 116 (nodo2_div -> .)
    CTEINT          reduce using rule 116 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 116 (nodo2_div -> .)
    CTECHAR         reduce using rule 116 (nodo2_div -> .)
    TRUE            reduce using rule 116 (nodo2_div -> .)
    FALSE           reduce using rule 116 (nodo2_div -> .)

    nodo2_div                      shift and go to state 181

state 154

    (111) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 111 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 111 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 111 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 111 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 111 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 111 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 111 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 111 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 111 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 111 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 111 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 111 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 111 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 111 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 111 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 111 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 111 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 111 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 111 (termino_loop -> termino_type_loop .)


state 155

    (113) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (115) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 115 (nodo2_mult -> .)
    ID              reduce using rule 115 (nodo2_mult -> .)
    CTEINT          reduce using rule 115 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 115 (nodo2_mult -> .)
    CTECHAR         reduce using rule 115 (nodo2_mult -> .)
    TRUE            reduce using rule 115 (nodo2_mult -> .)
    FALSE           reduce using rule 115 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 182

state 156

    (110) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 110 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 110 (termino -> factor nodo4 termino_loop .)


state 157

    (121) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 183


state 158

    (135) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 135 (varcte_arr -> LBRACKET RBRACKET .)


state 159

    (105) exp_type_loop -> ADDITION . nodo3_suma exp
    (107) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 107 (nodo3_suma -> .)
    ID              reduce using rule 107 (nodo3_suma -> .)
    CTEINT          reduce using rule 107 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 107 (nodo3_suma -> .)
    CTECHAR         reduce using rule 107 (nodo3_suma -> .)
    TRUE            reduce using rule 107 (nodo3_suma -> .)
    FALSE           reduce using rule 107 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 184

state 160

    (102) exp -> termino nodo5 exp_loop .

    LESS            reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 102 (exp -> termino nodo5 exp_loop .)
    SEMICOLON       reduce using rule 102 (exp -> termino nodo5 exp_loop .)


state 161

    (103) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 103 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 103 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 103 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 103 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 103 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 103 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 103 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 103 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 103 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 103 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 103 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 103 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 103 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 103 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 103 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 103 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 103 (exp_loop -> exp_type_loop .)


state 162

    (106) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (108) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 108 (nodo3_resta -> .)
    ID              reduce using rule 108 (nodo3_resta -> .)
    CTEINT          reduce using rule 108 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 108 (nodo3_resta -> .)
    CTECHAR         reduce using rule 108 (nodo3_resta -> .)
    TRUE            reduce using rule 108 (nodo3_resta -> .)
    FALSE           reduce using rule 108 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 185

state 163

    (61) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 186


state 164

    (39) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 187


state 165

    (37) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 188


state 166

    (71) expresion_option -> AND . nodo12_and nuevaexp
    (76) nodo12_and -> .

    LPARENTHESIS    reduce using rule 76 (nodo12_and -> .)
    ID              reduce using rule 76 (nodo12_and -> .)
    CTEINT          reduce using rule 76 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 76 (nodo12_and -> .)
    CTECHAR         reduce using rule 76 (nodo12_and -> .)
    TRUE            reduce using rule 76 (nodo12_and -> .)
    FALSE           reduce using rule 76 (nodo12_and -> .)

    nodo12_and                     shift and go to state 189

state 167

    (70) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (78) nodo11 -> .

    LPARENTHESIS    reduce using rule 78 (nodo11 -> .)
    ID              reduce using rule 78 (nodo11 -> .)
    CTEINT          reduce using rule 78 (nodo11 -> .)
    CTEFLOAT        reduce using rule 78 (nodo11 -> .)
    CTECHAR         reduce using rule 78 (nodo11 -> .)
    TRUE            reduce using rule 78 (nodo11 -> .)
    FALSE           reduce using rule 78 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 78 (nodo11 -> .)
    SEMICOLON       reduce using rule 78 (nodo11 -> .)

    nodo11                         shift and go to state 190

state 168

    (72) expresion_option -> OR . nodo12_or nuevaexp
    (77) nodo12_or -> .

    LPARENTHESIS    reduce using rule 77 (nodo12_or -> .)
    ID              reduce using rule 77 (nodo12_or -> .)
    CTEINT          reduce using rule 77 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 77 (nodo12_or -> .)
    CTECHAR         reduce using rule 77 (nodo12_or -> .)
    TRUE            reduce using rule 77 (nodo12_or -> .)
    FALSE           reduce using rule 77 (nodo12_or -> .)

    nodo12_or                      shift and go to state 191

state 169

    (83) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (91) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 91 (nodo9_mayorig -> .)
    ID              reduce using rule 91 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 91 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 91 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 91 (nodo9_mayorig -> .)
    TRUE            reduce using rule 91 (nodo9_mayorig -> .)
    FALSE           reduce using rule 91 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 192

state 170

    (81) nuevaexp_type -> GREATER . nodo9_mayor exp
    (89) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 89 (nodo9_mayor -> .)
    ID              reduce using rule 89 (nodo9_mayor -> .)
    CTEINT          reduce using rule 89 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 89 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 89 (nodo9_mayor -> .)
    TRUE            reduce using rule 89 (nodo9_mayor -> .)
    FALSE           reduce using rule 89 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 193

state 171

    (80) nuevaexp_type -> LESS . nodo9_menor exp
    (88) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 88 (nodo9_menor -> .)
    ID              reduce using rule 88 (nodo9_menor -> .)
    CTEINT          reduce using rule 88 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 88 (nodo9_menor -> .)
    CTECHAR         reduce using rule 88 (nodo9_menor -> .)
    TRUE            reduce using rule 88 (nodo9_menor -> .)
    FALSE           reduce using rule 88 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 194

state 172

    (85) nuevaexp_type -> EQUAL . nodo9_igual exp
    (93) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 93 (nodo9_igual -> .)
    ID              reduce using rule 93 (nodo9_igual -> .)
    CTEINT          reduce using rule 93 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 93 (nodo9_igual -> .)
    CTECHAR         reduce using rule 93 (nodo9_igual -> .)
    TRUE            reduce using rule 93 (nodo9_igual -> .)
    FALSE           reduce using rule 93 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 195

state 173

    (84) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (92) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 92 (nodo9_dif -> .)
    ID              reduce using rule 92 (nodo9_dif -> .)
    CTEINT          reduce using rule 92 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 92 (nodo9_dif -> .)
    CTECHAR         reduce using rule 92 (nodo9_dif -> .)
    TRUE            reduce using rule 92 (nodo9_dif -> .)
    FALSE           reduce using rule 92 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 196

state 174

    (79) nuevaexp -> exp nuevaexp_type . nodo10
    (87) nodo10 -> .

    AND             reduce using rule 87 (nodo10 -> .)
    OR              reduce using rule 87 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 87 (nodo10 -> .)
    ID              reduce using rule 87 (nodo10 -> .)
    CTEINT          reduce using rule 87 (nodo10 -> .)
    CTEFLOAT        reduce using rule 87 (nodo10 -> .)
    CTECHAR         reduce using rule 87 (nodo10 -> .)
    TRUE            reduce using rule 87 (nodo10 -> .)
    FALSE           reduce using rule 87 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 87 (nodo10 -> .)
    SEMICOLON       reduce using rule 87 (nodo10 -> .)

    nodo10                         shift and go to state 197

state 175

    (82) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (90) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 90 (nodo9_menorig -> .)
    ID              reduce using rule 90 (nodo9_menorig -> .)
    CTEINT          reduce using rule 90 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 90 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 90 (nodo9_menorig -> .)
    TRUE            reduce using rule 90 (nodo9_menorig -> .)
    FALSE           reduce using rule 90 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 198

state 176

    (95) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 199


state 177

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 200


state 178

    (64) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (69) nodo13 -> .

    LCURLY          reduce using rule 69 (nodo13 -> .)

    nodo13                         shift and go to state 201

state 179

    (52) variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET COMA . variable_arr_coma_func
    (51) variable_arr_coma_func -> . ID addDirVarGlobalesFunc LBRACKET RBRACKET
    (52) variable_arr_coma_func -> . ID addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func

    ID              shift and go to state 202

    variable_arr_coma_func         shift and go to state 203

state 180

    (49) variable_id_loop_coma_func -> ID addDirVarGlobalesFunc .
    (50) variable_id_loop_coma_func -> ID addDirVarGlobalesFunc . COMA variable_id_loop_coma_func

    COLON           reduce using rule 49 (variable_id_loop_coma_func -> ID addDirVarGlobalesFunc .)
    COMA            shift and go to state 123


state 181

    (114) termino_type_loop -> DIVISION nodo2_div . termino
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 204
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 182

    (113) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 205
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 183

    (121) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (124) nodo7 -> .

    MULTIPLICATION  reduce using rule 124 (nodo7 -> .)
    DIVISION        reduce using rule 124 (nodo7 -> .)
    ADDITION        reduce using rule 124 (nodo7 -> .)
    SUBTRACTION     reduce using rule 124 (nodo7 -> .)
    SEMICOLON       reduce using rule 124 (nodo7 -> .)
    LESS            reduce using rule 124 (nodo7 -> .)
    GREATER         reduce using rule 124 (nodo7 -> .)
    LESSEQUAL       reduce using rule 124 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 124 (nodo7 -> .)
    NOTEQUAL        reduce using rule 124 (nodo7 -> .)
    EQUAL           reduce using rule 124 (nodo7 -> .)
    AND             reduce using rule 124 (nodo7 -> .)
    OR              reduce using rule 124 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 124 (nodo7 -> .)
    ID              reduce using rule 124 (nodo7 -> .)
    CTEINT          reduce using rule 124 (nodo7 -> .)
    CTEFLOAT        reduce using rule 124 (nodo7 -> .)
    CTECHAR         reduce using rule 124 (nodo7 -> .)
    TRUE            reduce using rule 124 (nodo7 -> .)
    FALSE           reduce using rule 124 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 124 (nodo7 -> .)

    nodo7                          shift and go to state 206

state 184

    (105) exp_type_loop -> ADDITION nodo3_suma . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 207
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 185

    (106) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 208
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 186

    (61) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (69) nodo13 -> .

    LCURLY          reduce using rule 69 (nodo13 -> .)

    nodo13                         shift and go to state 209

state 187

    (39) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 39 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 188

    (37) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 189

    (71) expresion_option -> AND nodo12_and . nuevaexp
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 210
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 190

    (70) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (74) expresion_loop -> . expresion
    (75) expresion_loop -> .
    (70) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 75 (expresion_loop -> .)
    SEMICOLON       reduce using rule 75 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    expresion_loop                 shift and go to state 211
    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 141
    expresion                      shift and go to state 212
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 191

    (72) expresion_option -> OR nodo12_or . nuevaexp
    (79) nuevaexp -> . exp nuevaexp_type nodo10
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    termino                        shift and go to state 109
    varcte                         shift and go to state 98
    factor                         shift and go to state 100
    factor_exp                     shift and go to state 101
    nuevaexp                       shift and go to state 213
    CTEBOOL                        shift and go to state 106
    exp                            shift and go to state 143
    factor_var                     shift and go to state 108

state 192

    (83) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 214
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 193

    (81) nuevaexp_type -> GREATER nodo9_mayor . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 215
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 194

    (80) nuevaexp_type -> LESS nodo9_menor . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 216
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 195

    (85) nuevaexp_type -> EQUAL nodo9_igual . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    factor_exp                     shift and go to state 101
    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    termino                        shift and go to state 109
    exp                            shift and go to state 217
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 196

    (84) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 218
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 197

    (79) nuevaexp -> exp nuevaexp_type nodo10 .

    AND             reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    LPARENTHESIS    reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 79 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 198

    (82) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (102) exp -> . termino nodo5 exp_loop
    (110) termino -> . factor nodo4 termino_loop
    (118) factor -> . factor_var
    (119) factor -> . factor_exp
    (120) factor_var -> . varcte nodo1
    (121) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (125) varcte -> . ID varcte_arr
    (126) varcte -> . CTEINT nodoCteE
    (127) varcte -> . CTEFLOAT nodoCteF
    (128) varcte -> . CTEBOOL nodoCteB
    (129) varcte -> . CTECHAR nodoCteC
    (137) CTEBOOL -> . TRUE
    (138) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 103
    ID              shift and go to state 104
    CTEINT          shift and go to state 102
    CTEFLOAT        shift and go to state 99
    CTECHAR         shift and go to state 96
    TRUE            shift and go to state 97
    FALSE           shift and go to state 105

    varcte                         shift and go to state 98
    CTEBOOL                        shift and go to state 106
    factor_exp                     shift and go to state 101
    termino                        shift and go to state 109
    exp                            shift and go to state 219
    factor                         shift and go to state 100
    factor_var                     shift and go to state 108

state 199

    (95) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 95 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 95 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 95 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 95 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 95 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 95 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 200

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (101) nodo8 -> .

    LBRACKET        reduce using rule 101 (nodo8 -> .)

    nodo8                          shift and go to state 220

state 201

    (64) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 65

    bloque                         shift and go to state 221

state 202

    (51) variable_arr_coma_func -> ID . addDirVarGlobalesFunc LBRACKET RBRACKET
    (52) variable_arr_coma_func -> ID . addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
    (59) addDirVarGlobalesFunc -> .

    LBRACKET        reduce using rule 59 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 222

state 203

    (52) variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func .

    COLON           reduce using rule 52 (variable_arr_coma_func -> ID addDirVarGlobalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func .)


state 204

    (114) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 114 (termino_type_loop -> DIVISION nodo2_div termino .)


state 205

    (113) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 113 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 206

    (121) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 121 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 207

    (105) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 105 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 208

    (106) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 106 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 209

    (61) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 65

    bloque                         shift and go to state 223

state 210

    (71) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 71 (expresion_option -> AND nodo12_and nuevaexp .)


state 211

    (70) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    RPARENTHESIS    reduce using rule 70 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    SEMICOLON       reduce using rule 70 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 212

    (74) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 74 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 74 (expresion_loop -> expresion .)


state 213

    (72) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 72 (expresion_option -> OR nodo12_or nuevaexp .)


state 214

    (83) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 83 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 215

    (81) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 81 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 216

    (80) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 80 (nuevaexp_type -> LESS nodo9_menor exp .)


state 217

    (85) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 85 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 218

    (84) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 84 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 219

    (82) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 82 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 220

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 224


state 221

    (64) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (65) condicion_option -> . ELSE nodo14 bloque
    (66) condicion_option -> .

    ELSE            shift and go to state 225
    ID              reduce using rule 66 (condicion_option -> .)
    IF              reduce using rule 66 (condicion_option -> .)
    PRINT           reduce using rule 66 (condicion_option -> .)
    RETURN          reduce using rule 66 (condicion_option -> .)
    WHILE           reduce using rule 66 (condicion_option -> .)
    RCURLY          reduce using rule 66 (condicion_option -> .)

    condicion_option               shift and go to state 226

state 222

    (51) variable_arr_coma_func -> ID addDirVarGlobalesFunc . LBRACKET RBRACKET
    (52) variable_arr_coma_func -> ID addDirVarGlobalesFunc . LBRACKET RBRACKET COMA variable_arr_coma_func

    LBRACKET        shift and go to state 122


state 223

    (61) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (63) nodo17 -> .

    ID              reduce using rule 63 (nodo17 -> .)
    IF              reduce using rule 63 (nodo17 -> .)
    PRINT           reduce using rule 63 (nodo17 -> .)
    RETURN          reduce using rule 63 (nodo17 -> .)
    WHILE           reduce using rule 63 (nodo17 -> .)
    RCURLY          reduce using rule 63 (nodo17 -> .)

    nodo17                         shift and go to state 227

state 224

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (97) asignacion_type -> . CTEINT
    (98) asignacion_type -> . CTEFLOAT
    (99) asignacion_type -> . CTEINT COMA asignacion_type
    (100) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 228
    CTEFLOAT        shift and go to state 229

    asignacion_type                shift and go to state 230

state 225

    (65) condicion_option -> ELSE . nodo14 bloque
    (68) nodo14 -> .

    LCURLY          reduce using rule 68 (nodo14 -> .)

    nodo14                         shift and go to state 231

state 226

    (64) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (67) nodo15 -> .

    ID              reduce using rule 67 (nodo15 -> .)
    IF              reduce using rule 67 (nodo15 -> .)
    PRINT           reduce using rule 67 (nodo15 -> .)
    RETURN          reduce using rule 67 (nodo15 -> .)
    WHILE           reduce using rule 67 (nodo15 -> .)
    RCURLY          reduce using rule 67 (nodo15 -> .)

    nodo15                         shift and go to state 232

state 227

    (61) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 61 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 61 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 61 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RETURN          reduce using rule 61 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 61 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 61 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 228

    (97) asignacion_type -> CTEINT .
    (99) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 97 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 233


state 229

    (98) asignacion_type -> CTEFLOAT .
    (100) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 98 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 234


state 230

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 235


state 231

    (65) condicion_option -> ELSE nodo14 . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 65

    bloque                         shift and go to state 236

state 232

    (64) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 64 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 64 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 64 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RETURN          reduce using rule 64 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 64 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 64 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 233

    (99) asignacion_type -> CTEINT COMA . asignacion_type
    (97) asignacion_type -> . CTEINT
    (98) asignacion_type -> . CTEFLOAT
    (99) asignacion_type -> . CTEINT COMA asignacion_type
    (100) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 228
    CTEFLOAT        shift and go to state 229

    asignacion_type                shift and go to state 237

state 234

    (100) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (97) asignacion_type -> . CTEINT
    (98) asignacion_type -> . CTEFLOAT
    (99) asignacion_type -> . CTEINT COMA asignacion_type
    (100) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 228
    CTEFLOAT        shift and go to state 229

    asignacion_type                shift and go to state 238

state 235

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 239


state 236

    (65) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 65 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 65 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 65 (condicion_option -> ELSE nodo14 bloque .)
    RETURN          reduce using rule 65 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 65 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 65 (condicion_option -> ELSE nodo14 bloque .)


state 237

    (99) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 99 (asignacion_type -> CTEINT COMA asignacion_type .)


state 238

    (100) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 100 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 239

    (96) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 96 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 96 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 96 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 96 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 96 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 96 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 23 resolved as shift
WARNING: shift/reduce conflict for VAR in state 25 resolved as shift
