Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     nodo18 -> <empty>
Rule 3     addProcDir -> <empty>
Rule 4     addMainProc -> <empty>
Rule 5     programa_var_loop -> variable programa_var_loop
Rule 6     programa_var_loop -> <empty>
Rule 7     programa_func_loop -> funcion programa_func_loop
Rule 8     programa_func_loop -> <empty>
Rule 9     bloque -> LCURLY bloque_est_loop RCURLY
Rule 10    bloque_est_loop -> estatuto bloque_est_loop
Rule 11    bloque_est_loop -> <empty>
Rule 12    tipo -> INTTYPE
Rule 13    tipo -> FLOATTYPE
Rule 14    tipo -> CHARTYPE
Rule 15    tipo -> BOOLTYPE
Rule 16    tipo -> VOIDTYPE
Rule 17    subtipo -> INTTYPE
Rule 18    subtipo -> FLOATTYPE
Rule 19    estatuto -> asignacion
Rule 20    estatuto -> condicion
Rule 21    estatuto -> escritura
Rule 22    estatuto -> regreso
Rule 23    estatuto -> ciclo
Rule 24    estatuto -> llamada
Rule 25    regreso -> RETURN exp SEMICOLON
Rule 26    variable -> VAR variable_loop
Rule 27    variable_loop -> variable_id_loop SEMICOLON variable_end_loop
Rule 28    variable_loop -> variable_arr_loop SEMICOLON variable_end_loop
Rule 29    addType -> <empty>
Rule 30    variable_id_loop -> variable_id_loop_coma COLON tipo addType
Rule 31    variable_id_loop_coma -> ID addDirVarGlobales
Rule 32    variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma
Rule 33    variable_arr_loop -> variable_arr_coma COLON subtipo addType
Rule 34    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET
Rule 35    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
Rule 36    addDirVarGlobales -> <empty>
Rule 37    variable_end_loop -> variable
Rule 38    variable_end_loop -> <empty>
Rule 39    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 40    escritura_type -> expresion
Rule 41    escritura_type -> QUOTE CTECHAR QUOTE
Rule 42    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
Rule 43    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
Rule 44    variable_func -> VAR variable_loop_func
Rule 45    variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func
Rule 46    variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func
Rule 47    variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc
Rule 48    variable_end_loop_func -> variable_func
Rule 49    variable_end_loop_func -> <empty>
Rule 50    variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc
Rule 51    variable_id_loop_coma_func -> ID addDirVarLocalesFunc
Rule 52    variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA variable_id_loop_coma_func
Rule 53    variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET
Rule 54    variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
Rule 55    addProcDirFunc -> <empty>
Rule 56    clearFunc -> <empty>
Rule 57    addProcDirFuncVars -> <empty>
Rule 58    funcion_option -> argumentos
Rule 59    funcion_option -> <empty>
Rule 60    argumentos -> ID addDirVarLocalesFunc COLON tipo addParamFunc argumentos_loop
Rule 61    argumentos_loop -> COMA argumentos
Rule 62    argumentos_loop -> <empty>
Rule 63    addDirVarLocalesFunc -> <empty>
Rule 64    addParamFunc -> <empty>
Rule 65    addTypeFunc -> <empty>
Rule 66    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 67    nodo16 -> <empty>
Rule 68    nodo17 -> <empty>
Rule 69    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 70    condicion_option -> ELSE nodo14 bloque
Rule 71    condicion_option -> <empty>
Rule 72    nodo15 -> <empty>
Rule 73    nodo14 -> <empty>
Rule 74    nodo13 -> <empty>
Rule 75    expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 76    expresion_option -> AND nodo12_and nuevaexp
Rule 77    expresion_option -> OR nodo12_or nuevaexp
Rule 78    expresion_option -> <empty>
Rule 79    expresion_loop -> expresion
Rule 80    expresion_loop -> <empty>
Rule 81    nodo12_and -> <empty>
Rule 82    nodo12_or -> <empty>
Rule 83    nodo11 -> <empty>
Rule 84    nuevaexp -> exp nuevaexp_type nodo10
Rule 85    nuevaexp_type -> LESS nodo9_menor exp
Rule 86    nuevaexp_type -> GREATER nodo9_mayor exp
Rule 87    nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 88    nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 89    nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 90    nuevaexp_type -> EQUAL nodo9_igual exp
Rule 91    nuevaexp_type -> <empty>
Rule 92    nodo10 -> <empty>
Rule 93    nodo9_menor -> <empty>
Rule 94    nodo9_mayor -> <empty>
Rule 95    nodo9_menorig -> <empty>
Rule 96    nodo9_mayorig -> <empty>
Rule 97    nodo9_dif -> <empty>
Rule 98    nodo9_igual -> <empty>
Rule 99    asignacion -> ID asignacion_option
Rule 100   asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 101   asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 102   asignacion_type -> CTEINT
Rule 103   asignacion_type -> CTEFLOAT
Rule 104   asignacion_type -> CTEINT COMA asignacion_type
Rule 105   asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 106   nodo8 -> <empty>
Rule 107   exp -> termino nodo5 exp_loop
Rule 108   exp_loop -> exp_type_loop
Rule 109   exp_loop -> <empty>
Rule 110   exp_type_loop -> ADDITION nodo3_suma exp
Rule 111   exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 112   nodo3_suma -> <empty>
Rule 113   nodo3_resta -> <empty>
Rule 114   nodo5 -> <empty>
Rule 115   termino -> factor nodo4 termino_loop
Rule 116   termino_loop -> termino_type_loop
Rule 117   termino_loop -> <empty>
Rule 118   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 119   termino_type_loop -> DIVISION nodo2_div termino
Rule 120   nodo2_mult -> <empty>
Rule 121   nodo2_div -> <empty>
Rule 122   nodo4 -> <empty>
Rule 123   factor -> factor_var
Rule 124   factor -> factor_exp
Rule 125   factor_var -> varcte nodo1
Rule 126   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 127   nodo1 -> <empty>
Rule 128   nodo6 -> <empty>
Rule 129   nodo7 -> <empty>
Rule 130   varcte -> ID varcte_arr
Rule 131   varcte -> CTEINT nodoCteE
Rule 132   varcte -> CTEFLOAT nodoCteF
Rule 133   varcte -> CTEBOOL nodoCteB
Rule 134   varcte -> CTECHAR nodoCteC
Rule 135   llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON
Rule 136   checkCall -> <empty>
Rule 137   llamada_params -> params
Rule 138   llamada_params -> <empty>
Rule 139   params -> varcte
Rule 140   params -> varcte COMA params
Rule 141   varcte_arr -> LBRACKET RBRACKET
Rule 142   varcte_arr -> <empty>
Rule 143   CTEBOOL -> TRUE
Rule 144   CTEBOOL -> FALSE
Rule 145   nodoCteE -> <empty>
Rule 146   nodoCteF -> <empty>
Rule 147   nodoCteB -> <empty>
Rule 148   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 110
AND                  : 76
ASSIGN               : 100 101
BOOLTYPE             : 15
CHARTYPE             : 14
COLON                : 30 33 47 50 60
COMA                 : 32 35 52 54 61 104 105 140
CTECHAR              : 41 134
CTEFLOAT             : 103 105 132
CTEINT               : 101 102 104 131
DIVISION             : 119
ELSE                 : 70
END                  : 1
EQUAL                : 90
FALSE                : 144
FLOATTYPE            : 13 18
FUNC                 : 42 43
GREATER              : 86
GREATEREQUAL         : 88
ID                   : 1 31 32 34 35 42 43 51 52 53 54 60 99 130 135
IF                   : 69
INTTYPE              : 12 17
LBRACKET             : 34 35 53 54 101 101 141
LCURLY               : 9
LESS                 : 85
LESSEQUAL            : 87
LPARENTHESIS         : 1 39 42 43 66 69 126 135
MAIN                 : 1
MULTIPLICATION       : 118
NOTEQUAL             : 89
OR                   : 77
PRINT                : 39
PROGRAM              : 1
QUOTE                : 41 41
RBRACKET             : 34 35 53 54 101 101 141
RCURLY               : 9
RETURN               : 25
RPARENTHESIS         : 1 39 42 43 66 69 126 135
SEMICOLON            : 1 25 27 28 39 45 46 100 101 135
SUBTRACTION          : 111
TRUE                 : 143
VAR                  : 26 44
VOIDTYPE             : 16
WHILE                : 66
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 133
addDirVarGlobales    : 31 32 34 35
addDirVarLocalesFunc : 51 52 53 54 60
addMainProc          : 1
addParamFunc         : 60
addProcDir           : 1
addProcDirFunc       : 42
addProcDirFuncVars   : 43
addType              : 30 33
addTypeFunc          : 47 50
argumentos           : 58 61
argumentos_loop      : 60
asignacion           : 19
asignacion_option    : 99
asignacion_type      : 101 104 105
bloque               : 1 42 43 66 69 70
bloque_est_loop      : 9 10
checkCall            : 135
ciclo                : 23
clearFunc            : 42 43
condicion            : 20
condicion_option     : 69
escritura            : 21
escritura_type       : 39
estatuto             : 10
exp                  : 25 84 85 86 87 88 89 90 110 111
exp_loop             : 107
exp_type_loop        : 108
expresion            : 40 66 69 79 100 126
expresion_loop       : 75
expresion_option     : 75
factor               : 115
factor_exp           : 124
factor_var           : 123
funcion              : 7
funcion_option       : 42 43
llamada              : 24
llamada_params       : 135
nodo1                : 125
nodo10               : 84
nodo11               : 75
nodo12_and           : 76
nodo12_or            : 77
nodo13               : 66 69
nodo14               : 70
nodo15               : 69
nodo16               : 66
nodo17               : 66
nodo18               : 1
nodo2_div            : 119
nodo2_mult           : 118
nodo3_resta          : 111
nodo3_suma           : 110
nodo4                : 115
nodo5                : 107
nodo6                : 126
nodo7                : 126
nodo8                : 100 101
nodo9_dif            : 89
nodo9_igual          : 90
nodo9_mayor          : 86
nodo9_mayorig        : 88
nodo9_menor          : 85
nodo9_menorig        : 87
nodoCteB             : 133
nodoCteC             : 134
nodoCteE             : 131
nodoCteF             : 132
nuevaexp             : 75 76 77
nuevaexp_type        : 84
params               : 137 140
programa             : 0
programa_func_loop   : 1 7
programa_var_loop    : 1 5
regreso              : 22
subtipo              : 33 50
termino              : 107 118 119
termino_loop         : 115
termino_type_loop    : 116
tipo                 : 30 42 43 47 60
varcte               : 125 139 140
varcte_arr           : 130
variable             : 5 37
variable_arr_coma    : 33 35
variable_arr_coma_func : 50 54
variable_arr_loop    : 28
variable_arr_loop_func : 46
variable_end_loop    : 27 28
variable_end_loop_func : 45 46
variable_func        : 43 48
variable_id_loop     : 27
variable_id_loop_coma : 30 32
variable_id_loop_coma_func : 47 52
variable_id_loop_func : 45
variable_loop        : 26
variable_loop_func   : 44

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (5) programa_var_loop -> . variable programa_var_loop
    (6) programa_var_loop -> .
    (26) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 6 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 6 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 6 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 6 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 6 (programa_var_loop -> .)
    MAIN            reduce using rule 6 (programa_var_loop -> .)
    VAR             shift and go to state 5

    programa_var_loop              shift and go to state 6
    variable                       shift and go to state 7

state 5

    (26) variable -> VAR . variable_loop
    (27) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (28) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (30) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (33) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (31) variable_id_loop_coma -> . ID addDirVarGlobales
    (32) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (34) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (35) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 12

state 6

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop . nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) nodo18 -> .

    INTTYPE         reduce using rule 2 (nodo18 -> .)
    FLOATTYPE       reduce using rule 2 (nodo18 -> .)
    CHARTYPE        reduce using rule 2 (nodo18 -> .)
    BOOLTYPE        reduce using rule 2 (nodo18 -> .)
    VOIDTYPE        reduce using rule 2 (nodo18 -> .)
    MAIN            reduce using rule 2 (nodo18 -> .)

    nodo18                         shift and go to state 14

state 7

    (5) programa_var_loop -> variable . programa_var_loop
    (5) programa_var_loop -> . variable programa_var_loop
    (6) programa_var_loop -> .
    (26) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 6 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 6 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 6 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 6 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 6 (programa_var_loop -> .)
    MAIN            reduce using rule 6 (programa_var_loop -> .)
    VAR             shift and go to state 5

    variable                       shift and go to state 7
    programa_var_loop              shift and go to state 15

state 8

    (28) variable_loop -> variable_arr_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 16


state 9

    (30) variable_id_loop -> variable_id_loop_coma . COLON tipo addType

    COLON           shift and go to state 17


state 10

    (27) variable_loop -> variable_id_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 18


state 11

    (33) variable_arr_loop -> variable_arr_coma . COLON subtipo addType

    COLON           shift and go to state 19


state 12

    (26) variable -> VAR variable_loop .

    VAR             reduce using rule 26 (variable -> VAR variable_loop .)
    INTTYPE         reduce using rule 26 (variable -> VAR variable_loop .)
    FLOATTYPE       reduce using rule 26 (variable -> VAR variable_loop .)
    CHARTYPE        reduce using rule 26 (variable -> VAR variable_loop .)
    BOOLTYPE        reduce using rule 26 (variable -> VAR variable_loop .)
    VOIDTYPE        reduce using rule 26 (variable -> VAR variable_loop .)
    MAIN            reduce using rule 26 (variable -> VAR variable_loop .)


state 13

    (31) variable_id_loop_coma -> ID . addDirVarGlobales
    (32) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (34) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (35) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (36) addDirVarGlobales -> .

    COMA            reduce using rule 36 (addDirVarGlobales -> .)
    LBRACKET        reduce using rule 36 (addDirVarGlobales -> .)
    COLON           reduce using rule 36 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 20

state 14

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 . programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (7) programa_func_loop -> . funcion programa_func_loop
    (8) programa_func_loop -> .
    (42) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    MAIN            reduce using rule 8 (programa_func_loop -> .)
    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 21
    programa_func_loop             shift and go to state 28
    funcion                        shift and go to state 23

state 15

    (5) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)


state 16

    (28) variable_loop -> variable_arr_loop SEMICOLON . variable_end_loop
    (37) variable_end_loop -> . variable
    (38) variable_end_loop -> .
    (26) variable -> . VAR variable_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 38 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 38 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 38 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 38 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 38 (variable_end_loop -> .)
    MAIN            reduce using rule 38 (variable_end_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 38 (variable_end_loop -> .) ]

    variable                       shift and go to state 30
    variable_end_loop              shift and go to state 29

state 17

    (30) variable_id_loop -> variable_id_loop_coma COLON . tipo addType
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 31

state 18

    (27) variable_loop -> variable_id_loop SEMICOLON . variable_end_loop
    (37) variable_end_loop -> . variable
    (38) variable_end_loop -> .
    (26) variable -> . VAR variable_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 38 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 38 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 38 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 38 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 38 (variable_end_loop -> .)
    MAIN            reduce using rule 38 (variable_end_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 38 (variable_end_loop -> .) ]

    variable                       shift and go to state 30
    variable_end_loop              shift and go to state 32

state 19

    (33) variable_arr_loop -> variable_arr_coma COLON . subtipo addType
    (17) subtipo -> . INTTYPE
    (18) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 33
    FLOATTYPE       shift and go to state 34

    subtipo                        shift and go to state 35

state 20

    (31) variable_id_loop_coma -> ID addDirVarGlobales .
    (32) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma
    (34) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (35) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    COLON           reduce using rule 31 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 37
    LBRACKET        shift and go to state 36


state 21

    (42) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    FUNC            shift and go to state 38


state 22

    (16) tipo -> VOIDTYPE .

    FUNC            reduce using rule 16 (tipo -> VOIDTYPE .)
    COMA            reduce using rule 16 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 16 (tipo -> VOIDTYPE .)
    SEMICOLON       reduce using rule 16 (tipo -> VOIDTYPE .)


state 23

    (7) programa_func_loop -> funcion . programa_func_loop
    (7) programa_func_loop -> . funcion programa_func_loop
    (8) programa_func_loop -> .
    (42) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    MAIN            reduce using rule 8 (programa_func_loop -> .)
    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 21
    programa_func_loop             shift and go to state 39
    funcion                        shift and go to state 23

state 24

    (15) tipo -> BOOLTYPE .

    FUNC            reduce using rule 15 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 15 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> BOOLTYPE .)
    SEMICOLON       reduce using rule 15 (tipo -> BOOLTYPE .)


state 25

    (13) tipo -> FLOATTYPE .

    FUNC            reduce using rule 13 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 13 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> FLOATTYPE .)
    SEMICOLON       reduce using rule 13 (tipo -> FLOATTYPE .)


state 26

    (12) tipo -> INTTYPE .

    FUNC            reduce using rule 12 (tipo -> INTTYPE .)
    COMA            reduce using rule 12 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> INTTYPE .)
    SEMICOLON       reduce using rule 12 (tipo -> INTTYPE .)


state 27

    (14) tipo -> CHARTYPE .

    FUNC            reduce using rule 14 (tipo -> CHARTYPE .)
    COMA            reduce using rule 14 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> CHARTYPE .)
    SEMICOLON       reduce using rule 14 (tipo -> CHARTYPE .)


state 28

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop . addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addProcDir -> .

    MAIN            reduce using rule 3 (addProcDir -> .)

    addProcDir                     shift and go to state 40

state 29

    (28) variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 28 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)


state 30

    (37) variable_end_loop -> variable .

    VAR             reduce using rule 37 (variable_end_loop -> variable .)
    INTTYPE         reduce using rule 37 (variable_end_loop -> variable .)
    FLOATTYPE       reduce using rule 37 (variable_end_loop -> variable .)
    CHARTYPE        reduce using rule 37 (variable_end_loop -> variable .)
    BOOLTYPE        reduce using rule 37 (variable_end_loop -> variable .)
    VOIDTYPE        reduce using rule 37 (variable_end_loop -> variable .)
    MAIN            reduce using rule 37 (variable_end_loop -> variable .)


state 31

    (30) variable_id_loop -> variable_id_loop_coma COLON tipo . addType
    (29) addType -> .

    SEMICOLON       reduce using rule 29 (addType -> .)

    addType                        shift and go to state 41

state 32

    (27) variable_loop -> variable_id_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 27 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)


state 33

    (17) subtipo -> INTTYPE .

    SEMICOLON       reduce using rule 17 (subtipo -> INTTYPE .)


state 34

    (18) subtipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 18 (subtipo -> FLOATTYPE .)


state 35

    (33) variable_arr_loop -> variable_arr_coma COLON subtipo . addType
    (29) addType -> .

    SEMICOLON       reduce using rule 29 (addType -> .)

    addType                        shift and go to state 42

state 36

    (34) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET
    (35) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET COMA variable_arr_coma

    RBRACKET        shift and go to state 43


state 37

    (32) variable_id_loop_coma -> ID addDirVarGlobales COMA . variable_id_loop_coma
    (31) variable_id_loop_coma -> . ID addDirVarGlobales
    (32) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma

    ID              shift and go to state 44

    variable_id_loop_coma          shift and go to state 45

state 38

    (42) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    ID              shift and go to state 46


state 39

    (7) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 7 (programa_func_loop -> funcion programa_func_loop .)


state 40

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 47


state 41

    (30) variable_id_loop -> variable_id_loop_coma COLON tipo addType .

    SEMICOLON       reduce using rule 30 (variable_id_loop -> variable_id_loop_coma COLON tipo addType .)


state 42

    (33) variable_arr_loop -> variable_arr_coma COLON subtipo addType .

    SEMICOLON       reduce using rule 33 (variable_arr_loop -> variable_arr_coma COLON subtipo addType .)


state 43

    (34) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .
    (35) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET . COMA variable_arr_coma

    COLON           reduce using rule 34 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .)
    COMA            shift and go to state 48


state 44

    (31) variable_id_loop_coma -> ID . addDirVarGlobales
    (32) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (36) addDirVarGlobales -> .

    COMA            reduce using rule 36 (addDirVarGlobales -> .)
    COLON           reduce using rule 36 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 49

state 45

    (32) variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .

    COLON           reduce using rule 32 (variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .)


state 46

    (42) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    LPARENTHESIS    shift and go to state 50


state 47

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) addMainProc -> .

    LPARENTHESIS    reduce using rule 4 (addMainProc -> .)

    addMainProc                    shift and go to state 51

state 48

    (35) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA . variable_arr_coma
    (34) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (35) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 53

    variable_arr_coma              shift and go to state 52

state 49

    (31) variable_id_loop_coma -> ID addDirVarGlobales .
    (32) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma

    COLON           reduce using rule 31 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 37


state 50

    (42) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
    (58) funcion_option -> . argumentos
    (59) funcion_option -> .
    (60) argumentos -> . ID addDirVarLocalesFunc COLON tipo addParamFunc argumentos_loop

    RPARENTHESIS    reduce using rule 59 (funcion_option -> .)
    ID              shift and go to state 56

    funcion_option                 shift and go to state 54
    argumentos                     shift and go to state 55

state 51

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 57


state 52

    (35) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .

    COLON           reduce using rule 35 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .)


state 53

    (34) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (35) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (36) addDirVarGlobales -> .

    LBRACKET        reduce using rule 36 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 58

state 54

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS addProcDirFunc bloque clearFunc
    (43) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    RPARENTHESIS    shift and go to state 59


state 55

    (58) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 58 (funcion_option -> argumentos .)


state 56

    (60) argumentos -> ID . addDirVarLocalesFunc COLON tipo addParamFunc argumentos_loop
    (63) addDirVarLocalesFunc -> .

    COLON           reduce using rule 63 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 60

state 57

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 61


state 58

    (34) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (35) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    LBRACKET        shift and go to state 36


state 59

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . addProcDirFunc bloque clearFunc
    (43) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . variable_func addProcDirFuncVars bloque clearFunc
    (55) addProcDirFunc -> .
    (44) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 55 (addProcDirFunc -> .)
    VAR             shift and go to state 63

    addProcDirFunc                 shift and go to state 62
    variable_func                  shift and go to state 64

state 60

    (60) argumentos -> ID addDirVarLocalesFunc . COLON tipo addParamFunc argumentos_loop

    COLON           shift and go to state 65


state 61

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 67

state 62

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc . bloque clearFunc
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 68

state 63

    (44) variable_func -> VAR . variable_loop_func
    (45) variable_loop_func -> . variable_id_loop_func SEMICOLON variable_end_loop_func
    (46) variable_loop_func -> . variable_arr_loop_func SEMICOLON variable_end_loop_func
    (47) variable_id_loop_func -> . variable_id_loop_coma_func COLON tipo addTypeFunc
    (50) variable_arr_loop_func -> . variable_arr_coma_func COLON subtipo addTypeFunc
    (51) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc
    (52) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc COMA variable_id_loop_coma_func
    (53) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET
    (54) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func

    ID              shift and go to state 73

    variable_id_loop_func          shift and go to state 69
    variable_id_loop_coma_func     shift and go to state 70
    variable_arr_loop_func         shift and go to state 71
    variable_loop_func             shift and go to state 72
    variable_arr_coma_func         shift and go to state 74

state 64

    (43) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func . addProcDirFuncVars bloque clearFunc
    (57) addProcDirFuncVars -> .

    LCURLY          reduce using rule 57 (addProcDirFuncVars -> .)

    addProcDirFuncVars             shift and go to state 75

state 65

    (60) argumentos -> ID addDirVarLocalesFunc COLON . tipo addParamFunc argumentos_loop
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 76

state 66

    (9) bloque -> LCURLY . bloque_est_loop RCURLY
    (10) bloque_est_loop -> . estatuto bloque_est_loop
    (11) bloque_est_loop -> .
    (19) estatuto -> . asignacion
    (20) estatuto -> . condicion
    (21) estatuto -> . escritura
    (22) estatuto -> . regreso
    (23) estatuto -> . ciclo
    (24) estatuto -> . llamada
    (99) asignacion -> . ID asignacion_option
    (69) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (39) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (25) regreso -> . RETURN exp SEMICOLON
    (66) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (135) llamada -> . ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON

    RCURLY          reduce using rule 11 (bloque_est_loop -> .)
    ID              shift and go to state 84
    IF              shift and go to state 85
    PRINT           shift and go to state 79
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78

    regreso                        shift and go to state 86
    ciclo                          shift and go to state 80
    asignacion                     shift and go to state 87
    estatuto                       shift and go to state 81
    llamada                        shift and go to state 82
    condicion                      shift and go to state 83
    bloque_est_loop                shift and go to state 88
    escritura                      shift and go to state 89

state 67

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 90


state 68

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque . clearFunc
    (56) clearFunc -> .

    INTTYPE         reduce using rule 56 (clearFunc -> .)
    FLOATTYPE       reduce using rule 56 (clearFunc -> .)
    CHARTYPE        reduce using rule 56 (clearFunc -> .)
    BOOLTYPE        reduce using rule 56 (clearFunc -> .)
    VOIDTYPE        reduce using rule 56 (clearFunc -> .)
    MAIN            reduce using rule 56 (clearFunc -> .)

    clearFunc                      shift and go to state 91

state 69

    (45) variable_loop_func -> variable_id_loop_func . SEMICOLON variable_end_loop_func

    SEMICOLON       shift and go to state 92


state 70

    (47) variable_id_loop_func -> variable_id_loop_coma_func . COLON tipo addTypeFunc

    COLON           shift and go to state 93


state 71

    (46) variable_loop_func -> variable_arr_loop_func . SEMICOLON variable_end_loop_func

    SEMICOLON       shift and go to state 94


state 72

    (44) variable_func -> VAR variable_loop_func .

    LCURLY          reduce using rule 44 (variable_func -> VAR variable_loop_func .)


state 73

    (51) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc
    (52) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc COMA variable_id_loop_coma_func
    (53) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET
    (54) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
    (63) addDirVarLocalesFunc -> .

    COMA            reduce using rule 63 (addDirVarLocalesFunc -> .)
    LBRACKET        reduce using rule 63 (addDirVarLocalesFunc -> .)
    COLON           reduce using rule 63 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 95

state 74

    (50) variable_arr_loop_func -> variable_arr_coma_func . COLON subtipo addTypeFunc

    COLON           shift and go to state 96


state 75

    (43) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars . bloque clearFunc
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 97

state 76

    (60) argumentos -> ID addDirVarLocalesFunc COLON tipo . addParamFunc argumentos_loop
    (64) addParamFunc -> .

    COMA            reduce using rule 64 (addParamFunc -> .)
    RPARENTHESIS    reduce using rule 64 (addParamFunc -> .)

    addParamFunc                   shift and go to state 98

state 77

    (25) regreso -> RETURN . exp SEMICOLON
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 110
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 78

    (66) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 113


state 79

    (39) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 114


state 80

    (23) estatuto -> ciclo .

    ID              reduce using rule 23 (estatuto -> ciclo .)
    IF              reduce using rule 23 (estatuto -> ciclo .)
    PRINT           reduce using rule 23 (estatuto -> ciclo .)
    RETURN          reduce using rule 23 (estatuto -> ciclo .)
    WHILE           reduce using rule 23 (estatuto -> ciclo .)
    RCURLY          reduce using rule 23 (estatuto -> ciclo .)


state 81

    (10) bloque_est_loop -> estatuto . bloque_est_loop
    (10) bloque_est_loop -> . estatuto bloque_est_loop
    (11) bloque_est_loop -> .
    (19) estatuto -> . asignacion
    (20) estatuto -> . condicion
    (21) estatuto -> . escritura
    (22) estatuto -> . regreso
    (23) estatuto -> . ciclo
    (24) estatuto -> . llamada
    (99) asignacion -> . ID asignacion_option
    (69) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (39) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (25) regreso -> . RETURN exp SEMICOLON
    (66) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (135) llamada -> . ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON

    RCURLY          reduce using rule 11 (bloque_est_loop -> .)
    ID              shift and go to state 84
    IF              shift and go to state 85
    PRINT           shift and go to state 79
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78

    regreso                        shift and go to state 86
    ciclo                          shift and go to state 80
    asignacion                     shift and go to state 87
    estatuto                       shift and go to state 81
    llamada                        shift and go to state 82
    condicion                      shift and go to state 83
    bloque_est_loop                shift and go to state 115
    escritura                      shift and go to state 89

state 82

    (24) estatuto -> llamada .

    ID              reduce using rule 24 (estatuto -> llamada .)
    IF              reduce using rule 24 (estatuto -> llamada .)
    PRINT           reduce using rule 24 (estatuto -> llamada .)
    RETURN          reduce using rule 24 (estatuto -> llamada .)
    WHILE           reduce using rule 24 (estatuto -> llamada .)
    RCURLY          reduce using rule 24 (estatuto -> llamada .)


state 83

    (20) estatuto -> condicion .

    ID              reduce using rule 20 (estatuto -> condicion .)
    IF              reduce using rule 20 (estatuto -> condicion .)
    PRINT           reduce using rule 20 (estatuto -> condicion .)
    RETURN          reduce using rule 20 (estatuto -> condicion .)
    WHILE           reduce using rule 20 (estatuto -> condicion .)
    RCURLY          reduce using rule 20 (estatuto -> condicion .)


state 84

    (99) asignacion -> ID . asignacion_option
    (135) llamada -> ID . checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON
    (100) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (101) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (136) checkCall -> .

    ASSIGN          shift and go to state 118
    LBRACKET        shift and go to state 119
    LPARENTHESIS    reduce using rule 136 (checkCall -> .)

    asignacion_option              shift and go to state 116
    checkCall                      shift and go to state 117

state 85

    (69) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 120


state 86

    (22) estatuto -> regreso .

    ID              reduce using rule 22 (estatuto -> regreso .)
    IF              reduce using rule 22 (estatuto -> regreso .)
    PRINT           reduce using rule 22 (estatuto -> regreso .)
    RETURN          reduce using rule 22 (estatuto -> regreso .)
    WHILE           reduce using rule 22 (estatuto -> regreso .)
    RCURLY          reduce using rule 22 (estatuto -> regreso .)


state 87

    (19) estatuto -> asignacion .

    ID              reduce using rule 19 (estatuto -> asignacion .)
    IF              reduce using rule 19 (estatuto -> asignacion .)
    PRINT           reduce using rule 19 (estatuto -> asignacion .)
    RETURN          reduce using rule 19 (estatuto -> asignacion .)
    WHILE           reduce using rule 19 (estatuto -> asignacion .)
    RCURLY          reduce using rule 19 (estatuto -> asignacion .)


state 88

    (9) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 121


state 89

    (21) estatuto -> escritura .

    ID              reduce using rule 21 (estatuto -> escritura .)
    IF              reduce using rule 21 (estatuto -> escritura .)
    PRINT           reduce using rule 21 (estatuto -> escritura .)
    RETURN          reduce using rule 21 (estatuto -> escritura .)
    WHILE           reduce using rule 21 (estatuto -> escritura .)
    RCURLY          reduce using rule 21 (estatuto -> escritura .)


state 90

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 91

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .

    INTTYPE         reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    FLOATTYPE       reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    CHARTYPE        reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    BOOLTYPE        reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    VOIDTYPE        reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    MAIN            reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)


state 92

    (45) variable_loop_func -> variable_id_loop_func SEMICOLON . variable_end_loop_func
    (48) variable_end_loop_func -> . variable_func
    (49) variable_end_loop_func -> .
    (44) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 49 (variable_end_loop_func -> .)
    VAR             shift and go to state 63

    variable_func                  shift and go to state 123
    variable_end_loop_func         shift and go to state 122

state 93

    (47) variable_id_loop_func -> variable_id_loop_coma_func COLON . tipo addTypeFunc
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 124

state 94

    (46) variable_loop_func -> variable_arr_loop_func SEMICOLON . variable_end_loop_func
    (48) variable_end_loop_func -> . variable_func
    (49) variable_end_loop_func -> .
    (44) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 49 (variable_end_loop_func -> .)
    VAR             shift and go to state 63

    variable_func                  shift and go to state 123
    variable_end_loop_func         shift and go to state 125

state 95

    (51) variable_id_loop_coma_func -> ID addDirVarLocalesFunc .
    (52) variable_id_loop_coma_func -> ID addDirVarLocalesFunc . COMA variable_id_loop_coma_func
    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET
    (54) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET COMA variable_arr_coma_func

    COLON           reduce using rule 51 (variable_id_loop_coma_func -> ID addDirVarLocalesFunc .)
    COMA            shift and go to state 127
    LBRACKET        shift and go to state 126


state 96

    (50) variable_arr_loop_func -> variable_arr_coma_func COLON . subtipo addTypeFunc
    (17) subtipo -> . INTTYPE
    (18) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 33
    FLOATTYPE       shift and go to state 34

    subtipo                        shift and go to state 128

state 97

    (43) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque . clearFunc
    (56) clearFunc -> .

    INTTYPE         reduce using rule 56 (clearFunc -> .)
    FLOATTYPE       reduce using rule 56 (clearFunc -> .)
    CHARTYPE        reduce using rule 56 (clearFunc -> .)
    BOOLTYPE        reduce using rule 56 (clearFunc -> .)
    VOIDTYPE        reduce using rule 56 (clearFunc -> .)
    MAIN            reduce using rule 56 (clearFunc -> .)

    clearFunc                      shift and go to state 129

state 98

    (60) argumentos -> ID addDirVarLocalesFunc COLON tipo addParamFunc . argumentos_loop
    (61) argumentos_loop -> . COMA argumentos
    (62) argumentos_loop -> .

    COMA            shift and go to state 131
    RPARENTHESIS    reduce using rule 62 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 130

state 99

    (134) varcte -> CTECHAR . nodoCteC
    (148) nodoCteC -> .

    MULTIPLICATION  reduce using rule 148 (nodoCteC -> .)
    DIVISION        reduce using rule 148 (nodoCteC -> .)
    ADDITION        reduce using rule 148 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 148 (nodoCteC -> .)
    SEMICOLON       reduce using rule 148 (nodoCteC -> .)
    LESS            reduce using rule 148 (nodoCteC -> .)
    GREATER         reduce using rule 148 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 148 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 148 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 148 (nodoCteC -> .)
    EQUAL           reduce using rule 148 (nodoCteC -> .)
    AND             reduce using rule 148 (nodoCteC -> .)
    OR              reduce using rule 148 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 148 (nodoCteC -> .)
    ID              reduce using rule 148 (nodoCteC -> .)
    CTEINT          reduce using rule 148 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 148 (nodoCteC -> .)
    CTECHAR         reduce using rule 148 (nodoCteC -> .)
    TRUE            reduce using rule 148 (nodoCteC -> .)
    FALSE           reduce using rule 148 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 148 (nodoCteC -> .)
    COMA            reduce using rule 148 (nodoCteC -> .)

    nodoCteC                       shift and go to state 132

state 100

    (143) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 143 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 143 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 143 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 143 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 143 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 143 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 143 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 143 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 143 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 143 (CTEBOOL -> TRUE .)
    AND             reduce using rule 143 (CTEBOOL -> TRUE .)
    OR              reduce using rule 143 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 143 (CTEBOOL -> TRUE .)
    ID              reduce using rule 143 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 143 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 143 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 143 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 143 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 143 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 143 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 143 (CTEBOOL -> TRUE .)
    COMA            reduce using rule 143 (CTEBOOL -> TRUE .)


state 101

    (125) factor_var -> varcte . nodo1
    (127) nodo1 -> .

    MULTIPLICATION  reduce using rule 127 (nodo1 -> .)
    DIVISION        reduce using rule 127 (nodo1 -> .)
    ADDITION        reduce using rule 127 (nodo1 -> .)
    SUBTRACTION     reduce using rule 127 (nodo1 -> .)
    SEMICOLON       reduce using rule 127 (nodo1 -> .)
    LESS            reduce using rule 127 (nodo1 -> .)
    GREATER         reduce using rule 127 (nodo1 -> .)
    LESSEQUAL       reduce using rule 127 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 127 (nodo1 -> .)
    NOTEQUAL        reduce using rule 127 (nodo1 -> .)
    EQUAL           reduce using rule 127 (nodo1 -> .)
    AND             reduce using rule 127 (nodo1 -> .)
    OR              reduce using rule 127 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 127 (nodo1 -> .)
    ID              reduce using rule 127 (nodo1 -> .)
    CTEINT          reduce using rule 127 (nodo1 -> .)
    CTEFLOAT        reduce using rule 127 (nodo1 -> .)
    CTECHAR         reduce using rule 127 (nodo1 -> .)
    TRUE            reduce using rule 127 (nodo1 -> .)
    FALSE           reduce using rule 127 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 127 (nodo1 -> .)

    nodo1                          shift and go to state 133

state 102

    (132) varcte -> CTEFLOAT . nodoCteF
    (146) nodoCteF -> .

    MULTIPLICATION  reduce using rule 146 (nodoCteF -> .)
    DIVISION        reduce using rule 146 (nodoCteF -> .)
    ADDITION        reduce using rule 146 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 146 (nodoCteF -> .)
    SEMICOLON       reduce using rule 146 (nodoCteF -> .)
    LESS            reduce using rule 146 (nodoCteF -> .)
    GREATER         reduce using rule 146 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 146 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 146 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 146 (nodoCteF -> .)
    EQUAL           reduce using rule 146 (nodoCteF -> .)
    AND             reduce using rule 146 (nodoCteF -> .)
    OR              reduce using rule 146 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 146 (nodoCteF -> .)
    ID              reduce using rule 146 (nodoCteF -> .)
    CTEINT          reduce using rule 146 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 146 (nodoCteF -> .)
    CTECHAR         reduce using rule 146 (nodoCteF -> .)
    TRUE            reduce using rule 146 (nodoCteF -> .)
    FALSE           reduce using rule 146 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 146 (nodoCteF -> .)
    COMA            reduce using rule 146 (nodoCteF -> .)

    nodoCteF                       shift and go to state 134

state 103

    (115) termino -> factor . nodo4 termino_loop
    (122) nodo4 -> .

    MULTIPLICATION  reduce using rule 122 (nodo4 -> .)
    DIVISION        reduce using rule 122 (nodo4 -> .)
    ADDITION        reduce using rule 122 (nodo4 -> .)
    SUBTRACTION     reduce using rule 122 (nodo4 -> .)
    SEMICOLON       reduce using rule 122 (nodo4 -> .)
    LESS            reduce using rule 122 (nodo4 -> .)
    GREATER         reduce using rule 122 (nodo4 -> .)
    LESSEQUAL       reduce using rule 122 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 122 (nodo4 -> .)
    NOTEQUAL        reduce using rule 122 (nodo4 -> .)
    EQUAL           reduce using rule 122 (nodo4 -> .)
    AND             reduce using rule 122 (nodo4 -> .)
    OR              reduce using rule 122 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 122 (nodo4 -> .)
    ID              reduce using rule 122 (nodo4 -> .)
    CTEINT          reduce using rule 122 (nodo4 -> .)
    CTEFLOAT        reduce using rule 122 (nodo4 -> .)
    CTECHAR         reduce using rule 122 (nodo4 -> .)
    TRUE            reduce using rule 122 (nodo4 -> .)
    FALSE           reduce using rule 122 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 122 (nodo4 -> .)

    nodo4                          shift and go to state 135

state 104

    (124) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 124 (factor -> factor_exp .)
    DIVISION        reduce using rule 124 (factor -> factor_exp .)
    ADDITION        reduce using rule 124 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 124 (factor -> factor_exp .)
    LESS            reduce using rule 124 (factor -> factor_exp .)
    GREATER         reduce using rule 124 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 124 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 124 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 124 (factor -> factor_exp .)
    EQUAL           reduce using rule 124 (factor -> factor_exp .)
    AND             reduce using rule 124 (factor -> factor_exp .)
    OR              reduce using rule 124 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 124 (factor -> factor_exp .)
    ID              reduce using rule 124 (factor -> factor_exp .)
    CTEINT          reduce using rule 124 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 124 (factor -> factor_exp .)
    CTECHAR         reduce using rule 124 (factor -> factor_exp .)
    TRUE            reduce using rule 124 (factor -> factor_exp .)
    FALSE           reduce using rule 124 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 124 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 124 (factor -> factor_exp .)


state 105

    (131) varcte -> CTEINT . nodoCteE
    (145) nodoCteE -> .

    MULTIPLICATION  reduce using rule 145 (nodoCteE -> .)
    DIVISION        reduce using rule 145 (nodoCteE -> .)
    ADDITION        reduce using rule 145 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 145 (nodoCteE -> .)
    SEMICOLON       reduce using rule 145 (nodoCteE -> .)
    LESS            reduce using rule 145 (nodoCteE -> .)
    GREATER         reduce using rule 145 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 145 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 145 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 145 (nodoCteE -> .)
    EQUAL           reduce using rule 145 (nodoCteE -> .)
    AND             reduce using rule 145 (nodoCteE -> .)
    OR              reduce using rule 145 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 145 (nodoCteE -> .)
    ID              reduce using rule 145 (nodoCteE -> .)
    CTEINT          reduce using rule 145 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 145 (nodoCteE -> .)
    CTECHAR         reduce using rule 145 (nodoCteE -> .)
    TRUE            reduce using rule 145 (nodoCteE -> .)
    FALSE           reduce using rule 145 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 145 (nodoCteE -> .)
    COMA            reduce using rule 145 (nodoCteE -> .)

    nodoCteE                       shift and go to state 136

state 106

    (126) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (128) nodo6 -> .

    LPARENTHESIS    reduce using rule 128 (nodo6 -> .)
    ID              reduce using rule 128 (nodo6 -> .)
    CTEINT          reduce using rule 128 (nodo6 -> .)
    CTEFLOAT        reduce using rule 128 (nodo6 -> .)
    CTECHAR         reduce using rule 128 (nodo6 -> .)
    TRUE            reduce using rule 128 (nodo6 -> .)
    FALSE           reduce using rule 128 (nodo6 -> .)

    nodo6                          shift and go to state 137

state 107

    (130) varcte -> ID . varcte_arr
    (141) varcte_arr -> . LBRACKET RBRACKET
    (142) varcte_arr -> .

    LBRACKET        shift and go to state 138
    MULTIPLICATION  reduce using rule 142 (varcte_arr -> .)
    DIVISION        reduce using rule 142 (varcte_arr -> .)
    ADDITION        reduce using rule 142 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 142 (varcte_arr -> .)
    SEMICOLON       reduce using rule 142 (varcte_arr -> .)
    LESS            reduce using rule 142 (varcte_arr -> .)
    GREATER         reduce using rule 142 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 142 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 142 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 142 (varcte_arr -> .)
    EQUAL           reduce using rule 142 (varcte_arr -> .)
    AND             reduce using rule 142 (varcte_arr -> .)
    OR              reduce using rule 142 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 142 (varcte_arr -> .)
    ID              reduce using rule 142 (varcte_arr -> .)
    CTEINT          reduce using rule 142 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 142 (varcte_arr -> .)
    CTECHAR         reduce using rule 142 (varcte_arr -> .)
    TRUE            reduce using rule 142 (varcte_arr -> .)
    FALSE           reduce using rule 142 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 142 (varcte_arr -> .)
    COMA            reduce using rule 142 (varcte_arr -> .)

    varcte_arr                     shift and go to state 139

state 108

    (144) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 144 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 144 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 144 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 144 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 144 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 144 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 144 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 144 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 144 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 144 (CTEBOOL -> FALSE .)
    AND             reduce using rule 144 (CTEBOOL -> FALSE .)
    OR              reduce using rule 144 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 144 (CTEBOOL -> FALSE .)
    ID              reduce using rule 144 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 144 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 144 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 144 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 144 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 144 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 144 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 144 (CTEBOOL -> FALSE .)
    COMA            reduce using rule 144 (CTEBOOL -> FALSE .)


state 109

    (133) varcte -> CTEBOOL . nodoCteB
    (147) nodoCteB -> .

    MULTIPLICATION  reduce using rule 147 (nodoCteB -> .)
    DIVISION        reduce using rule 147 (nodoCteB -> .)
    ADDITION        reduce using rule 147 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 147 (nodoCteB -> .)
    SEMICOLON       reduce using rule 147 (nodoCteB -> .)
    LESS            reduce using rule 147 (nodoCteB -> .)
    GREATER         reduce using rule 147 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 147 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 147 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 147 (nodoCteB -> .)
    EQUAL           reduce using rule 147 (nodoCteB -> .)
    AND             reduce using rule 147 (nodoCteB -> .)
    OR              reduce using rule 147 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 147 (nodoCteB -> .)
    ID              reduce using rule 147 (nodoCteB -> .)
    CTEINT          reduce using rule 147 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 147 (nodoCteB -> .)
    CTECHAR         reduce using rule 147 (nodoCteB -> .)
    TRUE            reduce using rule 147 (nodoCteB -> .)
    FALSE           reduce using rule 147 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 147 (nodoCteB -> .)
    COMA            reduce using rule 147 (nodoCteB -> .)

    nodoCteB                       shift and go to state 140

state 110

    (25) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 141


state 111

    (123) factor -> factor_var .

    MULTIPLICATION  reduce using rule 123 (factor -> factor_var .)
    DIVISION        reduce using rule 123 (factor -> factor_var .)
    ADDITION        reduce using rule 123 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 123 (factor -> factor_var .)
    LESS            reduce using rule 123 (factor -> factor_var .)
    GREATER         reduce using rule 123 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 123 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 123 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 123 (factor -> factor_var .)
    EQUAL           reduce using rule 123 (factor -> factor_var .)
    AND             reduce using rule 123 (factor -> factor_var .)
    OR              reduce using rule 123 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 123 (factor -> factor_var .)
    ID              reduce using rule 123 (factor -> factor_var .)
    CTEINT          reduce using rule 123 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 123 (factor -> factor_var .)
    CTECHAR         reduce using rule 123 (factor -> factor_var .)
    TRUE            reduce using rule 123 (factor -> factor_var .)
    FALSE           reduce using rule 123 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 123 (factor -> factor_var .)
    SEMICOLON       reduce using rule 123 (factor -> factor_var .)


state 112

    (107) exp -> termino . nodo5 exp_loop
    (114) nodo5 -> .

    ADDITION        reduce using rule 114 (nodo5 -> .)
    SUBTRACTION     reduce using rule 114 (nodo5 -> .)
    SEMICOLON       reduce using rule 114 (nodo5 -> .)
    LESS            reduce using rule 114 (nodo5 -> .)
    GREATER         reduce using rule 114 (nodo5 -> .)
    LESSEQUAL       reduce using rule 114 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 114 (nodo5 -> .)
    NOTEQUAL        reduce using rule 114 (nodo5 -> .)
    EQUAL           reduce using rule 114 (nodo5 -> .)
    AND             reduce using rule 114 (nodo5 -> .)
    OR              reduce using rule 114 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 114 (nodo5 -> .)
    ID              reduce using rule 114 (nodo5 -> .)
    CTEINT          reduce using rule 114 (nodo5 -> .)
    CTEFLOAT        reduce using rule 114 (nodo5 -> .)
    CTECHAR         reduce using rule 114 (nodo5 -> .)
    TRUE            reduce using rule 114 (nodo5 -> .)
    FALSE           reduce using rule 114 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 114 (nodo5 -> .)

    nodo5                          shift and go to state 142

state 113

    (66) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (67) nodo16 -> .

    LPARENTHESIS    reduce using rule 67 (nodo16 -> .)
    ID              reduce using rule 67 (nodo16 -> .)
    CTEINT          reduce using rule 67 (nodo16 -> .)
    CTEFLOAT        reduce using rule 67 (nodo16 -> .)
    CTECHAR         reduce using rule 67 (nodo16 -> .)
    TRUE            reduce using rule 67 (nodo16 -> .)
    FALSE           reduce using rule 67 (nodo16 -> .)

    nodo16                         shift and go to state 143

state 114

    (39) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (40) escritura_type -> . expresion
    (41) escritura_type -> . QUOTE CTECHAR QUOTE
    (75) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 144
    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    escritura_type                 shift and go to state 145
    nuevaexp                       shift and go to state 146
    expresion                      shift and go to state 147
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 115

    (10) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 10 (bloque_est_loop -> estatuto bloque_est_loop .)


state 116

    (99) asignacion -> ID asignacion_option .

    ID              reduce using rule 99 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 99 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 99 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 99 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 99 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 99 (asignacion -> ID asignacion_option .)


state 117

    (135) llamada -> ID checkCall . LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 149


state 118

    (100) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (75) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 146
    expresion                      shift and go to state 150
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 119

    (101) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 151


state 120

    (69) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (75) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 146
    expresion                      shift and go to state 152
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 121

    (9) bloque -> LCURLY bloque_est_loop RCURLY .

    ID              reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 122

    (45) variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func .

    LCURLY          reduce using rule 45 (variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func .)


state 123

    (48) variable_end_loop_func -> variable_func .

    LCURLY          reduce using rule 48 (variable_end_loop_func -> variable_func .)


state 124

    (47) variable_id_loop_func -> variable_id_loop_coma_func COLON tipo . addTypeFunc
    (65) addTypeFunc -> .

    SEMICOLON       reduce using rule 65 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 153

state 125

    (46) variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func .

    LCURLY          reduce using rule 46 (variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func .)


state 126

    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET . RBRACKET
    (54) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET . RBRACKET COMA variable_arr_coma_func

    RBRACKET        shift and go to state 154


state 127

    (52) variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA . variable_id_loop_coma_func
    (51) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc
    (52) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc COMA variable_id_loop_coma_func

    ID              shift and go to state 155

    variable_id_loop_coma_func     shift and go to state 156

state 128

    (50) variable_arr_loop_func -> variable_arr_coma_func COLON subtipo . addTypeFunc
    (65) addTypeFunc -> .

    SEMICOLON       reduce using rule 65 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 157

state 129

    (43) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .

    INTTYPE         reduce using rule 43 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    FLOATTYPE       reduce using rule 43 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    CHARTYPE        reduce using rule 43 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    BOOLTYPE        reduce using rule 43 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    VOIDTYPE        reduce using rule 43 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    MAIN            reduce using rule 43 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)


state 130

    (60) argumentos -> ID addDirVarLocalesFunc COLON tipo addParamFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 60 (argumentos -> ID addDirVarLocalesFunc COLON tipo addParamFunc argumentos_loop .)


state 131

    (61) argumentos_loop -> COMA . argumentos
    (60) argumentos -> . ID addDirVarLocalesFunc COLON tipo addParamFunc argumentos_loop

    ID              shift and go to state 56

    argumentos                     shift and go to state 158

state 132

    (134) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 134 (varcte -> CTECHAR nodoCteC .)
    COMA            reduce using rule 134 (varcte -> CTECHAR nodoCteC .)


state 133

    (125) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 125 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 125 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 125 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 125 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 125 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 125 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 125 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 125 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 125 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 125 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 125 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 125 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 125 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 125 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 125 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 125 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 125 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 125 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 125 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 125 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 125 (factor_var -> varcte nodo1 .)


state 134

    (132) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)
    COMA            reduce using rule 132 (varcte -> CTEFLOAT nodoCteF .)


state 135

    (115) termino -> factor nodo4 . termino_loop
    (116) termino_loop -> . termino_type_loop
    (117) termino_loop -> .
    (118) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (119) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 117 (termino_loop -> .)
    SUBTRACTION     reduce using rule 117 (termino_loop -> .)
    SEMICOLON       reduce using rule 117 (termino_loop -> .)
    LESS            reduce using rule 117 (termino_loop -> .)
    GREATER         reduce using rule 117 (termino_loop -> .)
    LESSEQUAL       reduce using rule 117 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 117 (termino_loop -> .)
    NOTEQUAL        reduce using rule 117 (termino_loop -> .)
    EQUAL           reduce using rule 117 (termino_loop -> .)
    AND             reduce using rule 117 (termino_loop -> .)
    OR              reduce using rule 117 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 117 (termino_loop -> .)
    ID              reduce using rule 117 (termino_loop -> .)
    CTEINT          reduce using rule 117 (termino_loop -> .)
    CTEFLOAT        reduce using rule 117 (termino_loop -> .)
    CTECHAR         reduce using rule 117 (termino_loop -> .)
    TRUE            reduce using rule 117 (termino_loop -> .)
    FALSE           reduce using rule 117 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 117 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 161
    DIVISION        shift and go to state 159

    termino_type_loop              shift and go to state 160
    termino_loop                   shift and go to state 162

state 136

    (131) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 131 (varcte -> CTEINT nodoCteE .)
    COMA            reduce using rule 131 (varcte -> CTEINT nodoCteE .)


state 137

    (126) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (75) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 146
    expresion                      shift and go to state 163
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 138

    (141) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 164


state 139

    (130) varcte -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 130 (varcte -> ID varcte_arr .)
    DIVISION        reduce using rule 130 (varcte -> ID varcte_arr .)
    ADDITION        reduce using rule 130 (varcte -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 130 (varcte -> ID varcte_arr .)
    LESS            reduce using rule 130 (varcte -> ID varcte_arr .)
    GREATER         reduce using rule 130 (varcte -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 130 (varcte -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 130 (varcte -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 130 (varcte -> ID varcte_arr .)
    EQUAL           reduce using rule 130 (varcte -> ID varcte_arr .)
    AND             reduce using rule 130 (varcte -> ID varcte_arr .)
    OR              reduce using rule 130 (varcte -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 130 (varcte -> ID varcte_arr .)
    ID              reduce using rule 130 (varcte -> ID varcte_arr .)
    CTEINT          reduce using rule 130 (varcte -> ID varcte_arr .)
    CTEFLOAT        reduce using rule 130 (varcte -> ID varcte_arr .)
    CTECHAR         reduce using rule 130 (varcte -> ID varcte_arr .)
    TRUE            reduce using rule 130 (varcte -> ID varcte_arr .)
    FALSE           reduce using rule 130 (varcte -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 130 (varcte -> ID varcte_arr .)
    SEMICOLON       reduce using rule 130 (varcte -> ID varcte_arr .)
    COMA            reduce using rule 130 (varcte -> ID varcte_arr .)


state 140

    (133) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)
    COMA            reduce using rule 133 (varcte -> CTEBOOL nodoCteB .)


state 141

    (25) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 25 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 25 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 25 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 25 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 25 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 25 (regreso -> RETURN exp SEMICOLON .)


state 142

    (107) exp -> termino nodo5 . exp_loop
    (108) exp_loop -> . exp_type_loop
    (109) exp_loop -> .
    (110) exp_type_loop -> . ADDITION nodo3_suma exp
    (111) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 109 (exp_loop -> .)
    LESS            reduce using rule 109 (exp_loop -> .)
    GREATER         reduce using rule 109 (exp_loop -> .)
    LESSEQUAL       reduce using rule 109 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 109 (exp_loop -> .)
    NOTEQUAL        reduce using rule 109 (exp_loop -> .)
    EQUAL           reduce using rule 109 (exp_loop -> .)
    AND             reduce using rule 109 (exp_loop -> .)
    OR              reduce using rule 109 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 109 (exp_loop -> .)
    ID              reduce using rule 109 (exp_loop -> .)
    CTEINT          reduce using rule 109 (exp_loop -> .)
    CTEFLOAT        reduce using rule 109 (exp_loop -> .)
    CTECHAR         reduce using rule 109 (exp_loop -> .)
    TRUE            reduce using rule 109 (exp_loop -> .)
    FALSE           reduce using rule 109 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 109 (exp_loop -> .)
    ADDITION        shift and go to state 165
    SUBTRACTION     shift and go to state 168

    exp_loop                       shift and go to state 166
    exp_type_loop                  shift and go to state 167

state 143

    (66) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (75) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 146
    expresion                      shift and go to state 169
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 144

    (41) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 170


state 145

    (39) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 171


state 146

    (75) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (76) expresion_option -> . AND nodo12_and nuevaexp
    (77) expresion_option -> . OR nodo12_or nuevaexp
    (78) expresion_option -> .

    AND             shift and go to state 172
    OR              shift and go to state 174
    LPARENTHESIS    reduce using rule 78 (expresion_option -> .)
    ID              reduce using rule 78 (expresion_option -> .)
    CTEINT          reduce using rule 78 (expresion_option -> .)
    CTEFLOAT        reduce using rule 78 (expresion_option -> .)
    CTECHAR         reduce using rule 78 (expresion_option -> .)
    TRUE            reduce using rule 78 (expresion_option -> .)
    FALSE           reduce using rule 78 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 78 (expresion_option -> .)
    SEMICOLON       reduce using rule 78 (expresion_option -> .)

    expresion_option               shift and go to state 173

state 147

    (40) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 40 (escritura_type -> expresion .)


state 148

    (84) nuevaexp -> exp . nuevaexp_type nodo10
    (85) nuevaexp_type -> . LESS nodo9_menor exp
    (86) nuevaexp_type -> . GREATER nodo9_mayor exp
    (87) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (88) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (89) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (90) nuevaexp_type -> . EQUAL nodo9_igual exp
    (91) nuevaexp_type -> .

    LESS            shift and go to state 177
    GREATER         shift and go to state 176
    LESSEQUAL       shift and go to state 181
    GREATEREQUAL    shift and go to state 175
    NOTEQUAL        shift and go to state 179
    EQUAL           shift and go to state 178
    AND             reduce using rule 91 (nuevaexp_type -> .)
    OR              reduce using rule 91 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 91 (nuevaexp_type -> .)
    ID              reduce using rule 91 (nuevaexp_type -> .)
    CTEINT          reduce using rule 91 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 91 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 91 (nuevaexp_type -> .)
    TRUE            reduce using rule 91 (nuevaexp_type -> .)
    FALSE           reduce using rule 91 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 91 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 91 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 180

state 149

    (135) llamada -> ID checkCall LPARENTHESIS . llamada_params RPARENTHESIS SEMICOLON
    (137) llamada_params -> . params
    (138) llamada_params -> .
    (139) params -> . varcte
    (140) params -> . varcte COMA params
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 138 (llamada_params -> .)
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 182
    params                         shift and go to state 183
    CTEBOOL                        shift and go to state 109
    llamada_params                 shift and go to state 184

state 150

    (100) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (106) nodo8 -> .

    SEMICOLON       reduce using rule 106 (nodo8 -> .)

    nodo8                          shift and go to state 185

state 151

    (101) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 186


state 152

    (69) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 187


state 153

    (47) variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc .

    SEMICOLON       reduce using rule 47 (variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc .)


state 154

    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET .
    (54) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET . COMA variable_arr_coma_func

    COLON           reduce using rule 53 (variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET .)
    COMA            shift and go to state 188


state 155

    (51) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc
    (52) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc COMA variable_id_loop_coma_func
    (63) addDirVarLocalesFunc -> .

    COMA            reduce using rule 63 (addDirVarLocalesFunc -> .)
    COLON           reduce using rule 63 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 189

state 156

    (52) variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA variable_id_loop_coma_func .

    COLON           reduce using rule 52 (variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA variable_id_loop_coma_func .)


state 157

    (50) variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc .

    SEMICOLON       reduce using rule 50 (variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc .)


state 158

    (61) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 61 (argumentos_loop -> COMA argumentos .)


state 159

    (119) termino_type_loop -> DIVISION . nodo2_div termino
    (121) nodo2_div -> .

    LPARENTHESIS    reduce using rule 121 (nodo2_div -> .)
    ID              reduce using rule 121 (nodo2_div -> .)
    CTEINT          reduce using rule 121 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 121 (nodo2_div -> .)
    CTECHAR         reduce using rule 121 (nodo2_div -> .)
    TRUE            reduce using rule 121 (nodo2_div -> .)
    FALSE           reduce using rule 121 (nodo2_div -> .)

    nodo2_div                      shift and go to state 190

state 160

    (116) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 116 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 116 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 116 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 116 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 116 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 116 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 116 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 116 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 116 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 116 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 116 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 116 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 116 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 116 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 116 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 116 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 116 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 116 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 116 (termino_loop -> termino_type_loop .)


state 161

    (118) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (120) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 120 (nodo2_mult -> .)
    ID              reduce using rule 120 (nodo2_mult -> .)
    CTEINT          reduce using rule 120 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 120 (nodo2_mult -> .)
    CTECHAR         reduce using rule 120 (nodo2_mult -> .)
    TRUE            reduce using rule 120 (nodo2_mult -> .)
    FALSE           reduce using rule 120 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 191

state 162

    (115) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 115 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 115 (termino -> factor nodo4 termino_loop .)


state 163

    (126) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 192


state 164

    (141) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)
    COMA            reduce using rule 141 (varcte_arr -> LBRACKET RBRACKET .)


state 165

    (110) exp_type_loop -> ADDITION . nodo3_suma exp
    (112) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 112 (nodo3_suma -> .)
    ID              reduce using rule 112 (nodo3_suma -> .)
    CTEINT          reduce using rule 112 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 112 (nodo3_suma -> .)
    CTECHAR         reduce using rule 112 (nodo3_suma -> .)
    TRUE            reduce using rule 112 (nodo3_suma -> .)
    FALSE           reduce using rule 112 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 193

state 166

    (107) exp -> termino nodo5 exp_loop .

    SEMICOLON       reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    LESS            reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 107 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 107 (exp -> termino nodo5 exp_loop .)


state 167

    (108) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 108 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 108 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 108 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 108 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 108 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 108 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 108 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 108 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 108 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 108 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 108 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 108 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 108 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 108 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 108 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 108 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 108 (exp_loop -> exp_type_loop .)


state 168

    (111) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (113) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 113 (nodo3_resta -> .)
    ID              reduce using rule 113 (nodo3_resta -> .)
    CTEINT          reduce using rule 113 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 113 (nodo3_resta -> .)
    CTECHAR         reduce using rule 113 (nodo3_resta -> .)
    TRUE            reduce using rule 113 (nodo3_resta -> .)
    FALSE           reduce using rule 113 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 194

state 169

    (66) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 195


state 170

    (41) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 196


state 171

    (39) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 197


state 172

    (76) expresion_option -> AND . nodo12_and nuevaexp
    (81) nodo12_and -> .

    LPARENTHESIS    reduce using rule 81 (nodo12_and -> .)
    ID              reduce using rule 81 (nodo12_and -> .)
    CTEINT          reduce using rule 81 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 81 (nodo12_and -> .)
    CTECHAR         reduce using rule 81 (nodo12_and -> .)
    TRUE            reduce using rule 81 (nodo12_and -> .)
    FALSE           reduce using rule 81 (nodo12_and -> .)

    nodo12_and                     shift and go to state 198

state 173

    (75) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (83) nodo11 -> .

    LPARENTHESIS    reduce using rule 83 (nodo11 -> .)
    ID              reduce using rule 83 (nodo11 -> .)
    CTEINT          reduce using rule 83 (nodo11 -> .)
    CTEFLOAT        reduce using rule 83 (nodo11 -> .)
    CTECHAR         reduce using rule 83 (nodo11 -> .)
    TRUE            reduce using rule 83 (nodo11 -> .)
    FALSE           reduce using rule 83 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 83 (nodo11 -> .)
    SEMICOLON       reduce using rule 83 (nodo11 -> .)

    nodo11                         shift and go to state 199

state 174

    (77) expresion_option -> OR . nodo12_or nuevaexp
    (82) nodo12_or -> .

    LPARENTHESIS    reduce using rule 82 (nodo12_or -> .)
    ID              reduce using rule 82 (nodo12_or -> .)
    CTEINT          reduce using rule 82 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 82 (nodo12_or -> .)
    CTECHAR         reduce using rule 82 (nodo12_or -> .)
    TRUE            reduce using rule 82 (nodo12_or -> .)
    FALSE           reduce using rule 82 (nodo12_or -> .)

    nodo12_or                      shift and go to state 200

state 175

    (88) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (96) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 96 (nodo9_mayorig -> .)
    ID              reduce using rule 96 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 96 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 96 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 96 (nodo9_mayorig -> .)
    TRUE            reduce using rule 96 (nodo9_mayorig -> .)
    FALSE           reduce using rule 96 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 201

state 176

    (86) nuevaexp_type -> GREATER . nodo9_mayor exp
    (94) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 94 (nodo9_mayor -> .)
    ID              reduce using rule 94 (nodo9_mayor -> .)
    CTEINT          reduce using rule 94 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 94 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 94 (nodo9_mayor -> .)
    TRUE            reduce using rule 94 (nodo9_mayor -> .)
    FALSE           reduce using rule 94 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 202

state 177

    (85) nuevaexp_type -> LESS . nodo9_menor exp
    (93) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 93 (nodo9_menor -> .)
    ID              reduce using rule 93 (nodo9_menor -> .)
    CTEINT          reduce using rule 93 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 93 (nodo9_menor -> .)
    CTECHAR         reduce using rule 93 (nodo9_menor -> .)
    TRUE            reduce using rule 93 (nodo9_menor -> .)
    FALSE           reduce using rule 93 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 203

state 178

    (90) nuevaexp_type -> EQUAL . nodo9_igual exp
    (98) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 98 (nodo9_igual -> .)
    ID              reduce using rule 98 (nodo9_igual -> .)
    CTEINT          reduce using rule 98 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 98 (nodo9_igual -> .)
    CTECHAR         reduce using rule 98 (nodo9_igual -> .)
    TRUE            reduce using rule 98 (nodo9_igual -> .)
    FALSE           reduce using rule 98 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 204

state 179

    (89) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (97) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 97 (nodo9_dif -> .)
    ID              reduce using rule 97 (nodo9_dif -> .)
    CTEINT          reduce using rule 97 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 97 (nodo9_dif -> .)
    CTECHAR         reduce using rule 97 (nodo9_dif -> .)
    TRUE            reduce using rule 97 (nodo9_dif -> .)
    FALSE           reduce using rule 97 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 205

state 180

    (84) nuevaexp -> exp nuevaexp_type . nodo10
    (92) nodo10 -> .

    AND             reduce using rule 92 (nodo10 -> .)
    OR              reduce using rule 92 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 92 (nodo10 -> .)
    ID              reduce using rule 92 (nodo10 -> .)
    CTEINT          reduce using rule 92 (nodo10 -> .)
    CTEFLOAT        reduce using rule 92 (nodo10 -> .)
    CTECHAR         reduce using rule 92 (nodo10 -> .)
    TRUE            reduce using rule 92 (nodo10 -> .)
    FALSE           reduce using rule 92 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 92 (nodo10 -> .)
    SEMICOLON       reduce using rule 92 (nodo10 -> .)

    nodo10                         shift and go to state 206

state 181

    (87) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (95) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 95 (nodo9_menorig -> .)
    ID              reduce using rule 95 (nodo9_menorig -> .)
    CTEINT          reduce using rule 95 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 95 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 95 (nodo9_menorig -> .)
    TRUE            reduce using rule 95 (nodo9_menorig -> .)
    FALSE           reduce using rule 95 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 207

state 182

    (139) params -> varcte .
    (140) params -> varcte . COMA params

    RPARENTHESIS    reduce using rule 139 (params -> varcte .)
    COMA            shift and go to state 208


state 183

    (137) llamada_params -> params .

    RPARENTHESIS    reduce using rule 137 (llamada_params -> params .)


state 184

    (135) llamada -> ID checkCall LPARENTHESIS llamada_params . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 209


state 185

    (100) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 210


state 186

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 211


state 187

    (69) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (74) nodo13 -> .

    LCURLY          reduce using rule 74 (nodo13 -> .)

    nodo13                         shift and go to state 212

state 188

    (54) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA . variable_arr_coma_func
    (53) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET
    (54) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func

    ID              shift and go to state 213

    variable_arr_coma_func         shift and go to state 214

state 189

    (51) variable_id_loop_coma_func -> ID addDirVarLocalesFunc .
    (52) variable_id_loop_coma_func -> ID addDirVarLocalesFunc . COMA variable_id_loop_coma_func

    COLON           reduce using rule 51 (variable_id_loop_coma_func -> ID addDirVarLocalesFunc .)
    COMA            shift and go to state 127


state 190

    (119) termino_type_loop -> DIVISION nodo2_div . termino
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 215
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 191

    (118) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 216
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 192

    (126) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (129) nodo7 -> .

    MULTIPLICATION  reduce using rule 129 (nodo7 -> .)
    DIVISION        reduce using rule 129 (nodo7 -> .)
    ADDITION        reduce using rule 129 (nodo7 -> .)
    SUBTRACTION     reduce using rule 129 (nodo7 -> .)
    SEMICOLON       reduce using rule 129 (nodo7 -> .)
    LESS            reduce using rule 129 (nodo7 -> .)
    GREATER         reduce using rule 129 (nodo7 -> .)
    LESSEQUAL       reduce using rule 129 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 129 (nodo7 -> .)
    NOTEQUAL        reduce using rule 129 (nodo7 -> .)
    EQUAL           reduce using rule 129 (nodo7 -> .)
    AND             reduce using rule 129 (nodo7 -> .)
    OR              reduce using rule 129 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 129 (nodo7 -> .)
    ID              reduce using rule 129 (nodo7 -> .)
    CTEINT          reduce using rule 129 (nodo7 -> .)
    CTEFLOAT        reduce using rule 129 (nodo7 -> .)
    CTECHAR         reduce using rule 129 (nodo7 -> .)
    TRUE            reduce using rule 129 (nodo7 -> .)
    FALSE           reduce using rule 129 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 129 (nodo7 -> .)

    nodo7                          shift and go to state 217

state 193

    (110) exp_type_loop -> ADDITION nodo3_suma . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 218
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 194

    (111) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 219
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 195

    (66) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (74) nodo13 -> .

    LCURLY          reduce using rule 74 (nodo13 -> .)

    nodo13                         shift and go to state 220

state 196

    (41) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 41 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 197

    (39) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 39 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 39 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 39 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 39 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 39 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 39 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 198

    (76) expresion_option -> AND nodo12_and . nuevaexp
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 221
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 199

    (75) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (79) expresion_loop -> . expresion
    (80) expresion_loop -> .
    (75) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 80 (expresion_loop -> .)
    SEMICOLON       reduce using rule 80 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    expresion_loop                 shift and go to state 222
    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 146
    expresion                      shift and go to state 223
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 200

    (77) expresion_option -> OR nodo12_or . nuevaexp
    (84) nuevaexp -> . exp nuevaexp_type nodo10
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    termino                        shift and go to state 112
    varcte                         shift and go to state 101
    factor                         shift and go to state 103
    factor_exp                     shift and go to state 104
    nuevaexp                       shift and go to state 224
    CTEBOOL                        shift and go to state 109
    exp                            shift and go to state 148
    factor_var                     shift and go to state 111

state 201

    (88) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 225
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 202

    (86) nuevaexp_type -> GREATER nodo9_mayor . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 226
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 203

    (85) nuevaexp_type -> LESS nodo9_menor . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 227
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 204

    (90) nuevaexp_type -> EQUAL nodo9_igual . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    factor_exp                     shift and go to state 104
    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    termino                        shift and go to state 112
    exp                            shift and go to state 228
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 205

    (89) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 229
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 206

    (84) nuevaexp -> exp nuevaexp_type nodo10 .

    LPARENTHESIS    reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    AND             reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 84 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 207

    (87) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (107) exp -> . termino nodo5 exp_loop
    (115) termino -> . factor nodo4 termino_loop
    (123) factor -> . factor_var
    (124) factor -> . factor_exp
    (125) factor_var -> . varcte nodo1
    (126) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 106
    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 101
    CTEBOOL                        shift and go to state 109
    factor_exp                     shift and go to state 104
    termino                        shift and go to state 112
    exp                            shift and go to state 230
    factor                         shift and go to state 103
    factor_var                     shift and go to state 111

state 208

    (140) params -> varcte COMA . params
    (139) params -> . varcte
    (140) params -> . varcte COMA params
    (130) varcte -> . ID varcte_arr
    (131) varcte -> . CTEINT nodoCteE
    (132) varcte -> . CTEFLOAT nodoCteF
    (133) varcte -> . CTEBOOL nodoCteB
    (134) varcte -> . CTECHAR nodoCteC
    (143) CTEBOOL -> . TRUE
    (144) CTEBOOL -> . FALSE

    ID              shift and go to state 107
    CTEINT          shift and go to state 105
    CTEFLOAT        shift and go to state 102
    CTECHAR         shift and go to state 99
    TRUE            shift and go to state 100
    FALSE           shift and go to state 108

    varcte                         shift and go to state 182
    params                         shift and go to state 231
    CTEBOOL                        shift and go to state 109

state 209

    (135) llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 232


state 210

    (100) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 100 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 100 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 100 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 100 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 100 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 100 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 211

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (106) nodo8 -> .

    LBRACKET        reduce using rule 106 (nodo8 -> .)

    nodo8                          shift and go to state 233

state 212

    (69) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 234

state 213

    (53) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET
    (54) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
    (63) addDirVarLocalesFunc -> .

    LBRACKET        reduce using rule 63 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 235

state 214

    (54) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func .

    COLON           reduce using rule 54 (variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func .)


state 215

    (119) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 119 (termino_type_loop -> DIVISION nodo2_div termino .)


state 216

    (118) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 118 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 217

    (126) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 126 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 218

    (110) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 110 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 219

    (111) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 111 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 220

    (66) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 236

state 221

    (76) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 76 (expresion_option -> AND nodo12_and nuevaexp .)


state 222

    (75) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    RPARENTHESIS    reduce using rule 75 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    SEMICOLON       reduce using rule 75 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 223

    (79) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 79 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 79 (expresion_loop -> expresion .)


state 224

    (77) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 77 (expresion_option -> OR nodo12_or nuevaexp .)


state 225

    (88) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 88 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 226

    (86) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 86 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 227

    (85) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 85 (nuevaexp_type -> LESS nodo9_menor exp .)


state 228

    (90) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 90 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 229

    (89) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 89 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 230

    (87) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 87 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 231

    (140) params -> varcte COMA params .

    RPARENTHESIS    reduce using rule 140 (params -> varcte COMA params .)


state 232

    (135) llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .

    ID              reduce using rule 135 (llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 135 (llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 135 (llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 135 (llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 135 (llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 135 (llamada -> ID checkCall LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON .)


state 233

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 237


state 234

    (69) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (70) condicion_option -> . ELSE nodo14 bloque
    (71) condicion_option -> .

    ELSE            shift and go to state 238
    ID              reduce using rule 71 (condicion_option -> .)
    IF              reduce using rule 71 (condicion_option -> .)
    PRINT           reduce using rule 71 (condicion_option -> .)
    RETURN          reduce using rule 71 (condicion_option -> .)
    WHILE           reduce using rule 71 (condicion_option -> .)
    RCURLY          reduce using rule 71 (condicion_option -> .)

    condicion_option               shift and go to state 239

state 235

    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET
    (54) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET COMA variable_arr_coma_func

    LBRACKET        shift and go to state 126


state 236

    (66) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (68) nodo17 -> .

    ID              reduce using rule 68 (nodo17 -> .)
    IF              reduce using rule 68 (nodo17 -> .)
    PRINT           reduce using rule 68 (nodo17 -> .)
    RETURN          reduce using rule 68 (nodo17 -> .)
    WHILE           reduce using rule 68 (nodo17 -> .)
    RCURLY          reduce using rule 68 (nodo17 -> .)

    nodo17                         shift and go to state 240

state 237

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (102) asignacion_type -> . CTEINT
    (103) asignacion_type -> . CTEFLOAT
    (104) asignacion_type -> . CTEINT COMA asignacion_type
    (105) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 241
    CTEFLOAT        shift and go to state 242

    asignacion_type                shift and go to state 243

state 238

    (70) condicion_option -> ELSE . nodo14 bloque
    (73) nodo14 -> .

    LCURLY          reduce using rule 73 (nodo14 -> .)

    nodo14                         shift and go to state 244

state 239

    (69) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (72) nodo15 -> .

    ID              reduce using rule 72 (nodo15 -> .)
    IF              reduce using rule 72 (nodo15 -> .)
    PRINT           reduce using rule 72 (nodo15 -> .)
    RETURN          reduce using rule 72 (nodo15 -> .)
    WHILE           reduce using rule 72 (nodo15 -> .)
    RCURLY          reduce using rule 72 (nodo15 -> .)

    nodo15                         shift and go to state 245

state 240

    (66) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 66 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 66 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 66 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RETURN          reduce using rule 66 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 66 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 66 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 241

    (102) asignacion_type -> CTEINT .
    (104) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 102 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 246


state 242

    (103) asignacion_type -> CTEFLOAT .
    (105) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 103 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 247


state 243

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 248


state 244

    (70) condicion_option -> ELSE nodo14 . bloque
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 249

state 245

    (69) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 69 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 69 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 69 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RETURN          reduce using rule 69 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 69 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 69 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 246

    (104) asignacion_type -> CTEINT COMA . asignacion_type
    (102) asignacion_type -> . CTEINT
    (103) asignacion_type -> . CTEFLOAT
    (104) asignacion_type -> . CTEINT COMA asignacion_type
    (105) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 241
    CTEFLOAT        shift and go to state 242

    asignacion_type                shift and go to state 250

state 247

    (105) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (102) asignacion_type -> . CTEINT
    (103) asignacion_type -> . CTEFLOAT
    (104) asignacion_type -> . CTEINT COMA asignacion_type
    (105) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 241
    CTEFLOAT        shift and go to state 242

    asignacion_type                shift and go to state 251

state 248

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 252


state 249

    (70) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 70 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 70 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 70 (condicion_option -> ELSE nodo14 bloque .)
    RETURN          reduce using rule 70 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 70 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 70 (condicion_option -> ELSE nodo14 bloque .)


state 250

    (104) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 104 (asignacion_type -> CTEINT COMA asignacion_type .)


state 251

    (105) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 105 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 252

    (101) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 101 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 101 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 101 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 101 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 101 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 101 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
