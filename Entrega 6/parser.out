Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END
Rule 2     add_main_goto -> <empty>
Rule 3     variables_globales -> var_global variables_globales
Rule 4     variables_globales -> <empty>
Rule 5     var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop
Rule 6     variable_global_id_loop -> variable_global_id_loop_coma COLON tipo global_addType
Rule 7     variable_global_id_loop_coma -> ID add_pila_var_globales
Rule 8     variable_global_id_loop_coma -> ID add_pila_var_globales COMA variable_global_id_loop_coma
Rule 9     add_pila_var_globales -> <empty>
Rule 10    variable_global_end_loop -> var_global
Rule 11    variable_global_end_loop -> <empty>
Rule 12    global_addType -> <empty>
Rule 13    variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop
Rule 14    variable_local_id_loop -> variable_local_id_loop_coma COLON tipo local_addType
Rule 15    variable_local_id_loop_coma -> ID add_pila_var_locales
Rule 16    variable_local_id_loop_coma -> ID add_pila_var_locales COMA variable_local_id_loop_coma
Rule 17    add_pila_var_locales -> <empty>
Rule 18    variable_local_end_loop -> variables_locales
Rule 19    variable_local_end_loop -> <empty>
Rule 20    local_addType -> <empty>
Rule 21    declaracion_funciones -> funcion declaracion_funciones
Rule 22    declaracion_funciones -> <empty>
Rule 23    funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
Rule 24    add_dir_funciones -> <empty>
Rule 25    params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
Rule 26    params -> <empty>
Rule 27    params_loop -> COMA ID add_pila_funciones params_loop
Rule 28    params_loop -> <empty>
Rule 29    add_pila_funciones -> <empty>
Rule 30    add_cantidad_vars -> <empty>
Rule 31    semicolon_function_loop -> SEMICOLON params
Rule 32    semicolon_function_loop -> <empty>
Rule 33    vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
Rule 34    vars_locales_funcion -> <empty>
Rule 35    vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop
Rule 36    vars_locales_id_loop -> <empty>
Rule 37    semicolon_function_local_loop -> SEMICOLON vars_locales_funcion
Rule 38    semicolon_function_local_loop -> <empty>
Rule 39    function_add_type -> <empty>
Rule 40    function_local_add_type -> <empty>
Rule 41    return_cuad -> <empty>
Rule 42    add_dir_proc -> <empty>
Rule 43    update_dir_proc -> <empty>
Rule 44    tipo -> INTTYPE
Rule 45    tipo -> FLOATTYPE
Rule 46    tipo -> CHARTYPE
Rule 47    tipo -> BOOLTYPE
Rule 48    tipo -> VOIDTYPE
Rule 49    bloque -> LCURLY bloque_est_loop RCURLY
Rule 50    bloque_est_loop -> estatuto bloque_est_loop
Rule 51    bloque_est_loop -> <empty>
Rule 52    estatuto -> asignacion
Rule 53    estatuto -> condicion
Rule 54    estatuto -> escritura
Rule 55    estatuto -> regreso
Rule 56    estatuto -> ciclo
Rule 57    estatuto -> variables_locales
Rule 58    regreso -> RETURN exp SEMICOLON
Rule 59    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 60    escritura_type -> expresion
Rule 61    escritura_type -> QUOTE CTECHAR QUOTE
Rule 62    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 63    nodo16 -> <empty>
Rule 64    nodo17 -> <empty>
Rule 65    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 66    condicion_option -> ELSE nodo14 bloque
Rule 67    condicion_option -> <empty>
Rule 68    nodo15 -> <empty>
Rule 69    nodo14 -> <empty>
Rule 70    nodo13 -> <empty>
Rule 71    expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 72    expresion_option -> AND nodo12_and nuevaexp
Rule 73    expresion_option -> OR nodo12_or nuevaexp
Rule 74    expresion_option -> <empty>
Rule 75    expresion_loop -> expresion
Rule 76    expresion_loop -> <empty>
Rule 77    nodo12_and -> <empty>
Rule 78    nodo12_or -> <empty>
Rule 79    nodo11 -> <empty>
Rule 80    nuevaexp -> exp nuevaexp_type nodo10
Rule 81    nuevaexp_type -> LESS nodo9_menor exp
Rule 82    nuevaexp_type -> GREATER nodo9_mayor exp
Rule 83    nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 84    nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 85    nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 86    nuevaexp_type -> EQUAL nodo9_igual exp
Rule 87    nuevaexp_type -> <empty>
Rule 88    nodo10 -> <empty>
Rule 89    nodo9_menor -> <empty>
Rule 90    nodo9_mayor -> <empty>
Rule 91    nodo9_menorig -> <empty>
Rule 92    nodo9_mayorig -> <empty>
Rule 93    nodo9_dif -> <empty>
Rule 94    nodo9_igual -> <empty>
Rule 95    asignacion -> ID asignacion_option
Rule 96    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 97    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 98    asignacion_type -> CTEINT
Rule 99    asignacion_type -> CTEFLOAT
Rule 100   asignacion_type -> CTEINT COMA asignacion_type
Rule 101   asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 102   nodo8 -> <empty>
Rule 103   exp -> termino nodo5 exp_loop
Rule 104   exp_loop -> exp_type_loop
Rule 105   exp_loop -> <empty>
Rule 106   exp_type_loop -> ADDITION nodo3_suma exp
Rule 107   exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 108   nodo3_suma -> <empty>
Rule 109   nodo3_resta -> <empty>
Rule 110   nodo5 -> <empty>
Rule 111   termino -> factor nodo4 termino_loop
Rule 112   termino_loop -> termino_type_loop
Rule 113   termino_loop -> <empty>
Rule 114   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 115   termino_type_loop -> DIVISION nodo2_div termino
Rule 116   nodo2_mult -> <empty>
Rule 117   nodo2_div -> <empty>
Rule 118   nodo4 -> <empty>
Rule 119   factor -> factor_var
Rule 120   factor -> factor_exp
Rule 121   factor_var -> varcte nodo1
Rule 122   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 123   nodo1 -> <empty>
Rule 124   nodo6 -> <empty>
Rule 125   nodo7 -> <empty>
Rule 126   varcte -> ID varcte_arr nodoCteV
Rule 127   varcte -> CTEINT nodoCteE
Rule 128   varcte -> CTEFLOAT nodoCteF
Rule 129   varcte -> CTEBOOL nodoCteB
Rule 130   varcte -> CTECHAR nodoCteC
Rule 131   CTEBOOL -> TRUE
Rule 132   CTEBOOL -> FALSE
Rule 133   varcte_arr -> LBRACKET RBRACKET
Rule 134   varcte_arr -> <empty>
Rule 135   nodoCteV -> <empty>
Rule 136   nodoCteE -> <empty>
Rule 137   nodoCteF -> <empty>
Rule 138   nodoCteB -> <empty>
Rule 139   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 106
AND                  : 72
ASSIGN               : 96 97
BOOLTYPE             : 47
CHARTYPE             : 46
COLON                : 6 14 25 33
COMA                 : 8 16 27 35 100 101
CTECHAR              : 61 130
CTEFLOAT             : 99 101 128
CTEINT               : 97 98 100 127
DIVISION             : 115
ELSE                 : 66
END                  : 1
EQUAL                : 86
FALSE                : 132
FLOATTYPE            : 45
FUNC                 : 23
GREATER              : 82
GREATEREQUAL         : 84
ID                   : 1 7 8 15 16 23 25 27 33 35 95 126
IF                   : 65
INTTYPE              : 44
LBRACKET             : 97 97 133
LCURLY               : 49
LESS                 : 81
LESSEQUAL            : 83
LPARENTHESIS         : 1 23 59 62 65 122
MAIN                 : 1
MULTIPLICATION       : 114
NOTEQUAL             : 85
OR                   : 73
PRINT                : 59
PROGRAM              : 1
QUOTE                : 61 61
RBRACKET             : 97 97 133
RCURLY               : 49
RETURN               : 58
RPARENTHESIS         : 1 23 59 62 65 122
SEMICOLON            : 1 5 13 31 37 58 59 96 97
SUBTRACTION          : 107
TRUE                 : 131
VAR                  : 5 13 33
VOIDTYPE             : 48
WHILE                : 62
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 129
add_cantidad_vars    : 23
add_dir_funciones    : 23
add_dir_proc         : 1
add_main_goto        : 1
add_pila_funciones   : 25 27 33 35
add_pila_var_globales : 7 8
add_pila_var_locales : 15 16
asignacion           : 52
asignacion_option    : 95
asignacion_type      : 97 100 101
bloque               : 1 23 62 65 66
bloque_est_loop      : 49 50
ciclo                : 56
condicion            : 53
condicion_option     : 65
declaracion_funciones : 1 21
escritura            : 54
escritura_type       : 59
estatuto             : 50
exp                  : 58 80 81 82 83 84 85 86 106 107
exp_loop             : 103
exp_type_loop        : 104
expresion            : 60 62 65 75 96 122
expresion_loop       : 71
expresion_option     : 71
factor               : 111
factor_exp           : 120
factor_var           : 119
funcion              : 21
function_add_type    : 25
function_local_add_type : 33
global_addType       : 6
local_addType        : 14
nodo1                : 121
nodo10               : 80
nodo11               : 71
nodo12_and           : 72
nodo12_or            : 73
nodo13               : 62 65
nodo14               : 66
nodo15               : 65
nodo16               : 62
nodo17               : 62
nodo2_div            : 115
nodo2_mult           : 114
nodo3_resta          : 107
nodo3_suma           : 106
nodo4                : 111
nodo5                : 103
nodo6                : 122
nodo7                : 122
nodo8                : 96 97
nodo9_dif            : 85
nodo9_igual          : 86
nodo9_mayor          : 82
nodo9_mayorig        : 84
nodo9_menor          : 81
nodo9_menorig        : 83
nodoCteB             : 129
nodoCteC             : 130
nodoCteE             : 127
nodoCteF             : 128
nodoCteV             : 126
nuevaexp             : 71 72 73
nuevaexp_type        : 80
params               : 23 31
params_loop          : 25 27
programa             : 0
regreso              : 55
return_cuad          : 23
semicolon_function_local_loop : 33
semicolon_function_loop : 25
termino              : 103 114 115
termino_loop         : 111
termino_type_loop    : 112
tipo                 : 6 14 23 25 33
update_dir_proc      : 1
var_global           : 3 10
varcte               : 121
varcte_arr           : 126
variable_global_end_loop : 5
variable_global_id_loop : 5
variable_global_id_loop_coma : 6 8
variable_local_end_loop : 13
variable_local_id_loop : 13
variable_local_id_loop_coma : 14 16
variables_globales   : 1 3
variables_locales    : 18 57
vars_locales_funcion : 23 37
vars_locales_id_loop : 33 35

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END
    (42) add_dir_proc -> .

    VAR             reduce using rule 42 (add_dir_proc -> .)
    INTTYPE         reduce using rule 42 (add_dir_proc -> .)
    FLOATTYPE       reduce using rule 42 (add_dir_proc -> .)
    CHARTYPE        reduce using rule 42 (add_dir_proc -> .)
    BOOLTYPE        reduce using rule 42 (add_dir_proc -> .)
    VOIDTYPE        reduce using rule 42 (add_dir_proc -> .)
    MAIN            reduce using rule 42 (add_dir_proc -> .)

    add_dir_proc                   shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc . variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END
    (3) variables_globales -> . var_global variables_globales
    (4) variables_globales -> .
    (5) var_global -> . VAR variable_global_id_loop SEMICOLON variable_global_end_loop

    INTTYPE         reduce using rule 4 (variables_globales -> .)
    FLOATTYPE       reduce using rule 4 (variables_globales -> .)
    CHARTYPE        reduce using rule 4 (variables_globales -> .)
    BOOLTYPE        reduce using rule 4 (variables_globales -> .)
    VOIDTYPE        reduce using rule 4 (variables_globales -> .)
    MAIN            reduce using rule 4 (variables_globales -> .)
    VAR             shift and go to state 8

    variables_globales             shift and go to state 6
    var_global                     shift and go to state 7

state 6

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales . add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END
    (2) add_main_goto -> .

    INTTYPE         reduce using rule 2 (add_main_goto -> .)
    FLOATTYPE       reduce using rule 2 (add_main_goto -> .)
    CHARTYPE        reduce using rule 2 (add_main_goto -> .)
    BOOLTYPE        reduce using rule 2 (add_main_goto -> .)
    VOIDTYPE        reduce using rule 2 (add_main_goto -> .)
    MAIN            reduce using rule 2 (add_main_goto -> .)

    add_main_goto                  shift and go to state 9

state 7

    (3) variables_globales -> var_global . variables_globales
    (3) variables_globales -> . var_global variables_globales
    (4) variables_globales -> .
    (5) var_global -> . VAR variable_global_id_loop SEMICOLON variable_global_end_loop

    INTTYPE         reduce using rule 4 (variables_globales -> .)
    FLOATTYPE       reduce using rule 4 (variables_globales -> .)
    CHARTYPE        reduce using rule 4 (variables_globales -> .)
    BOOLTYPE        reduce using rule 4 (variables_globales -> .)
    VOIDTYPE        reduce using rule 4 (variables_globales -> .)
    MAIN            reduce using rule 4 (variables_globales -> .)
    VAR             shift and go to state 8

    variables_globales             shift and go to state 10
    var_global                     shift and go to state 7

state 8

    (5) var_global -> VAR . variable_global_id_loop SEMICOLON variable_global_end_loop
    (6) variable_global_id_loop -> . variable_global_id_loop_coma COLON tipo global_addType
    (7) variable_global_id_loop_coma -> . ID add_pila_var_globales
    (8) variable_global_id_loop_coma -> . ID add_pila_var_globales COMA variable_global_id_loop_coma

    ID              shift and go to state 13

    variable_global_id_loop        shift and go to state 11
    variable_global_id_loop_coma   shift and go to state 12

state 9

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto . update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END
    (43) update_dir_proc -> .

    INTTYPE         reduce using rule 43 (update_dir_proc -> .)
    FLOATTYPE       reduce using rule 43 (update_dir_proc -> .)
    CHARTYPE        reduce using rule 43 (update_dir_proc -> .)
    BOOLTYPE        reduce using rule 43 (update_dir_proc -> .)
    VOIDTYPE        reduce using rule 43 (update_dir_proc -> .)
    MAIN            reduce using rule 43 (update_dir_proc -> .)

    update_dir_proc                shift and go to state 14

state 10

    (3) variables_globales -> var_global variables_globales .

    INTTYPE         reduce using rule 3 (variables_globales -> var_global variables_globales .)
    FLOATTYPE       reduce using rule 3 (variables_globales -> var_global variables_globales .)
    CHARTYPE        reduce using rule 3 (variables_globales -> var_global variables_globales .)
    BOOLTYPE        reduce using rule 3 (variables_globales -> var_global variables_globales .)
    VOIDTYPE        reduce using rule 3 (variables_globales -> var_global variables_globales .)
    MAIN            reduce using rule 3 (variables_globales -> var_global variables_globales .)


state 11

    (5) var_global -> VAR variable_global_id_loop . SEMICOLON variable_global_end_loop

    SEMICOLON       shift and go to state 15


state 12

    (6) variable_global_id_loop -> variable_global_id_loop_coma . COLON tipo global_addType

    COLON           shift and go to state 16


state 13

    (7) variable_global_id_loop_coma -> ID . add_pila_var_globales
    (8) variable_global_id_loop_coma -> ID . add_pila_var_globales COMA variable_global_id_loop_coma
    (9) add_pila_var_globales -> .

    COMA            reduce using rule 9 (add_pila_var_globales -> .)
    COLON           reduce using rule 9 (add_pila_var_globales -> .)

    add_pila_var_globales          shift and go to state 17

state 14

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc . declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END
    (21) declaracion_funciones -> . funcion declaracion_funciones
    (22) declaracion_funciones -> .
    (23) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (44) tipo -> . INTTYPE
    (45) tipo -> . FLOATTYPE
    (46) tipo -> . CHARTYPE
    (47) tipo -> . BOOLTYPE
    (48) tipo -> . VOIDTYPE

    MAIN            reduce using rule 22 (declaracion_funciones -> .)
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    declaracion_funciones          shift and go to state 18
    tipo                           shift and go to state 24
    funcion                        shift and go to state 20

state 15

    (5) var_global -> VAR variable_global_id_loop SEMICOLON . variable_global_end_loop
    (10) variable_global_end_loop -> . var_global
    (11) variable_global_end_loop -> .
    (5) var_global -> . VAR variable_global_id_loop SEMICOLON variable_global_end_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 11 (variable_global_end_loop -> .)
    FLOATTYPE       reduce using rule 11 (variable_global_end_loop -> .)
    CHARTYPE        reduce using rule 11 (variable_global_end_loop -> .)
    BOOLTYPE        reduce using rule 11 (variable_global_end_loop -> .)
    VOIDTYPE        reduce using rule 11 (variable_global_end_loop -> .)
    MAIN            reduce using rule 11 (variable_global_end_loop -> .)
    VAR             shift and go to state 8

  ! VAR             [ reduce using rule 11 (variable_global_end_loop -> .) ]

    variable_global_end_loop       shift and go to state 26
    var_global                     shift and go to state 27

state 16

    (6) variable_global_id_loop -> variable_global_id_loop_coma COLON . tipo global_addType
    (44) tipo -> . INTTYPE
    (45) tipo -> . FLOATTYPE
    (46) tipo -> . CHARTYPE
    (47) tipo -> . BOOLTYPE
    (48) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 28

state 17

    (7) variable_global_id_loop_coma -> ID add_pila_var_globales .
    (8) variable_global_id_loop_coma -> ID add_pila_var_globales . COMA variable_global_id_loop_coma

    COLON           reduce using rule 7 (variable_global_id_loop_coma -> ID add_pila_var_globales .)
    COMA            shift and go to state 29


state 18

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones . MAIN LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 30


state 19

    (46) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 46 (tipo -> CHARTYPE .)
    LCURLY          reduce using rule 46 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 46 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 46 (tipo -> CHARTYPE .)


state 20

    (21) declaracion_funciones -> funcion . declaracion_funciones
    (21) declaracion_funciones -> . funcion declaracion_funciones
    (22) declaracion_funciones -> .
    (23) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (44) tipo -> . INTTYPE
    (45) tipo -> . FLOATTYPE
    (46) tipo -> . CHARTYPE
    (47) tipo -> . BOOLTYPE
    (48) tipo -> . VOIDTYPE

    MAIN            reduce using rule 22 (declaracion_funciones -> .)
    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    declaracion_funciones          shift and go to state 31
    tipo                           shift and go to state 24
    funcion                        shift and go to state 20

state 21

    (47) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 47 (tipo -> BOOLTYPE .)
    LCURLY          reduce using rule 47 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 47 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 47 (tipo -> BOOLTYPE .)


state 22

    (45) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 45 (tipo -> FLOATTYPE .)
    LCURLY          reduce using rule 45 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 45 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 45 (tipo -> FLOATTYPE .)


state 23

    (44) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 44 (tipo -> INTTYPE .)
    LCURLY          reduce using rule 44 (tipo -> INTTYPE .)
    FUNC            reduce using rule 44 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 44 (tipo -> INTTYPE .)


state 24

    (23) funcion -> tipo . FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    FUNC            shift and go to state 32


state 25

    (48) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 48 (tipo -> VOIDTYPE .)
    LCURLY          reduce using rule 48 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 48 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 48 (tipo -> VOIDTYPE .)


state 26

    (5) var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .

    VAR             reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    INTTYPE         reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    FLOATTYPE       reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    CHARTYPE        reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    BOOLTYPE        reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    VOIDTYPE        reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)
    MAIN            reduce using rule 5 (var_global -> VAR variable_global_id_loop SEMICOLON variable_global_end_loop .)


state 27

    (10) variable_global_end_loop -> var_global .

    VAR             reduce using rule 10 (variable_global_end_loop -> var_global .)
    INTTYPE         reduce using rule 10 (variable_global_end_loop -> var_global .)
    FLOATTYPE       reduce using rule 10 (variable_global_end_loop -> var_global .)
    CHARTYPE        reduce using rule 10 (variable_global_end_loop -> var_global .)
    BOOLTYPE        reduce using rule 10 (variable_global_end_loop -> var_global .)
    VOIDTYPE        reduce using rule 10 (variable_global_end_loop -> var_global .)
    MAIN            reduce using rule 10 (variable_global_end_loop -> var_global .)


state 28

    (6) variable_global_id_loop -> variable_global_id_loop_coma COLON tipo . global_addType
    (12) global_addType -> .

    SEMICOLON       reduce using rule 12 (global_addType -> .)

    global_addType                 shift and go to state 33

state 29

    (8) variable_global_id_loop_coma -> ID add_pila_var_globales COMA . variable_global_id_loop_coma
    (7) variable_global_id_loop_coma -> . ID add_pila_var_globales
    (8) variable_global_id_loop_coma -> . ID add_pila_var_globales COMA variable_global_id_loop_coma

    ID              shift and go to state 13

    variable_global_id_loop_coma   shift and go to state 34

state 30

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 35


state 31

    (21) declaracion_funciones -> funcion declaracion_funciones .

    MAIN            reduce using rule 21 (declaracion_funciones -> funcion declaracion_funciones .)


state 32

    (23) funcion -> tipo FUNC . ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    ID              shift and go to state 36


state 33

    (6) variable_global_id_loop -> variable_global_id_loop_coma COLON tipo global_addType .

    SEMICOLON       reduce using rule 6 (variable_global_id_loop -> variable_global_id_loop_coma COLON tipo global_addType .)


state 34

    (8) variable_global_id_loop_coma -> ID add_pila_var_globales COMA variable_global_id_loop_coma .

    COLON           reduce using rule 8 (variable_global_id_loop_coma -> ID add_pila_var_globales COMA variable_global_id_loop_coma .)


state 35

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 37


state 36

    (23) funcion -> tipo FUNC ID . add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (24) add_dir_funciones -> .

    LPARENTHESIS    reduce using rule 24 (add_dir_funciones -> .)

    add_dir_funciones              shift and go to state 38

state 37

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS . bloque END
    (49) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 39

    bloque                         shift and go to state 40

state 38

    (23) funcion -> tipo FUNC ID add_dir_funciones . LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    LPARENTHESIS    shift and go to state 41


state 39

    (49) bloque -> LCURLY . bloque_est_loop RCURLY
    (50) bloque_est_loop -> . estatuto bloque_est_loop
    (51) bloque_est_loop -> .
    (52) estatuto -> . asignacion
    (53) estatuto -> . condicion
    (54) estatuto -> . escritura
    (55) estatuto -> . regreso
    (56) estatuto -> . ciclo
    (57) estatuto -> . variables_locales
    (95) asignacion -> . ID asignacion_option
    (65) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (59) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (58) regreso -> . RETURN exp SEMICOLON
    (62) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (13) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

    RCURLY          reduce using rule 51 (bloque_est_loop -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 44
    RETURN          shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 49

    regreso                        shift and go to state 52
    ciclo                          shift and go to state 45
    asignacion                     shift and go to state 53
    estatuto                       shift and go to state 46
    variables_locales              shift and go to state 48
    condicion                      shift and go to state 47
    bloque_est_loop                shift and go to state 54
    escritura                      shift and go to state 55

state 40

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 56


state 41

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS . params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad
    (25) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (26) params -> .

    ID              shift and go to state 58
    RPARENTHESIS    reduce using rule 26 (params -> .)

    params                         shift and go to state 57

state 42

    (58) regreso -> RETURN . exp SEMICOLON
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    varcte                         shift and go to state 62
    CTEBOOL                        shift and go to state 70
    factor_exp                     shift and go to state 65
    termino                        shift and go to state 59
    exp                            shift and go to state 71
    factor                         shift and go to state 64
    factor_var                     shift and go to state 72

state 43

    (62) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 73


state 44

    (59) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 74


state 45

    (56) estatuto -> ciclo .

    ID              reduce using rule 56 (estatuto -> ciclo .)
    IF              reduce using rule 56 (estatuto -> ciclo .)
    PRINT           reduce using rule 56 (estatuto -> ciclo .)
    RETURN          reduce using rule 56 (estatuto -> ciclo .)
    WHILE           reduce using rule 56 (estatuto -> ciclo .)
    VAR             reduce using rule 56 (estatuto -> ciclo .)
    RCURLY          reduce using rule 56 (estatuto -> ciclo .)


state 46

    (50) bloque_est_loop -> estatuto . bloque_est_loop
    (50) bloque_est_loop -> . estatuto bloque_est_loop
    (51) bloque_est_loop -> .
    (52) estatuto -> . asignacion
    (53) estatuto -> . condicion
    (54) estatuto -> . escritura
    (55) estatuto -> . regreso
    (56) estatuto -> . ciclo
    (57) estatuto -> . variables_locales
    (95) asignacion -> . ID asignacion_option
    (65) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (59) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (58) regreso -> . RETURN exp SEMICOLON
    (62) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (13) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

    RCURLY          reduce using rule 51 (bloque_est_loop -> .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    PRINT           shift and go to state 44
    RETURN          shift and go to state 42
    WHILE           shift and go to state 43
    VAR             shift and go to state 49

    regreso                        shift and go to state 52
    ciclo                          shift and go to state 45
    asignacion                     shift and go to state 53
    estatuto                       shift and go to state 46
    variables_locales              shift and go to state 48
    condicion                      shift and go to state 47
    bloque_est_loop                shift and go to state 75
    escritura                      shift and go to state 55

state 47

    (53) estatuto -> condicion .

    ID              reduce using rule 53 (estatuto -> condicion .)
    IF              reduce using rule 53 (estatuto -> condicion .)
    PRINT           reduce using rule 53 (estatuto -> condicion .)
    RETURN          reduce using rule 53 (estatuto -> condicion .)
    WHILE           reduce using rule 53 (estatuto -> condicion .)
    VAR             reduce using rule 53 (estatuto -> condicion .)
    RCURLY          reduce using rule 53 (estatuto -> condicion .)


state 48

    (57) estatuto -> variables_locales .

    ID              reduce using rule 57 (estatuto -> variables_locales .)
    IF              reduce using rule 57 (estatuto -> variables_locales .)
    PRINT           reduce using rule 57 (estatuto -> variables_locales .)
    RETURN          reduce using rule 57 (estatuto -> variables_locales .)
    WHILE           reduce using rule 57 (estatuto -> variables_locales .)
    VAR             reduce using rule 57 (estatuto -> variables_locales .)
    RCURLY          reduce using rule 57 (estatuto -> variables_locales .)


state 49

    (13) variables_locales -> VAR . variable_local_id_loop SEMICOLON variable_local_end_loop
    (14) variable_local_id_loop -> . variable_local_id_loop_coma COLON tipo local_addType
    (15) variable_local_id_loop_coma -> . ID add_pila_var_locales
    (16) variable_local_id_loop_coma -> . ID add_pila_var_locales COMA variable_local_id_loop_coma

    ID              shift and go to state 78

    variable_local_id_loop_coma    shift and go to state 76
    variable_local_id_loop         shift and go to state 77

state 50

    (95) asignacion -> ID . asignacion_option
    (96) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (97) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 80
    LBRACKET        shift and go to state 81

    asignacion_option              shift and go to state 79

state 51

    (65) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 82


state 52

    (55) estatuto -> regreso .

    ID              reduce using rule 55 (estatuto -> regreso .)
    IF              reduce using rule 55 (estatuto -> regreso .)
    PRINT           reduce using rule 55 (estatuto -> regreso .)
    RETURN          reduce using rule 55 (estatuto -> regreso .)
    WHILE           reduce using rule 55 (estatuto -> regreso .)
    VAR             reduce using rule 55 (estatuto -> regreso .)
    RCURLY          reduce using rule 55 (estatuto -> regreso .)


state 53

    (52) estatuto -> asignacion .

    ID              reduce using rule 52 (estatuto -> asignacion .)
    IF              reduce using rule 52 (estatuto -> asignacion .)
    PRINT           reduce using rule 52 (estatuto -> asignacion .)
    RETURN          reduce using rule 52 (estatuto -> asignacion .)
    WHILE           reduce using rule 52 (estatuto -> asignacion .)
    VAR             reduce using rule 52 (estatuto -> asignacion .)
    RCURLY          reduce using rule 52 (estatuto -> asignacion .)


state 54

    (49) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 83


state 55

    (54) estatuto -> escritura .

    ID              reduce using rule 54 (estatuto -> escritura .)
    IF              reduce using rule 54 (estatuto -> escritura .)
    PRINT           reduce using rule 54 (estatuto -> escritura .)
    RETURN          reduce using rule 54 (estatuto -> escritura .)
    WHILE           reduce using rule 54 (estatuto -> escritura .)
    VAR             reduce using rule 54 (estatuto -> escritura .)
    RCURLY          reduce using rule 54 (estatuto -> escritura .)


state 56

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales add_main_goto update_dir_proc declaracion_funciones MAIN LPARENTHESIS RPARENTHESIS bloque END .)


state 57

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params . RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad

    RPARENTHESIS    shift and go to state 84


state 58

    (25) params -> ID . add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (29) add_pila_funciones -> .

    COMA            reduce using rule 29 (add_pila_funciones -> .)
    COLON           reduce using rule 29 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 85

state 59

    (103) exp -> termino . nodo5 exp_loop
    (110) nodo5 -> .

    ADDITION        reduce using rule 110 (nodo5 -> .)
    SUBTRACTION     reduce using rule 110 (nodo5 -> .)
    SEMICOLON       reduce using rule 110 (nodo5 -> .)
    LESS            reduce using rule 110 (nodo5 -> .)
    GREATER         reduce using rule 110 (nodo5 -> .)
    LESSEQUAL       reduce using rule 110 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 110 (nodo5 -> .)
    NOTEQUAL        reduce using rule 110 (nodo5 -> .)
    EQUAL           reduce using rule 110 (nodo5 -> .)
    AND             reduce using rule 110 (nodo5 -> .)
    OR              reduce using rule 110 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 110 (nodo5 -> .)
    ID              reduce using rule 110 (nodo5 -> .)
    CTEINT          reduce using rule 110 (nodo5 -> .)
    CTEFLOAT        reduce using rule 110 (nodo5 -> .)
    CTECHAR         reduce using rule 110 (nodo5 -> .)
    TRUE            reduce using rule 110 (nodo5 -> .)
    FALSE           reduce using rule 110 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 110 (nodo5 -> .)

    nodo5                          shift and go to state 86

state 60

    (130) varcte -> CTECHAR . nodoCteC
    (139) nodoCteC -> .

    MULTIPLICATION  reduce using rule 139 (nodoCteC -> .)
    DIVISION        reduce using rule 139 (nodoCteC -> .)
    ADDITION        reduce using rule 139 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 139 (nodoCteC -> .)
    SEMICOLON       reduce using rule 139 (nodoCteC -> .)
    LESS            reduce using rule 139 (nodoCteC -> .)
    GREATER         reduce using rule 139 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 139 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 139 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 139 (nodoCteC -> .)
    EQUAL           reduce using rule 139 (nodoCteC -> .)
    AND             reduce using rule 139 (nodoCteC -> .)
    OR              reduce using rule 139 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 139 (nodoCteC -> .)
    ID              reduce using rule 139 (nodoCteC -> .)
    CTEINT          reduce using rule 139 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 139 (nodoCteC -> .)
    CTECHAR         reduce using rule 139 (nodoCteC -> .)
    TRUE            reduce using rule 139 (nodoCteC -> .)
    FALSE           reduce using rule 139 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 139 (nodoCteC -> .)

    nodoCteC                       shift and go to state 87

state 61

    (131) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 131 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 131 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 131 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 131 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 131 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 131 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 131 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 131 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 131 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 131 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 131 (CTEBOOL -> TRUE .)
    AND             reduce using rule 131 (CTEBOOL -> TRUE .)
    OR              reduce using rule 131 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 131 (CTEBOOL -> TRUE .)
    ID              reduce using rule 131 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 131 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 131 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 131 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 131 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 131 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 131 (CTEBOOL -> TRUE .)


state 62

    (121) factor_var -> varcte . nodo1
    (123) nodo1 -> .

    MULTIPLICATION  reduce using rule 123 (nodo1 -> .)
    DIVISION        reduce using rule 123 (nodo1 -> .)
    ADDITION        reduce using rule 123 (nodo1 -> .)
    SUBTRACTION     reduce using rule 123 (nodo1 -> .)
    SEMICOLON       reduce using rule 123 (nodo1 -> .)
    LESS            reduce using rule 123 (nodo1 -> .)
    GREATER         reduce using rule 123 (nodo1 -> .)
    LESSEQUAL       reduce using rule 123 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 123 (nodo1 -> .)
    NOTEQUAL        reduce using rule 123 (nodo1 -> .)
    EQUAL           reduce using rule 123 (nodo1 -> .)
    AND             reduce using rule 123 (nodo1 -> .)
    OR              reduce using rule 123 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 123 (nodo1 -> .)
    ID              reduce using rule 123 (nodo1 -> .)
    CTEINT          reduce using rule 123 (nodo1 -> .)
    CTEFLOAT        reduce using rule 123 (nodo1 -> .)
    CTECHAR         reduce using rule 123 (nodo1 -> .)
    TRUE            reduce using rule 123 (nodo1 -> .)
    FALSE           reduce using rule 123 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 123 (nodo1 -> .)

    nodo1                          shift and go to state 88

state 63

    (128) varcte -> CTEFLOAT . nodoCteF
    (137) nodoCteF -> .

    MULTIPLICATION  reduce using rule 137 (nodoCteF -> .)
    DIVISION        reduce using rule 137 (nodoCteF -> .)
    ADDITION        reduce using rule 137 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 137 (nodoCteF -> .)
    SEMICOLON       reduce using rule 137 (nodoCteF -> .)
    LESS            reduce using rule 137 (nodoCteF -> .)
    GREATER         reduce using rule 137 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 137 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 137 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 137 (nodoCteF -> .)
    EQUAL           reduce using rule 137 (nodoCteF -> .)
    AND             reduce using rule 137 (nodoCteF -> .)
    OR              reduce using rule 137 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 137 (nodoCteF -> .)
    ID              reduce using rule 137 (nodoCteF -> .)
    CTEINT          reduce using rule 137 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 137 (nodoCteF -> .)
    CTECHAR         reduce using rule 137 (nodoCteF -> .)
    TRUE            reduce using rule 137 (nodoCteF -> .)
    FALSE           reduce using rule 137 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 137 (nodoCteF -> .)

    nodoCteF                       shift and go to state 89

state 64

    (111) termino -> factor . nodo4 termino_loop
    (118) nodo4 -> .

    MULTIPLICATION  reduce using rule 118 (nodo4 -> .)
    DIVISION        reduce using rule 118 (nodo4 -> .)
    ADDITION        reduce using rule 118 (nodo4 -> .)
    SUBTRACTION     reduce using rule 118 (nodo4 -> .)
    SEMICOLON       reduce using rule 118 (nodo4 -> .)
    LESS            reduce using rule 118 (nodo4 -> .)
    GREATER         reduce using rule 118 (nodo4 -> .)
    LESSEQUAL       reduce using rule 118 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 118 (nodo4 -> .)
    NOTEQUAL        reduce using rule 118 (nodo4 -> .)
    EQUAL           reduce using rule 118 (nodo4 -> .)
    AND             reduce using rule 118 (nodo4 -> .)
    OR              reduce using rule 118 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 118 (nodo4 -> .)
    ID              reduce using rule 118 (nodo4 -> .)
    CTEINT          reduce using rule 118 (nodo4 -> .)
    CTEFLOAT        reduce using rule 118 (nodo4 -> .)
    CTECHAR         reduce using rule 118 (nodo4 -> .)
    TRUE            reduce using rule 118 (nodo4 -> .)
    FALSE           reduce using rule 118 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 118 (nodo4 -> .)

    nodo4                          shift and go to state 90

state 65

    (120) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 120 (factor -> factor_exp .)
    DIVISION        reduce using rule 120 (factor -> factor_exp .)
    ADDITION        reduce using rule 120 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 120 (factor -> factor_exp .)
    AND             reduce using rule 120 (factor -> factor_exp .)
    OR              reduce using rule 120 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 120 (factor -> factor_exp .)
    ID              reduce using rule 120 (factor -> factor_exp .)
    CTEINT          reduce using rule 120 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 120 (factor -> factor_exp .)
    CTECHAR         reduce using rule 120 (factor -> factor_exp .)
    TRUE            reduce using rule 120 (factor -> factor_exp .)
    FALSE           reduce using rule 120 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 120 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 120 (factor -> factor_exp .)
    LESS            reduce using rule 120 (factor -> factor_exp .)
    GREATER         reduce using rule 120 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 120 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 120 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 120 (factor -> factor_exp .)
    EQUAL           reduce using rule 120 (factor -> factor_exp .)


state 66

    (127) varcte -> CTEINT . nodoCteE
    (136) nodoCteE -> .

    MULTIPLICATION  reduce using rule 136 (nodoCteE -> .)
    DIVISION        reduce using rule 136 (nodoCteE -> .)
    ADDITION        reduce using rule 136 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 136 (nodoCteE -> .)
    SEMICOLON       reduce using rule 136 (nodoCteE -> .)
    LESS            reduce using rule 136 (nodoCteE -> .)
    GREATER         reduce using rule 136 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 136 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 136 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 136 (nodoCteE -> .)
    EQUAL           reduce using rule 136 (nodoCteE -> .)
    AND             reduce using rule 136 (nodoCteE -> .)
    OR              reduce using rule 136 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 136 (nodoCteE -> .)
    ID              reduce using rule 136 (nodoCteE -> .)
    CTEINT          reduce using rule 136 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 136 (nodoCteE -> .)
    CTECHAR         reduce using rule 136 (nodoCteE -> .)
    TRUE            reduce using rule 136 (nodoCteE -> .)
    FALSE           reduce using rule 136 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 136 (nodoCteE -> .)

    nodoCteE                       shift and go to state 91

state 67

    (122) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (124) nodo6 -> .

    LPARENTHESIS    reduce using rule 124 (nodo6 -> .)
    ID              reduce using rule 124 (nodo6 -> .)
    CTEINT          reduce using rule 124 (nodo6 -> .)
    CTEFLOAT        reduce using rule 124 (nodo6 -> .)
    CTECHAR         reduce using rule 124 (nodo6 -> .)
    TRUE            reduce using rule 124 (nodo6 -> .)
    FALSE           reduce using rule 124 (nodo6 -> .)

    nodo6                          shift and go to state 92

state 68

    (126) varcte -> ID . varcte_arr nodoCteV
    (133) varcte_arr -> . LBRACKET RBRACKET
    (134) varcte_arr -> .

    LBRACKET        shift and go to state 93
    MULTIPLICATION  reduce using rule 134 (varcte_arr -> .)
    DIVISION        reduce using rule 134 (varcte_arr -> .)
    ADDITION        reduce using rule 134 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 134 (varcte_arr -> .)
    SEMICOLON       reduce using rule 134 (varcte_arr -> .)
    LESS            reduce using rule 134 (varcte_arr -> .)
    GREATER         reduce using rule 134 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 134 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 134 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 134 (varcte_arr -> .)
    EQUAL           reduce using rule 134 (varcte_arr -> .)
    AND             reduce using rule 134 (varcte_arr -> .)
    OR              reduce using rule 134 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 134 (varcte_arr -> .)
    ID              reduce using rule 134 (varcte_arr -> .)
    CTEINT          reduce using rule 134 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 134 (varcte_arr -> .)
    CTECHAR         reduce using rule 134 (varcte_arr -> .)
    TRUE            reduce using rule 134 (varcte_arr -> .)
    FALSE           reduce using rule 134 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 134 (varcte_arr -> .)

    varcte_arr                     shift and go to state 94

state 69

    (132) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 132 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 132 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 132 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 132 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 132 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 132 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 132 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 132 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 132 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 132 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 132 (CTEBOOL -> FALSE .)
    AND             reduce using rule 132 (CTEBOOL -> FALSE .)
    OR              reduce using rule 132 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 132 (CTEBOOL -> FALSE .)
    ID              reduce using rule 132 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 132 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 132 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 132 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 132 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 132 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 132 (CTEBOOL -> FALSE .)


state 70

    (129) varcte -> CTEBOOL . nodoCteB
    (138) nodoCteB -> .

    MULTIPLICATION  reduce using rule 138 (nodoCteB -> .)
    DIVISION        reduce using rule 138 (nodoCteB -> .)
    ADDITION        reduce using rule 138 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 138 (nodoCteB -> .)
    SEMICOLON       reduce using rule 138 (nodoCteB -> .)
    LESS            reduce using rule 138 (nodoCteB -> .)
    GREATER         reduce using rule 138 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 138 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 138 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 138 (nodoCteB -> .)
    EQUAL           reduce using rule 138 (nodoCteB -> .)
    AND             reduce using rule 138 (nodoCteB -> .)
    OR              reduce using rule 138 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 138 (nodoCteB -> .)
    ID              reduce using rule 138 (nodoCteB -> .)
    CTEINT          reduce using rule 138 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 138 (nodoCteB -> .)
    CTECHAR         reduce using rule 138 (nodoCteB -> .)
    TRUE            reduce using rule 138 (nodoCteB -> .)
    FALSE           reduce using rule 138 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 138 (nodoCteB -> .)

    nodoCteB                       shift and go to state 95

state 71

    (58) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 96


state 72

    (119) factor -> factor_var .

    MULTIPLICATION  reduce using rule 119 (factor -> factor_var .)
    DIVISION        reduce using rule 119 (factor -> factor_var .)
    ADDITION        reduce using rule 119 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 119 (factor -> factor_var .)
    AND             reduce using rule 119 (factor -> factor_var .)
    OR              reduce using rule 119 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 119 (factor -> factor_var .)
    ID              reduce using rule 119 (factor -> factor_var .)
    CTEINT          reduce using rule 119 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 119 (factor -> factor_var .)
    CTECHAR         reduce using rule 119 (factor -> factor_var .)
    TRUE            reduce using rule 119 (factor -> factor_var .)
    FALSE           reduce using rule 119 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 119 (factor -> factor_var .)
    SEMICOLON       reduce using rule 119 (factor -> factor_var .)
    LESS            reduce using rule 119 (factor -> factor_var .)
    GREATER         reduce using rule 119 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 119 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 119 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 119 (factor -> factor_var .)
    EQUAL           reduce using rule 119 (factor -> factor_var .)


state 73

    (62) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (63) nodo16 -> .

    LPARENTHESIS    reduce using rule 63 (nodo16 -> .)
    ID              reduce using rule 63 (nodo16 -> .)
    CTEINT          reduce using rule 63 (nodo16 -> .)
    CTEFLOAT        reduce using rule 63 (nodo16 -> .)
    CTECHAR         reduce using rule 63 (nodo16 -> .)
    TRUE            reduce using rule 63 (nodo16 -> .)
    FALSE           reduce using rule 63 (nodo16 -> .)

    nodo16                         shift and go to state 97

state 74

    (59) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (60) escritura_type -> . expresion
    (61) escritura_type -> . QUOTE CTECHAR QUOTE
    (71) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 98
    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    escritura_type                 shift and go to state 99
    nuevaexp                       shift and go to state 100
    expresion                      shift and go to state 101
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 75

    (50) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 50 (bloque_est_loop -> estatuto bloque_est_loop .)


state 76

    (14) variable_local_id_loop -> variable_local_id_loop_coma . COLON tipo local_addType

    COLON           shift and go to state 103


state 77

    (13) variables_locales -> VAR variable_local_id_loop . SEMICOLON variable_local_end_loop

    SEMICOLON       shift and go to state 104


state 78

    (15) variable_local_id_loop_coma -> ID . add_pila_var_locales
    (16) variable_local_id_loop_coma -> ID . add_pila_var_locales COMA variable_local_id_loop_coma
    (17) add_pila_var_locales -> .

    COMA            reduce using rule 17 (add_pila_var_locales -> .)
    COLON           reduce using rule 17 (add_pila_var_locales -> .)

    add_pila_var_locales           shift and go to state 105

state 79

    (95) asignacion -> ID asignacion_option .

    ID              reduce using rule 95 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 95 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 95 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 95 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 95 (asignacion -> ID asignacion_option .)
    VAR             reduce using rule 95 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 95 (asignacion -> ID asignacion_option .)


state 80

    (96) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (71) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 100
    expresion                      shift and go to state 106
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 81

    (97) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 107


state 82

    (65) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (71) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 100
    expresion                      shift and go to state 108
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 83

    (49) bloque -> LCURLY bloque_est_loop RCURLY .

    END             reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VAR             reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 49 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 84

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS . vars_locales_funcion add_cantidad_vars bloque return_cuad
    (33) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (34) vars_locales_funcion -> .

    VAR             shift and go to state 110
    LCURLY          reduce using rule 34 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 109

state 85

    (25) params -> ID add_pila_funciones . params_loop COLON tipo function_add_type semicolon_function_loop
    (27) params_loop -> . COMA ID add_pila_funciones params_loop
    (28) params_loop -> .

    COMA            shift and go to state 112
    COLON           reduce using rule 28 (params_loop -> .)

    params_loop                    shift and go to state 111

state 86

    (103) exp -> termino nodo5 . exp_loop
    (104) exp_loop -> . exp_type_loop
    (105) exp_loop -> .
    (106) exp_type_loop -> . ADDITION nodo3_suma exp
    (107) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 105 (exp_loop -> .)
    LESS            reduce using rule 105 (exp_loop -> .)
    GREATER         reduce using rule 105 (exp_loop -> .)
    LESSEQUAL       reduce using rule 105 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 105 (exp_loop -> .)
    NOTEQUAL        reduce using rule 105 (exp_loop -> .)
    EQUAL           reduce using rule 105 (exp_loop -> .)
    AND             reduce using rule 105 (exp_loop -> .)
    OR              reduce using rule 105 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 105 (exp_loop -> .)
    ID              reduce using rule 105 (exp_loop -> .)
    CTEINT          reduce using rule 105 (exp_loop -> .)
    CTEFLOAT        reduce using rule 105 (exp_loop -> .)
    CTECHAR         reduce using rule 105 (exp_loop -> .)
    TRUE            reduce using rule 105 (exp_loop -> .)
    FALSE           reduce using rule 105 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 105 (exp_loop -> .)
    ADDITION        shift and go to state 113
    SUBTRACTION     shift and go to state 116

    exp_loop                       shift and go to state 114
    exp_type_loop                  shift and go to state 115

state 87

    (130) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 130 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 130 (varcte -> CTECHAR nodoCteC .)


state 88

    (121) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 121 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 121 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 121 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 121 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 121 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 121 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 121 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 121 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 121 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 121 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 121 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 121 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 121 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 121 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 121 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 121 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 121 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 121 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 121 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 121 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 121 (factor_var -> varcte nodo1 .)


state 89

    (128) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 128 (varcte -> CTEFLOAT nodoCteF .)


state 90

    (111) termino -> factor nodo4 . termino_loop
    (112) termino_loop -> . termino_type_loop
    (113) termino_loop -> .
    (114) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (115) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 113 (termino_loop -> .)
    SUBTRACTION     reduce using rule 113 (termino_loop -> .)
    SEMICOLON       reduce using rule 113 (termino_loop -> .)
    LESS            reduce using rule 113 (termino_loop -> .)
    GREATER         reduce using rule 113 (termino_loop -> .)
    LESSEQUAL       reduce using rule 113 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 113 (termino_loop -> .)
    NOTEQUAL        reduce using rule 113 (termino_loop -> .)
    EQUAL           reduce using rule 113 (termino_loop -> .)
    AND             reduce using rule 113 (termino_loop -> .)
    OR              reduce using rule 113 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 113 (termino_loop -> .)
    ID              reduce using rule 113 (termino_loop -> .)
    CTEINT          reduce using rule 113 (termino_loop -> .)
    CTEFLOAT        reduce using rule 113 (termino_loop -> .)
    CTECHAR         reduce using rule 113 (termino_loop -> .)
    TRUE            reduce using rule 113 (termino_loop -> .)
    FALSE           reduce using rule 113 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 113 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 119
    DIVISION        shift and go to state 117

    termino_type_loop              shift and go to state 118
    termino_loop                   shift and go to state 120

state 91

    (127) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 127 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 127 (varcte -> CTEINT nodoCteE .)


state 92

    (122) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (71) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 100
    expresion                      shift and go to state 121
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 93

    (133) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 122


state 94

    (126) varcte -> ID varcte_arr . nodoCteV
    (135) nodoCteV -> .

    MULTIPLICATION  reduce using rule 135 (nodoCteV -> .)
    DIVISION        reduce using rule 135 (nodoCteV -> .)
    ADDITION        reduce using rule 135 (nodoCteV -> .)
    SUBTRACTION     reduce using rule 135 (nodoCteV -> .)
    SEMICOLON       reduce using rule 135 (nodoCteV -> .)
    LESS            reduce using rule 135 (nodoCteV -> .)
    GREATER         reduce using rule 135 (nodoCteV -> .)
    LESSEQUAL       reduce using rule 135 (nodoCteV -> .)
    GREATEREQUAL    reduce using rule 135 (nodoCteV -> .)
    NOTEQUAL        reduce using rule 135 (nodoCteV -> .)
    EQUAL           reduce using rule 135 (nodoCteV -> .)
    AND             reduce using rule 135 (nodoCteV -> .)
    OR              reduce using rule 135 (nodoCteV -> .)
    LPARENTHESIS    reduce using rule 135 (nodoCteV -> .)
    ID              reduce using rule 135 (nodoCteV -> .)
    CTEINT          reduce using rule 135 (nodoCteV -> .)
    CTEFLOAT        reduce using rule 135 (nodoCteV -> .)
    CTECHAR         reduce using rule 135 (nodoCteV -> .)
    TRUE            reduce using rule 135 (nodoCteV -> .)
    FALSE           reduce using rule 135 (nodoCteV -> .)
    RPARENTHESIS    reduce using rule 135 (nodoCteV -> .)

    nodoCteV                       shift and go to state 123

state 95

    (129) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 129 (varcte -> CTEBOOL nodoCteB .)


state 96

    (58) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)
    VAR             reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 58 (regreso -> RETURN exp SEMICOLON .)


state 97

    (62) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (71) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 100
    expresion                      shift and go to state 124
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 98

    (61) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 125


state 99

    (59) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 126


state 100

    (71) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (72) expresion_option -> . AND nodo12_and nuevaexp
    (73) expresion_option -> . OR nodo12_or nuevaexp
    (74) expresion_option -> .

    AND             shift and go to state 127
    OR              shift and go to state 129
    LPARENTHESIS    reduce using rule 74 (expresion_option -> .)
    ID              reduce using rule 74 (expresion_option -> .)
    CTEINT          reduce using rule 74 (expresion_option -> .)
    CTEFLOAT        reduce using rule 74 (expresion_option -> .)
    CTECHAR         reduce using rule 74 (expresion_option -> .)
    TRUE            reduce using rule 74 (expresion_option -> .)
    FALSE           reduce using rule 74 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 74 (expresion_option -> .)
    SEMICOLON       reduce using rule 74 (expresion_option -> .)

    expresion_option               shift and go to state 128

state 101

    (60) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 60 (escritura_type -> expresion .)


state 102

    (80) nuevaexp -> exp . nuevaexp_type nodo10
    (81) nuevaexp_type -> . LESS nodo9_menor exp
    (82) nuevaexp_type -> . GREATER nodo9_mayor exp
    (83) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (84) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (85) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (86) nuevaexp_type -> . EQUAL nodo9_igual exp
    (87) nuevaexp_type -> .

    LESS            shift and go to state 132
    GREATER         shift and go to state 131
    LESSEQUAL       shift and go to state 136
    GREATEREQUAL    shift and go to state 130
    NOTEQUAL        shift and go to state 134
    EQUAL           shift and go to state 133
    AND             reduce using rule 87 (nuevaexp_type -> .)
    OR              reduce using rule 87 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 87 (nuevaexp_type -> .)
    ID              reduce using rule 87 (nuevaexp_type -> .)
    CTEINT          reduce using rule 87 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 87 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 87 (nuevaexp_type -> .)
    TRUE            reduce using rule 87 (nuevaexp_type -> .)
    FALSE           reduce using rule 87 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 87 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 87 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 135

state 103

    (14) variable_local_id_loop -> variable_local_id_loop_coma COLON . tipo local_addType
    (44) tipo -> . INTTYPE
    (45) tipo -> . FLOATTYPE
    (46) tipo -> . CHARTYPE
    (47) tipo -> . BOOLTYPE
    (48) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 137

state 104

    (13) variables_locales -> VAR variable_local_id_loop SEMICOLON . variable_local_end_loop
    (18) variable_local_end_loop -> . variables_locales
    (19) variable_local_end_loop -> .
    (13) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

  ! shift/reduce conflict for VAR resolved as shift
    ID              reduce using rule 19 (variable_local_end_loop -> .)
    IF              reduce using rule 19 (variable_local_end_loop -> .)
    PRINT           reduce using rule 19 (variable_local_end_loop -> .)
    RETURN          reduce using rule 19 (variable_local_end_loop -> .)
    WHILE           reduce using rule 19 (variable_local_end_loop -> .)
    RCURLY          reduce using rule 19 (variable_local_end_loop -> .)
    VAR             shift and go to state 49

  ! VAR             [ reduce using rule 19 (variable_local_end_loop -> .) ]

    variable_local_end_loop        shift and go to state 138
    variables_locales              shift and go to state 139

state 105

    (15) variable_local_id_loop_coma -> ID add_pila_var_locales .
    (16) variable_local_id_loop_coma -> ID add_pila_var_locales . COMA variable_local_id_loop_coma

    COLON           reduce using rule 15 (variable_local_id_loop_coma -> ID add_pila_var_locales .)
    COMA            shift and go to state 140


state 106

    (96) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (102) nodo8 -> .

    SEMICOLON       reduce using rule 102 (nodo8 -> .)

    nodo8                          shift and go to state 141

state 107

    (97) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 142


state 108

    (65) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 143


state 109

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion . add_cantidad_vars bloque return_cuad
    (30) add_cantidad_vars -> .

    LCURLY          reduce using rule 30 (add_cantidad_vars -> .)

    add_cantidad_vars              shift and go to state 144

state 110

    (33) vars_locales_funcion -> VAR . ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop

    ID              shift and go to state 145


state 111

    (25) params -> ID add_pila_funciones params_loop . COLON tipo function_add_type semicolon_function_loop

    COLON           shift and go to state 146


state 112

    (27) params_loop -> COMA . ID add_pila_funciones params_loop

    ID              shift and go to state 147


state 113

    (106) exp_type_loop -> ADDITION . nodo3_suma exp
    (108) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 108 (nodo3_suma -> .)
    ID              reduce using rule 108 (nodo3_suma -> .)
    CTEINT          reduce using rule 108 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 108 (nodo3_suma -> .)
    CTECHAR         reduce using rule 108 (nodo3_suma -> .)
    TRUE            reduce using rule 108 (nodo3_suma -> .)
    FALSE           reduce using rule 108 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 148

state 114

    (103) exp -> termino nodo5 exp_loop .

    SEMICOLON       reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    LESS            reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 103 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 103 (exp -> termino nodo5 exp_loop .)


state 115

    (104) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 104 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 104 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 104 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 104 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 104 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 104 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 104 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 104 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 104 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 104 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 104 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 104 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 104 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 104 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 104 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 104 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 104 (exp_loop -> exp_type_loop .)


state 116

    (107) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (109) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 109 (nodo3_resta -> .)
    ID              reduce using rule 109 (nodo3_resta -> .)
    CTEINT          reduce using rule 109 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 109 (nodo3_resta -> .)
    CTECHAR         reduce using rule 109 (nodo3_resta -> .)
    TRUE            reduce using rule 109 (nodo3_resta -> .)
    FALSE           reduce using rule 109 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 149

state 117

    (115) termino_type_loop -> DIVISION . nodo2_div termino
    (117) nodo2_div -> .

    LPARENTHESIS    reduce using rule 117 (nodo2_div -> .)
    ID              reduce using rule 117 (nodo2_div -> .)
    CTEINT          reduce using rule 117 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 117 (nodo2_div -> .)
    CTECHAR         reduce using rule 117 (nodo2_div -> .)
    TRUE            reduce using rule 117 (nodo2_div -> .)
    FALSE           reduce using rule 117 (nodo2_div -> .)

    nodo2_div                      shift and go to state 150

state 118

    (112) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 112 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 112 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 112 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 112 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 112 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 112 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 112 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 112 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 112 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 112 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 112 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 112 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 112 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 112 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 112 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 112 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 112 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 112 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 112 (termino_loop -> termino_type_loop .)


state 119

    (114) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (116) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 116 (nodo2_mult -> .)
    ID              reduce using rule 116 (nodo2_mult -> .)
    CTEINT          reduce using rule 116 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 116 (nodo2_mult -> .)
    CTECHAR         reduce using rule 116 (nodo2_mult -> .)
    TRUE            reduce using rule 116 (nodo2_mult -> .)
    FALSE           reduce using rule 116 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 151

state 120

    (111) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 111 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 111 (termino -> factor nodo4 termino_loop .)


state 121

    (122) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 152


state 122

    (133) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 133 (varcte_arr -> LBRACKET RBRACKET .)


state 123

    (126) varcte -> ID varcte_arr nodoCteV .

    MULTIPLICATION  reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    DIVISION        reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    ADDITION        reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    SUBTRACTION     reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    LESS            reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    GREATER         reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    LESSEQUAL       reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    GREATEREQUAL    reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    NOTEQUAL        reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    EQUAL           reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    AND             reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    OR              reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    LPARENTHESIS    reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    ID              reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    CTEINT          reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    CTEFLOAT        reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    CTECHAR         reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    TRUE            reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    FALSE           reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    RPARENTHESIS    reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)
    SEMICOLON       reduce using rule 126 (varcte -> ID varcte_arr nodoCteV .)


state 124

    (62) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 153


state 125

    (61) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 154


state 126

    (59) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 155


state 127

    (72) expresion_option -> AND . nodo12_and nuevaexp
    (77) nodo12_and -> .

    LPARENTHESIS    reduce using rule 77 (nodo12_and -> .)
    ID              reduce using rule 77 (nodo12_and -> .)
    CTEINT          reduce using rule 77 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 77 (nodo12_and -> .)
    CTECHAR         reduce using rule 77 (nodo12_and -> .)
    TRUE            reduce using rule 77 (nodo12_and -> .)
    FALSE           reduce using rule 77 (nodo12_and -> .)

    nodo12_and                     shift and go to state 156

state 128

    (71) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (79) nodo11 -> .

    LPARENTHESIS    reduce using rule 79 (nodo11 -> .)
    ID              reduce using rule 79 (nodo11 -> .)
    CTEINT          reduce using rule 79 (nodo11 -> .)
    CTEFLOAT        reduce using rule 79 (nodo11 -> .)
    CTECHAR         reduce using rule 79 (nodo11 -> .)
    TRUE            reduce using rule 79 (nodo11 -> .)
    FALSE           reduce using rule 79 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 79 (nodo11 -> .)
    SEMICOLON       reduce using rule 79 (nodo11 -> .)

    nodo11                         shift and go to state 157

state 129

    (73) expresion_option -> OR . nodo12_or nuevaexp
    (78) nodo12_or -> .

    LPARENTHESIS    reduce using rule 78 (nodo12_or -> .)
    ID              reduce using rule 78 (nodo12_or -> .)
    CTEINT          reduce using rule 78 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 78 (nodo12_or -> .)
    CTECHAR         reduce using rule 78 (nodo12_or -> .)
    TRUE            reduce using rule 78 (nodo12_or -> .)
    FALSE           reduce using rule 78 (nodo12_or -> .)

    nodo12_or                      shift and go to state 158

state 130

    (84) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (92) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 92 (nodo9_mayorig -> .)
    ID              reduce using rule 92 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 92 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 92 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 92 (nodo9_mayorig -> .)
    TRUE            reduce using rule 92 (nodo9_mayorig -> .)
    FALSE           reduce using rule 92 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 159

state 131

    (82) nuevaexp_type -> GREATER . nodo9_mayor exp
    (90) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 90 (nodo9_mayor -> .)
    ID              reduce using rule 90 (nodo9_mayor -> .)
    CTEINT          reduce using rule 90 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 90 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 90 (nodo9_mayor -> .)
    TRUE            reduce using rule 90 (nodo9_mayor -> .)
    FALSE           reduce using rule 90 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 160

state 132

    (81) nuevaexp_type -> LESS . nodo9_menor exp
    (89) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 89 (nodo9_menor -> .)
    ID              reduce using rule 89 (nodo9_menor -> .)
    CTEINT          reduce using rule 89 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 89 (nodo9_menor -> .)
    CTECHAR         reduce using rule 89 (nodo9_menor -> .)
    TRUE            reduce using rule 89 (nodo9_menor -> .)
    FALSE           reduce using rule 89 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 161

state 133

    (86) nuevaexp_type -> EQUAL . nodo9_igual exp
    (94) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 94 (nodo9_igual -> .)
    ID              reduce using rule 94 (nodo9_igual -> .)
    CTEINT          reduce using rule 94 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 94 (nodo9_igual -> .)
    CTECHAR         reduce using rule 94 (nodo9_igual -> .)
    TRUE            reduce using rule 94 (nodo9_igual -> .)
    FALSE           reduce using rule 94 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 162

state 134

    (85) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (93) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 93 (nodo9_dif -> .)
    ID              reduce using rule 93 (nodo9_dif -> .)
    CTEINT          reduce using rule 93 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 93 (nodo9_dif -> .)
    CTECHAR         reduce using rule 93 (nodo9_dif -> .)
    TRUE            reduce using rule 93 (nodo9_dif -> .)
    FALSE           reduce using rule 93 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 163

state 135

    (80) nuevaexp -> exp nuevaexp_type . nodo10
    (88) nodo10 -> .

    AND             reduce using rule 88 (nodo10 -> .)
    OR              reduce using rule 88 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 88 (nodo10 -> .)
    ID              reduce using rule 88 (nodo10 -> .)
    CTEINT          reduce using rule 88 (nodo10 -> .)
    CTEFLOAT        reduce using rule 88 (nodo10 -> .)
    CTECHAR         reduce using rule 88 (nodo10 -> .)
    TRUE            reduce using rule 88 (nodo10 -> .)
    FALSE           reduce using rule 88 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 88 (nodo10 -> .)
    SEMICOLON       reduce using rule 88 (nodo10 -> .)

    nodo10                         shift and go to state 164

state 136

    (83) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (91) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 91 (nodo9_menorig -> .)
    ID              reduce using rule 91 (nodo9_menorig -> .)
    CTEINT          reduce using rule 91 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 91 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 91 (nodo9_menorig -> .)
    TRUE            reduce using rule 91 (nodo9_menorig -> .)
    FALSE           reduce using rule 91 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 165

state 137

    (14) variable_local_id_loop -> variable_local_id_loop_coma COLON tipo . local_addType
    (20) local_addType -> .

    SEMICOLON       reduce using rule 20 (local_addType -> .)

    local_addType                  shift and go to state 166

state 138

    (13) variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .

    ID              reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    IF              reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    PRINT           reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RETURN          reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    WHILE           reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    VAR             reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RCURLY          reduce using rule 13 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)


state 139

    (18) variable_local_end_loop -> variables_locales .

    ID              reduce using rule 18 (variable_local_end_loop -> variables_locales .)
    IF              reduce using rule 18 (variable_local_end_loop -> variables_locales .)
    PRINT           reduce using rule 18 (variable_local_end_loop -> variables_locales .)
    RETURN          reduce using rule 18 (variable_local_end_loop -> variables_locales .)
    WHILE           reduce using rule 18 (variable_local_end_loop -> variables_locales .)
    VAR             reduce using rule 18 (variable_local_end_loop -> variables_locales .)
    RCURLY          reduce using rule 18 (variable_local_end_loop -> variables_locales .)


state 140

    (16) variable_local_id_loop_coma -> ID add_pila_var_locales COMA . variable_local_id_loop_coma
    (15) variable_local_id_loop_coma -> . ID add_pila_var_locales
    (16) variable_local_id_loop_coma -> . ID add_pila_var_locales COMA variable_local_id_loop_coma

    ID              shift and go to state 78

    variable_local_id_loop_coma    shift and go to state 167

state 141

    (96) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 168


state 142

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 169


state 143

    (65) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (70) nodo13 -> .

    LCURLY          reduce using rule 70 (nodo13 -> .)

    nodo13                         shift and go to state 170

state 144

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars . bloque return_cuad
    (49) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 39

    bloque                         shift and go to state 171

state 145

    (33) vars_locales_funcion -> VAR ID . add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (29) add_pila_funciones -> .

    COMA            reduce using rule 29 (add_pila_funciones -> .)
    COLON           reduce using rule 29 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 172

state 146

    (25) params -> ID add_pila_funciones params_loop COLON . tipo function_add_type semicolon_function_loop
    (44) tipo -> . INTTYPE
    (45) tipo -> . FLOATTYPE
    (46) tipo -> . CHARTYPE
    (47) tipo -> . BOOLTYPE
    (48) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 173

state 147

    (27) params_loop -> COMA ID . add_pila_funciones params_loop
    (29) add_pila_funciones -> .

    COMA            reduce using rule 29 (add_pila_funciones -> .)
    COLON           reduce using rule 29 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 174

state 148

    (106) exp_type_loop -> ADDITION nodo3_suma . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 175
    factor_var                     shift and go to state 72

state 149

    (107) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 176
    factor_var                     shift and go to state 72

state 150

    (115) termino_type_loop -> DIVISION nodo2_div . termino
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    varcte                         shift and go to state 62
    CTEBOOL                        shift and go to state 70
    factor_exp                     shift and go to state 65
    termino                        shift and go to state 177
    factor                         shift and go to state 64
    factor_var                     shift and go to state 72

state 151

    (114) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    varcte                         shift and go to state 62
    CTEBOOL                        shift and go to state 70
    factor_exp                     shift and go to state 65
    termino                        shift and go to state 178
    factor                         shift and go to state 64
    factor_var                     shift and go to state 72

state 152

    (122) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (125) nodo7 -> .

    MULTIPLICATION  reduce using rule 125 (nodo7 -> .)
    DIVISION        reduce using rule 125 (nodo7 -> .)
    ADDITION        reduce using rule 125 (nodo7 -> .)
    SUBTRACTION     reduce using rule 125 (nodo7 -> .)
    SEMICOLON       reduce using rule 125 (nodo7 -> .)
    LESS            reduce using rule 125 (nodo7 -> .)
    GREATER         reduce using rule 125 (nodo7 -> .)
    LESSEQUAL       reduce using rule 125 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 125 (nodo7 -> .)
    NOTEQUAL        reduce using rule 125 (nodo7 -> .)
    EQUAL           reduce using rule 125 (nodo7 -> .)
    AND             reduce using rule 125 (nodo7 -> .)
    OR              reduce using rule 125 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 125 (nodo7 -> .)
    ID              reduce using rule 125 (nodo7 -> .)
    CTEINT          reduce using rule 125 (nodo7 -> .)
    CTEFLOAT        reduce using rule 125 (nodo7 -> .)
    CTECHAR         reduce using rule 125 (nodo7 -> .)
    TRUE            reduce using rule 125 (nodo7 -> .)
    FALSE           reduce using rule 125 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 125 (nodo7 -> .)

    nodo7                          shift and go to state 179

state 153

    (62) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (70) nodo13 -> .

    LCURLY          reduce using rule 70 (nodo13 -> .)

    nodo13                         shift and go to state 180

state 154

    (61) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 61 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 155

    (59) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 59 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 156

    (72) expresion_option -> AND nodo12_and . nuevaexp
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 181
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 157

    (71) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (75) expresion_loop -> . expresion
    (76) expresion_loop -> .
    (71) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 76 (expresion_loop -> .)
    SEMICOLON       reduce using rule 76 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    expresion_loop                 shift and go to state 182
    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 100
    expresion                      shift and go to state 183
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 158

    (73) expresion_option -> OR nodo12_or . nuevaexp
    (80) nuevaexp -> . exp nuevaexp_type nodo10
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    nuevaexp                       shift and go to state 184
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 102
    factor_var                     shift and go to state 72

state 159

    (84) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 185
    factor_var                     shift and go to state 72

state 160

    (82) nuevaexp_type -> GREATER nodo9_mayor . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 186
    factor_var                     shift and go to state 72

state 161

    (81) nuevaexp_type -> LESS nodo9_menor . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 187
    factor_var                     shift and go to state 72

state 162

    (86) nuevaexp_type -> EQUAL nodo9_igual . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 188
    factor_var                     shift and go to state 72

state 163

    (85) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 189
    factor_var                     shift and go to state 72

state 164

    (80) nuevaexp -> exp nuevaexp_type nodo10 .

    LPARENTHESIS    reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    AND             reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 80 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 165

    (83) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (103) exp -> . termino nodo5 exp_loop
    (111) termino -> . factor nodo4 termino_loop
    (119) factor -> . factor_var
    (120) factor -> . factor_exp
    (121) factor_var -> . varcte nodo1
    (122) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (126) varcte -> . ID varcte_arr nodoCteV
    (127) varcte -> . CTEINT nodoCteE
    (128) varcte -> . CTEFLOAT nodoCteF
    (129) varcte -> . CTEBOOL nodoCteB
    (130) varcte -> . CTECHAR nodoCteC
    (131) CTEBOOL -> . TRUE
    (132) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 67
    ID              shift and go to state 68
    CTEINT          shift and go to state 66
    CTEFLOAT        shift and go to state 63
    CTECHAR         shift and go to state 60
    TRUE            shift and go to state 61
    FALSE           shift and go to state 69

    termino                        shift and go to state 59
    varcte                         shift and go to state 62
    factor                         shift and go to state 64
    factor_exp                     shift and go to state 65
    CTEBOOL                        shift and go to state 70
    exp                            shift and go to state 190
    factor_var                     shift and go to state 72

state 166

    (14) variable_local_id_loop -> variable_local_id_loop_coma COLON tipo local_addType .

    SEMICOLON       reduce using rule 14 (variable_local_id_loop -> variable_local_id_loop_coma COLON tipo local_addType .)


state 167

    (16) variable_local_id_loop_coma -> ID add_pila_var_locales COMA variable_local_id_loop_coma .

    COLON           reduce using rule 16 (variable_local_id_loop_coma -> ID add_pila_var_locales COMA variable_local_id_loop_coma .)


state 168

    (96) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    VAR             reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 96 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 169

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (102) nodo8 -> .

    LBRACKET        reduce using rule 102 (nodo8 -> .)

    nodo8                          shift and go to state 191

state 170

    (65) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (49) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 39

    bloque                         shift and go to state 192

state 171

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque . return_cuad
    (41) return_cuad -> .

    INTTYPE         reduce using rule 41 (return_cuad -> .)
    FLOATTYPE       reduce using rule 41 (return_cuad -> .)
    CHARTYPE        reduce using rule 41 (return_cuad -> .)
    BOOLTYPE        reduce using rule 41 (return_cuad -> .)
    VOIDTYPE        reduce using rule 41 (return_cuad -> .)
    MAIN            reduce using rule 41 (return_cuad -> .)

    return_cuad                    shift and go to state 193

state 172

    (33) vars_locales_funcion -> VAR ID add_pila_funciones . vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (35) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (36) vars_locales_id_loop -> .

    COMA            shift and go to state 195
    COLON           reduce using rule 36 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 194

state 173

    (25) params -> ID add_pila_funciones params_loop COLON tipo . function_add_type semicolon_function_loop
    (39) function_add_type -> .

    SEMICOLON       reduce using rule 39 (function_add_type -> .)
    RPARENTHESIS    reduce using rule 39 (function_add_type -> .)

    function_add_type              shift and go to state 196

state 174

    (27) params_loop -> COMA ID add_pila_funciones . params_loop
    (27) params_loop -> . COMA ID add_pila_funciones params_loop
    (28) params_loop -> .

    COMA            shift and go to state 112
    COLON           reduce using rule 28 (params_loop -> .)

    params_loop                    shift and go to state 197

state 175

    (106) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 106 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 176

    (107) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 107 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 177

    (115) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 115 (termino_type_loop -> DIVISION nodo2_div termino .)


state 178

    (114) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 114 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 179

    (122) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 122 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 180

    (62) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (49) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 39

    bloque                         shift and go to state 198

state 181

    (72) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 72 (expresion_option -> AND nodo12_and nuevaexp .)


state 182

    (71) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    RPARENTHESIS    reduce using rule 71 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    SEMICOLON       reduce using rule 71 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 183

    (75) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 75 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 75 (expresion_loop -> expresion .)


state 184

    (73) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 73 (expresion_option -> OR nodo12_or nuevaexp .)


state 185

    (84) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 84 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 186

    (82) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 82 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 187

    (81) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 81 (nuevaexp_type -> LESS nodo9_menor exp .)


state 188

    (86) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 86 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 189

    (85) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 85 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 190

    (83) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 83 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 191

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 199


state 192

    (65) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (66) condicion_option -> . ELSE nodo14 bloque
    (67) condicion_option -> .

    ELSE            shift and go to state 200
    ID              reduce using rule 67 (condicion_option -> .)
    IF              reduce using rule 67 (condicion_option -> .)
    PRINT           reduce using rule 67 (condicion_option -> .)
    RETURN          reduce using rule 67 (condicion_option -> .)
    WHILE           reduce using rule 67 (condicion_option -> .)
    VAR             reduce using rule 67 (condicion_option -> .)
    RCURLY          reduce using rule 67 (condicion_option -> .)

    condicion_option               shift and go to state 201

state 193

    (23) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .

    INTTYPE         reduce using rule 23 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    FLOATTYPE       reduce using rule 23 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    CHARTYPE        reduce using rule 23 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    BOOLTYPE        reduce using rule 23 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    VOIDTYPE        reduce using rule 23 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)
    MAIN            reduce using rule 23 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion add_cantidad_vars bloque return_cuad .)


state 194

    (33) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop . COLON tipo function_local_add_type semicolon_function_local_loop

    COLON           shift and go to state 202


state 195

    (35) vars_locales_id_loop -> COMA . ID add_pila_funciones vars_locales_id_loop

    ID              shift and go to state 203


state 196

    (25) params -> ID add_pila_funciones params_loop COLON tipo function_add_type . semicolon_function_loop
    (31) semicolon_function_loop -> . SEMICOLON params
    (32) semicolon_function_loop -> .

    SEMICOLON       shift and go to state 204
    RPARENTHESIS    reduce using rule 32 (semicolon_function_loop -> .)

    semicolon_function_loop        shift and go to state 205

state 197

    (27) params_loop -> COMA ID add_pila_funciones params_loop .

    COLON           reduce using rule 27 (params_loop -> COMA ID add_pila_funciones params_loop .)


state 198

    (62) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (64) nodo17 -> .

    ID              reduce using rule 64 (nodo17 -> .)
    IF              reduce using rule 64 (nodo17 -> .)
    PRINT           reduce using rule 64 (nodo17 -> .)
    RETURN          reduce using rule 64 (nodo17 -> .)
    WHILE           reduce using rule 64 (nodo17 -> .)
    VAR             reduce using rule 64 (nodo17 -> .)
    RCURLY          reduce using rule 64 (nodo17 -> .)

    nodo17                         shift and go to state 206

state 199

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (98) asignacion_type -> . CTEINT
    (99) asignacion_type -> . CTEFLOAT
    (100) asignacion_type -> . CTEINT COMA asignacion_type
    (101) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 207
    CTEFLOAT        shift and go to state 208

    asignacion_type                shift and go to state 209

state 200

    (66) condicion_option -> ELSE . nodo14 bloque
    (69) nodo14 -> .

    LCURLY          reduce using rule 69 (nodo14 -> .)

    nodo14                         shift and go to state 210

state 201

    (65) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (68) nodo15 -> .

    ID              reduce using rule 68 (nodo15 -> .)
    IF              reduce using rule 68 (nodo15 -> .)
    PRINT           reduce using rule 68 (nodo15 -> .)
    RETURN          reduce using rule 68 (nodo15 -> .)
    WHILE           reduce using rule 68 (nodo15 -> .)
    VAR             reduce using rule 68 (nodo15 -> .)
    RCURLY          reduce using rule 68 (nodo15 -> .)

    nodo15                         shift and go to state 211

state 202

    (33) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON . tipo function_local_add_type semicolon_function_local_loop
    (44) tipo -> . INTTYPE
    (45) tipo -> . FLOATTYPE
    (46) tipo -> . CHARTYPE
    (47) tipo -> . BOOLTYPE
    (48) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 23
    FLOATTYPE       shift and go to state 22
    CHARTYPE        shift and go to state 19
    BOOLTYPE        shift and go to state 21
    VOIDTYPE        shift and go to state 25

    tipo                           shift and go to state 212

state 203

    (35) vars_locales_id_loop -> COMA ID . add_pila_funciones vars_locales_id_loop
    (29) add_pila_funciones -> .

    COMA            reduce using rule 29 (add_pila_funciones -> .)
    COLON           reduce using rule 29 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 213

state 204

    (31) semicolon_function_loop -> SEMICOLON . params
    (25) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (26) params -> .

    ID              shift and go to state 58
    RPARENTHESIS    reduce using rule 26 (params -> .)

    params                         shift and go to state 214

state 205

    (25) params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .

    RPARENTHESIS    reduce using rule 25 (params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .)


state 206

    (62) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RETURN          reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    VAR             reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 62 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 207

    (98) asignacion_type -> CTEINT .
    (100) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 98 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 215


state 208

    (99) asignacion_type -> CTEFLOAT .
    (101) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 99 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 216


state 209

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 217


state 210

    (66) condicion_option -> ELSE nodo14 . bloque
    (49) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 39

    bloque                         shift and go to state 218

state 211

    (65) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RETURN          reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    VAR             reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 65 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 212

    (33) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo . function_local_add_type semicolon_function_local_loop
    (40) function_local_add_type -> .

    SEMICOLON       reduce using rule 40 (function_local_add_type -> .)
    LCURLY          reduce using rule 40 (function_local_add_type -> .)

    function_local_add_type        shift and go to state 219

state 213

    (35) vars_locales_id_loop -> COMA ID add_pila_funciones . vars_locales_id_loop
    (35) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (36) vars_locales_id_loop -> .

    COMA            shift and go to state 195
    COLON           reduce using rule 36 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 220

state 214

    (31) semicolon_function_loop -> SEMICOLON params .

    RPARENTHESIS    reduce using rule 31 (semicolon_function_loop -> SEMICOLON params .)


state 215

    (100) asignacion_type -> CTEINT COMA . asignacion_type
    (98) asignacion_type -> . CTEINT
    (99) asignacion_type -> . CTEFLOAT
    (100) asignacion_type -> . CTEINT COMA asignacion_type
    (101) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 207
    CTEFLOAT        shift and go to state 208

    asignacion_type                shift and go to state 221

state 216

    (101) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (98) asignacion_type -> . CTEINT
    (99) asignacion_type -> . CTEFLOAT
    (100) asignacion_type -> . CTEINT COMA asignacion_type
    (101) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 207
    CTEFLOAT        shift and go to state 208

    asignacion_type                shift and go to state 222

state 217

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 223


state 218

    (66) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)
    RETURN          reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)
    VAR             reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 66 (condicion_option -> ELSE nodo14 bloque .)


state 219

    (33) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type . semicolon_function_local_loop
    (37) semicolon_function_local_loop -> . SEMICOLON vars_locales_funcion
    (38) semicolon_function_local_loop -> .

    SEMICOLON       shift and go to state 224
    LCURLY          reduce using rule 38 (semicolon_function_local_loop -> .)

    semicolon_function_local_loop  shift and go to state 225

state 220

    (35) vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .

    COLON           reduce using rule 35 (vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .)


state 221

    (100) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 100 (asignacion_type -> CTEINT COMA asignacion_type .)


state 222

    (101) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 101 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 223

    (97) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    VAR             reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 97 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)


state 224

    (37) semicolon_function_local_loop -> SEMICOLON . vars_locales_funcion
    (33) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (34) vars_locales_funcion -> .

    VAR             shift and go to state 110
    LCURLY          reduce using rule 34 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 226

state 225

    (33) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .

    LCURLY          reduce using rule 33 (vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .)


state 226

    (37) semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .

    LCURLY          reduce using rule 37 (semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 15 resolved as shift
WARNING: shift/reduce conflict for VAR in state 104 resolved as shift
