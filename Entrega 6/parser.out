Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
Rule 2     add_main_goto -> <empty>
Rule 3     init_goto -> <empty>
Rule 4     variables_globales -> VAR var_global variables_globales
Rule 5     variables_globales -> <empty>
Rule 6     var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop
Rule 7     variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType
Rule 8     variable_global_id_loop_coma -> COMA ID add_pila_var_globales variable_global_id_loop_coma
Rule 9     variable_global_id_loop_coma -> <empty>
Rule 10    add_pila_var_globales -> <empty>
Rule 11    variable_global_end_loop -> var_global
Rule 12    variable_global_end_loop -> <empty>
Rule 13    global_addType -> <empty>
Rule 14    arreglos_globales -> ARR arr_global arreglos_globales
Rule 15    arreglos_globales -> <empty>
Rule 16    arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop
Rule 17    arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType
Rule 18    arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
Rule 19    arr_global_id_loop_coma -> <empty>
Rule 20    arr_global_end_loop -> arr_global
Rule 21    arr_global_end_loop -> <empty>
Rule 22    add_pila_arr_globales -> <empty>
Rule 23    add_arr_tam -> <empty>
Rule 24    arr_global_addType -> <empty>
Rule 25    variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop
Rule 26    variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType
Rule 27    variable_local_id_loop_coma -> COMA ID add_pila_var_locales variable_local_id_loop_coma
Rule 28    variable_local_id_loop_coma -> <empty>
Rule 29    add_pila_var_locales -> <empty>
Rule 30    variable_local_end_loop -> variables_locales
Rule 31    variable_local_end_loop -> <empty>
Rule 32    local_addType -> <empty>
Rule 33    arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop
Rule 34    arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType
Rule 35    arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
Rule 36    arr_local_id_loop_coma -> <empty>
Rule 37    arr_local_end_loop -> arreglos_locales
Rule 38    arr_local_end_loop -> <empty>
Rule 39    add_pila_arr_locales -> <empty>
Rule 40    arr_local_addType -> <empty>
Rule 41    declaracion_funciones -> funcion declaracion_funciones
Rule 42    declaracion_funciones -> <empty>
Rule 43    funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
Rule 44    funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
Rule 45    add_dir_funciones -> <empty>
Rule 46    params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
Rule 47    params -> <empty>
Rule 48    params_loop -> COMA ID add_pila_funciones params_loop
Rule 49    params_loop -> <empty>
Rule 50    add_pila_funciones -> <empty>
Rule 51    semicolon_function_loop -> SEMICOLON params
Rule 52    semicolon_function_loop -> <empty>
Rule 53    add_cantidad_vars -> <empty>
Rule 54    function_add_type -> <empty>
Rule 55    vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
Rule 56    vars_locales_funcion -> <empty>
Rule 57    vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop
Rule 58    vars_locales_id_loop -> <empty>
Rule 59    semicolon_function_local_loop -> SEMICOLON vars_locales_funcion
Rule 60    semicolon_function_local_loop -> <empty>
Rule 61    function_local_add_type -> <empty>
Rule 62    arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
Rule 63    arrs_locales_funcion -> <empty>
Rule 64    arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
Rule 65    arrs_locales_id_loop -> <empty>
Rule 66    semicolon_function_local_arr_loop -> SEMICOLON arrs_locales_funcion
Rule 67    semicolon_function_local_arr_loop -> <empty>
Rule 68    add_pila_arr_funciones -> <empty>
Rule 69    function_local_arr_add_type -> <empty>
Rule 70    ret_cuad -> <empty>
Rule 71    add_dir_proc -> <empty>
Rule 72    update_dir_proc -> <empty>
Rule 73    second_update_dir_proc -> <empty>
Rule 74    tipo -> INTTYPE
Rule 75    tipo -> FLOATTYPE
Rule 76    tipo -> CHARTYPE
Rule 77    tipo -> BOOLTYPE
Rule 78    tipo -> VOIDTYPE
Rule 79    bloque -> LCURLY bloque_est_loop RCURLY
Rule 80    bloque_est_loop -> estatuto bloque_est_loop
Rule 81    bloque_est_loop -> <empty>
Rule 82    estatuto -> asignacion
Rule 83    estatuto -> condicion
Rule 84    estatuto -> escritura
Rule 85    estatuto -> ciclo
Rule 86    estatuto -> variables_locales
Rule 87    estatuto -> arreglos_locales
Rule 88    regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON
Rule 89    return_cuad -> <empty>
Rule 90    escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON
Rule 91    print_cuad -> <empty>
Rule 92    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 93    nodo16 -> <empty>
Rule 94    nodo17 -> <empty>
Rule 95    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 96    condicion_option -> ELSE nodo14 bloque
Rule 97    condicion_option -> <empty>
Rule 98    nodo15 -> <empty>
Rule 99    nodo14 -> <empty>
Rule 100   nodo13 -> <empty>
Rule 101   expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 102   expresion_option -> AND nodo12_and nuevaexp
Rule 103   expresion_option -> OR nodo12_or nuevaexp
Rule 104   expresion_option -> <empty>
Rule 105   expresion_loop -> expresion
Rule 106   expresion_loop -> <empty>
Rule 107   nodo12_and -> <empty>
Rule 108   nodo12_or -> <empty>
Rule 109   nodo11 -> <empty>
Rule 110   nuevaexp -> exp nuevaexp_type nodo10
Rule 111   nuevaexp_type -> LESS nodo9_menor exp
Rule 112   nuevaexp_type -> GREATER nodo9_mayor exp
Rule 113   nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 114   nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 115   nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 116   nuevaexp_type -> EQUAL nodo9_igual exp
Rule 117   nuevaexp_type -> <empty>
Rule 118   nodo10 -> <empty>
Rule 119   nodo9_menor -> <empty>
Rule 120   nodo9_mayor -> <empty>
Rule 121   nodo9_menorig -> <empty>
Rule 122   nodo9_mayorig -> <empty>
Rule 123   nodo9_dif -> <empty>
Rule 124   nodo9_igual -> <empty>
Rule 125   asignacion -> ID asignacion_option
Rule 126   asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 127   asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
Rule 128   asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON
Rule 129   asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON
Rule 130   asignacion_type -> CTEINT add_arr_valores_pila asignacion_coma_loop
Rule 131   asignacion_type -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop
Rule 132   asignacion_type -> CTECHAR add_arr_valores_pila asignacion_coma_loop
Rule 133   asignacion_type -> CTEBOOL add_arr_valores_pila asignacion_coma_loop
Rule 134   asignacion_coma_loop -> COMA asignacion_type_loop
Rule 135   asignacion_coma_loop -> <empty>
Rule 136   asignacion_type_loop -> CTEINT add_arr_valores_pila asignacion_coma_loop
Rule 137   asignacion_type_loop -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop
Rule 138   asignacion_type_loop -> CTECHAR add_arr_valores_pila asignacion_coma_loop
Rule 139   asignacion_type_loop -> CTEBOOL add_arr_valores_pila asignacion_coma_loop
Rule 140   asignacion_type_loop -> <empty>
Rule 141   add_arr_valores_pila -> <empty>
Rule 142   set_arr_values -> <empty>
Rule 143   arr_pos -> <empty>
Rule 144   asign_arr -> <empty>
Rule 145   function_call -> <empty>
Rule 146   func_args -> expresion args_cuad func_args_loop
Rule 147   func_args_loop -> COMA expresion args_cuad func_args_loop
Rule 148   func_args_loop -> <empty>
Rule 149   gosub -> <empty>
Rule 150   args_cuad -> <empty>
Rule 151   asign_return_cuad -> <empty>
Rule 152   nodo8 -> <empty>
Rule 153   exp -> termino nodo5 exp_loop
Rule 154   exp_loop -> exp_type_loop
Rule 155   exp_loop -> <empty>
Rule 156   exp_type_loop -> ADDITION nodo3_suma exp
Rule 157   exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 158   nodo3_suma -> <empty>
Rule 159   nodo3_resta -> <empty>
Rule 160   nodo5 -> <empty>
Rule 161   termino -> factor nodo4 termino_loop
Rule 162   termino_loop -> termino_type_loop
Rule 163   termino_loop -> <empty>
Rule 164   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 165   termino_type_loop -> DIVISION nodo2_div termino
Rule 166   nodo2_mult -> <empty>
Rule 167   nodo2_div -> <empty>
Rule 168   nodo4 -> <empty>
Rule 169   factor -> factor_var
Rule 170   factor -> factor_exp
Rule 171   factor_var -> varcte nodo1
Rule 172   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 173   nodo1 -> <empty>
Rule 174   nodo6 -> <empty>
Rule 175   nodo7 -> <empty>
Rule 176   varcte -> ID nodoCteV
Rule 177   varcte -> CTEINT nodoCteE
Rule 178   varcte -> CTEFLOAT nodoCteF
Rule 179   varcte -> CTEBOOL nodoCteB
Rule 180   varcte -> CTECHAR nodoCteC
Rule 181   CTEBOOL -> TRUE
Rule 182   CTEBOOL -> FALSE
Rule 183   nodoCteV -> <empty>
Rule 184   nodoCteE -> <empty>
Rule 185   nodoCteF -> <empty>
Rule 186   nodoCteB -> <empty>
Rule 187   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 156
AND                  : 102
ARR                  : 14 33 62
ASSIGN               : 126 127 128 129
BOOLTYPE             : 77
CALL                 : 127
CHARTYPE             : 76
COLON                : 7 17 26 34 46 55 62
COMA                 : 8 18 27 35 48 57 64 134 147
CTECHAR              : 132 138 180
CTEFLOAT             : 131 137 178
CTEINT               : 17 18 34 35 62 64 130 136 177
DIVISION             : 165
ELSE                 : 96
END                  : 1
EQUAL                : 116
FALSE                : 182
FLOATTYPE            : 75
FUNC                 : 43 44
GREATER              : 112
GREATEREQUAL         : 114
ID                   : 1 7 8 17 18 26 27 34 35 43 44 46 48 55 57 62 64 125 127 176
IF                   : 95
INTTYPE              : 74
LBRACKET             : 17 18 34 35 62 64 128 129
LCURLY               : 79
LESS                 : 111
LESSEQUAL            : 113
LPARENTHESIS         : 1 43 44 88 90 92 95 127 172
MAIN                 : 1
MULTIPLICATION       : 164
NOTEQUAL             : 115
OR                   : 103
PRINT                : 90
PROGRAM              : 1
RBRACKET             : 17 18 34 35 62 64 128 129
RCURLY               : 79
RETURN               : 88
RPARENTHESIS         : 1 43 44 88 90 92 95 127 172
SEMICOLON            : 1 6 16 25 33 51 59 66 88 90 126 127 128 129
SUBTRACTION          : 157
TRUE                 : 181
VAR                  : 4 25 55
VOIDTYPE             : 44 78
WHILE                : 92
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 133 139 179
add_arr_tam          : 17 18 34 35 62 64
add_arr_valores_pila : 130 131 132 133 136 137 138 139
add_cantidad_vars    : 43 44
add_dir_funciones    : 43 44
add_dir_proc         : 1
add_main_goto        : 1
add_pila_arr_funciones : 62 64
add_pila_arr_globales : 17 18
add_pila_arr_locales : 34 35
add_pila_funciones   : 46 48 55 57
add_pila_var_globales : 7 8
add_pila_var_locales : 26 27
args_cuad            : 146 147
arr_global           : 14 20
arr_global_addType   : 17
arr_global_end_loop  : 16
arr_global_id_loop   : 16
arr_global_id_loop_coma : 17 18
arr_local_addType    : 34
arr_local_end_loop   : 33
arr_local_id_loop    : 33
arr_local_id_loop_coma : 34 35
arr_pos              : 129
arreglos_globales    : 1 14
arreglos_locales     : 37 87
arrs_locales_funcion : 43 44 66
arrs_locales_id_loop : 62 64
asign_arr            : 129
asign_return_cuad    : 127
asignacion           : 82
asignacion_coma_loop : 130 131 132 133 136 137 138 139
asignacion_option    : 125
asignacion_type      : 128
asignacion_type_loop : 134
bloque               : 1 43 44 92 95 96
bloque_est_loop      : 79 80
ciclo                : 85
condicion            : 83
condicion_option     : 95
declaracion_funciones : 1 41
escritura            : 84
estatuto             : 80
exp                  : 110 111 112 113 114 115 116 156 157
exp_loop             : 153
exp_type_loop        : 154
expresion            : 88 90 92 95 105 126 129 129 146 147 172
expresion_loop       : 101
expresion_option     : 101
factor               : 161
factor_exp           : 170
factor_var           : 169
func_args            : 127
func_args_loop       : 146 147
funcion              : 41
function_add_type    : 46
function_call        : 127
function_local_add_type : 55
function_local_arr_add_type : 62
global_addType       : 7
gosub                : 127
init_goto            : 1
local_addType        : 26
nodo1                : 171
nodo10               : 110
nodo11               : 101
nodo12_and           : 102
nodo12_or            : 103
nodo13               : 92 95
nodo14               : 96
nodo15               : 95
nodo16               : 92
nodo17               : 92
nodo2_div            : 165
nodo2_mult           : 164
nodo3_resta          : 157
nodo3_suma           : 156
nodo4                : 161
nodo5                : 153
nodo6                : 172
nodo7                : 172
nodo8                : 126
nodo9_dif            : 115
nodo9_igual          : 116
nodo9_mayor          : 112
nodo9_mayorig        : 114
nodo9_menor          : 111
nodo9_menorig        : 113
nodoCteB             : 179
nodoCteC             : 180
nodoCteE             : 177
nodoCteF             : 178
nodoCteV             : 176
nuevaexp             : 101 102 103
nuevaexp_type        : 110
params               : 43 44 51
params_loop          : 46 48
print_cuad           : 90
programa             : 0
regreso              : 43
ret_cuad             : 43 44
return_cuad          : 88
second_update_dir_proc : 1
semicolon_function_local_arr_loop : 62
semicolon_function_local_loop : 55
semicolon_function_loop : 46
set_arr_values       : 128
termino              : 153 164 165
termino_loop         : 161
termino_type_loop    : 162
tipo                 : 7 17 26 34 43 46 55 62
update_dir_proc      : 1
var_global           : 4 11
varcte               : 171
variable_global_end_loop : 6
variable_global_id_loop : 6
variable_global_id_loop_coma : 7 8
variable_local_end_loop : 25
variable_local_id_loop : 25
variable_local_id_loop_coma : 26 27
variables_globales   : 1 4
variables_locales    : 30 86
vars_locales_funcion : 43 44 59
vars_locales_id_loop : 55 57

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (71) add_dir_proc -> .

    VAR             reduce using rule 71 (add_dir_proc -> .)
    ARR             reduce using rule 71 (add_dir_proc -> .)
    VOIDTYPE        reduce using rule 71 (add_dir_proc -> .)
    INTTYPE         reduce using rule 71 (add_dir_proc -> .)
    FLOATTYPE       reduce using rule 71 (add_dir_proc -> .)
    CHARTYPE        reduce using rule 71 (add_dir_proc -> .)
    BOOLTYPE        reduce using rule 71 (add_dir_proc -> .)
    MAIN            reduce using rule 71 (add_dir_proc -> .)

    add_dir_proc                   shift and go to state 5

state 5

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc . variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (4) variables_globales -> . VAR var_global variables_globales
    (5) variables_globales -> .

    VAR             shift and go to state 7
    ARR             reduce using rule 5 (variables_globales -> .)
    VOIDTYPE        reduce using rule 5 (variables_globales -> .)
    INTTYPE         reduce using rule 5 (variables_globales -> .)
    FLOATTYPE       reduce using rule 5 (variables_globales -> .)
    CHARTYPE        reduce using rule 5 (variables_globales -> .)
    BOOLTYPE        reduce using rule 5 (variables_globales -> .)
    MAIN            reduce using rule 5 (variables_globales -> .)

    variables_globales             shift and go to state 6

state 6

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales . arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (14) arreglos_globales -> . ARR arr_global arreglos_globales
    (15) arreglos_globales -> .

    ARR             shift and go to state 8
    VOIDTYPE        reduce using rule 15 (arreglos_globales -> .)
    INTTYPE         reduce using rule 15 (arreglos_globales -> .)
    FLOATTYPE       reduce using rule 15 (arreglos_globales -> .)
    CHARTYPE        reduce using rule 15 (arreglos_globales -> .)
    BOOLTYPE        reduce using rule 15 (arreglos_globales -> .)
    MAIN            reduce using rule 15 (arreglos_globales -> .)

    arreglos_globales              shift and go to state 9

state 7

    (4) variables_globales -> VAR . var_global variables_globales
    (6) var_global -> . variable_global_id_loop SEMICOLON variable_global_end_loop
    (7) variable_global_id_loop -> . ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType

    ID              shift and go to state 12

    variable_global_id_loop        shift and go to state 10
    var_global                     shift and go to state 11

state 8

    (14) arreglos_globales -> ARR . arr_global arreglos_globales
    (16) arr_global -> . arr_global_id_loop SEMICOLON arr_global_end_loop
    (17) arr_global_id_loop -> . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    ID              shift and go to state 15

    arr_global                     shift and go to state 13
    arr_global_id_loop             shift and go to state 14

state 9

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales . add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (2) add_main_goto -> .

    VOIDTYPE        reduce using rule 2 (add_main_goto -> .)
    INTTYPE         reduce using rule 2 (add_main_goto -> .)
    FLOATTYPE       reduce using rule 2 (add_main_goto -> .)
    CHARTYPE        reduce using rule 2 (add_main_goto -> .)
    BOOLTYPE        reduce using rule 2 (add_main_goto -> .)
    MAIN            reduce using rule 2 (add_main_goto -> .)

    add_main_goto                  shift and go to state 16

state 10

    (6) var_global -> variable_global_id_loop . SEMICOLON variable_global_end_loop

    SEMICOLON       shift and go to state 17


state 11

    (4) variables_globales -> VAR var_global . variables_globales
    (4) variables_globales -> . VAR var_global variables_globales
    (5) variables_globales -> .

    VAR             shift and go to state 7
    ARR             reduce using rule 5 (variables_globales -> .)
    VOIDTYPE        reduce using rule 5 (variables_globales -> .)
    INTTYPE         reduce using rule 5 (variables_globales -> .)
    FLOATTYPE       reduce using rule 5 (variables_globales -> .)
    CHARTYPE        reduce using rule 5 (variables_globales -> .)
    BOOLTYPE        reduce using rule 5 (variables_globales -> .)
    MAIN            reduce using rule 5 (variables_globales -> .)

    variables_globales             shift and go to state 18

state 12

    (7) variable_global_id_loop -> ID . add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType
    (10) add_pila_var_globales -> .

    COMA            reduce using rule 10 (add_pila_var_globales -> .)
    COLON           reduce using rule 10 (add_pila_var_globales -> .)

    add_pila_var_globales          shift and go to state 19

state 13

    (14) arreglos_globales -> ARR arr_global . arreglos_globales
    (14) arreglos_globales -> . ARR arr_global arreglos_globales
    (15) arreglos_globales -> .

    ARR             shift and go to state 8
    VOIDTYPE        reduce using rule 15 (arreglos_globales -> .)
    INTTYPE         reduce using rule 15 (arreglos_globales -> .)
    FLOATTYPE       reduce using rule 15 (arreglos_globales -> .)
    CHARTYPE        reduce using rule 15 (arreglos_globales -> .)
    BOOLTYPE        reduce using rule 15 (arreglos_globales -> .)
    MAIN            reduce using rule 15 (arreglos_globales -> .)

    arreglos_globales              shift and go to state 20

state 14

    (16) arr_global -> arr_global_id_loop . SEMICOLON arr_global_end_loop

    SEMICOLON       shift and go to state 21


state 15

    (17) arr_global_id_loop -> ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    LBRACKET        shift and go to state 22


state 16

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto . update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (72) update_dir_proc -> .

    VOIDTYPE        reduce using rule 72 (update_dir_proc -> .)
    INTTYPE         reduce using rule 72 (update_dir_proc -> .)
    FLOATTYPE       reduce using rule 72 (update_dir_proc -> .)
    CHARTYPE        reduce using rule 72 (update_dir_proc -> .)
    BOOLTYPE        reduce using rule 72 (update_dir_proc -> .)
    MAIN            reduce using rule 72 (update_dir_proc -> .)

    update_dir_proc                shift and go to state 23

state 17

    (6) var_global -> variable_global_id_loop SEMICOLON . variable_global_end_loop
    (11) variable_global_end_loop -> . var_global
    (12) variable_global_end_loop -> .
    (6) var_global -> . variable_global_id_loop SEMICOLON variable_global_end_loop
    (7) variable_global_id_loop -> . ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType

    VAR             reduce using rule 12 (variable_global_end_loop -> .)
    ARR             reduce using rule 12 (variable_global_end_loop -> .)
    VOIDTYPE        reduce using rule 12 (variable_global_end_loop -> .)
    INTTYPE         reduce using rule 12 (variable_global_end_loop -> .)
    FLOATTYPE       reduce using rule 12 (variable_global_end_loop -> .)
    CHARTYPE        reduce using rule 12 (variable_global_end_loop -> .)
    BOOLTYPE        reduce using rule 12 (variable_global_end_loop -> .)
    MAIN            reduce using rule 12 (variable_global_end_loop -> .)
    ID              shift and go to state 12

    variable_global_end_loop       shift and go to state 24
    variable_global_id_loop        shift and go to state 10
    var_global                     shift and go to state 25

state 18

    (4) variables_globales -> VAR var_global variables_globales .

    ARR             reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)
    VOIDTYPE        reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)
    INTTYPE         reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)
    FLOATTYPE       reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)
    CHARTYPE        reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)
    BOOLTYPE        reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)
    MAIN            reduce using rule 4 (variables_globales -> VAR var_global variables_globales .)


state 19

    (7) variable_global_id_loop -> ID add_pila_var_globales . variable_global_id_loop_coma COLON tipo global_addType
    (8) variable_global_id_loop_coma -> . COMA ID add_pila_var_globales variable_global_id_loop_coma
    (9) variable_global_id_loop_coma -> .

    COMA            shift and go to state 27
    COLON           reduce using rule 9 (variable_global_id_loop_coma -> .)

    variable_global_id_loop_coma   shift and go to state 26

state 20

    (14) arreglos_globales -> ARR arr_global arreglos_globales .

    VOIDTYPE        reduce using rule 14 (arreglos_globales -> ARR arr_global arreglos_globales .)
    INTTYPE         reduce using rule 14 (arreglos_globales -> ARR arr_global arreglos_globales .)
    FLOATTYPE       reduce using rule 14 (arreglos_globales -> ARR arr_global arreglos_globales .)
    CHARTYPE        reduce using rule 14 (arreglos_globales -> ARR arr_global arreglos_globales .)
    BOOLTYPE        reduce using rule 14 (arreglos_globales -> ARR arr_global arreglos_globales .)
    MAIN            reduce using rule 14 (arreglos_globales -> ARR arr_global arreglos_globales .)


state 21

    (16) arr_global -> arr_global_id_loop SEMICOLON . arr_global_end_loop
    (20) arr_global_end_loop -> . arr_global
    (21) arr_global_end_loop -> .
    (16) arr_global -> . arr_global_id_loop SEMICOLON arr_global_end_loop
    (17) arr_global_id_loop -> . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    ARR             reduce using rule 21 (arr_global_end_loop -> .)
    VOIDTYPE        reduce using rule 21 (arr_global_end_loop -> .)
    INTTYPE         reduce using rule 21 (arr_global_end_loop -> .)
    FLOATTYPE       reduce using rule 21 (arr_global_end_loop -> .)
    CHARTYPE        reduce using rule 21 (arr_global_end_loop -> .)
    BOOLTYPE        reduce using rule 21 (arr_global_end_loop -> .)
    MAIN            reduce using rule 21 (arr_global_end_loop -> .)
    ID              shift and go to state 15

    arr_global                     shift and go to state 28
    arr_global_end_loop            shift and go to state 29
    arr_global_id_loop             shift and go to state 14

state 22

    (17) arr_global_id_loop -> ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    CTEINT          shift and go to state 30


state 23

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc . declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (41) declaracion_funciones -> . funcion declaracion_funciones
    (42) declaracion_funciones -> .
    (43) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
    (44) funcion -> . VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    MAIN            reduce using rule 42 (declaracion_funciones -> .)
    VOIDTYPE        shift and go to state 38
    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34

    declaracion_funciones          shift and go to state 31
    tipo                           shift and go to state 37
    funcion                        shift and go to state 33

state 24

    (6) var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .

    VAR             reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    ARR             reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    VOIDTYPE        reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    INTTYPE         reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    FLOATTYPE       reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    CHARTYPE        reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    BOOLTYPE        reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)
    MAIN            reduce using rule 6 (var_global -> variable_global_id_loop SEMICOLON variable_global_end_loop .)


state 25

    (11) variable_global_end_loop -> var_global .

    VAR             reduce using rule 11 (variable_global_end_loop -> var_global .)
    ARR             reduce using rule 11 (variable_global_end_loop -> var_global .)
    VOIDTYPE        reduce using rule 11 (variable_global_end_loop -> var_global .)
    INTTYPE         reduce using rule 11 (variable_global_end_loop -> var_global .)
    FLOATTYPE       reduce using rule 11 (variable_global_end_loop -> var_global .)
    CHARTYPE        reduce using rule 11 (variable_global_end_loop -> var_global .)
    BOOLTYPE        reduce using rule 11 (variable_global_end_loop -> var_global .)
    MAIN            reduce using rule 11 (variable_global_end_loop -> var_global .)


state 26

    (7) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma . COLON tipo global_addType

    COLON           shift and go to state 39


state 27

    (8) variable_global_id_loop_coma -> COMA . ID add_pila_var_globales variable_global_id_loop_coma

    ID              shift and go to state 40


state 28

    (20) arr_global_end_loop -> arr_global .

    ARR             reduce using rule 20 (arr_global_end_loop -> arr_global .)
    VOIDTYPE        reduce using rule 20 (arr_global_end_loop -> arr_global .)
    INTTYPE         reduce using rule 20 (arr_global_end_loop -> arr_global .)
    FLOATTYPE       reduce using rule 20 (arr_global_end_loop -> arr_global .)
    CHARTYPE        reduce using rule 20 (arr_global_end_loop -> arr_global .)
    BOOLTYPE        reduce using rule 20 (arr_global_end_loop -> arr_global .)
    MAIN            reduce using rule 20 (arr_global_end_loop -> arr_global .)


state 29

    (16) arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .

    ARR             reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    VOIDTYPE        reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    INTTYPE         reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    FLOATTYPE       reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    CHARTYPE        reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    BOOLTYPE        reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)
    MAIN            reduce using rule 16 (arr_global -> arr_global_id_loop SEMICOLON arr_global_end_loop .)


state 30

    (17) arr_global_id_loop -> ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType
    (23) add_arr_tam -> .

    RBRACKET        reduce using rule 23 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 41

state 31

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones . MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END

    MAIN            shift and go to state 42


state 32

    (76) tipo -> CHARTYPE .

    FUNC            reduce using rule 76 (tipo -> CHARTYPE .)
    SEMICOLON       reduce using rule 76 (tipo -> CHARTYPE .)
    LCURLY          reduce using rule 76 (tipo -> CHARTYPE .)
    ARR             reduce using rule 76 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 76 (tipo -> CHARTYPE .)


state 33

    (41) declaracion_funciones -> funcion . declaracion_funciones
    (41) declaracion_funciones -> . funcion declaracion_funciones
    (42) declaracion_funciones -> .
    (43) funcion -> . tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
    (44) funcion -> . VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    MAIN            reduce using rule 42 (declaracion_funciones -> .)
    VOIDTYPE        shift and go to state 38
    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34

    declaracion_funciones          shift and go to state 43
    tipo                           shift and go to state 37
    funcion                        shift and go to state 33

state 34

    (77) tipo -> BOOLTYPE .

    FUNC            reduce using rule 77 (tipo -> BOOLTYPE .)
    SEMICOLON       reduce using rule 77 (tipo -> BOOLTYPE .)
    LCURLY          reduce using rule 77 (tipo -> BOOLTYPE .)
    ARR             reduce using rule 77 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 77 (tipo -> BOOLTYPE .)


state 35

    (75) tipo -> FLOATTYPE .

    FUNC            reduce using rule 75 (tipo -> FLOATTYPE .)
    SEMICOLON       reduce using rule 75 (tipo -> FLOATTYPE .)
    LCURLY          reduce using rule 75 (tipo -> FLOATTYPE .)
    ARR             reduce using rule 75 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 75 (tipo -> FLOATTYPE .)


state 36

    (74) tipo -> INTTYPE .

    FUNC            reduce using rule 74 (tipo -> INTTYPE .)
    SEMICOLON       reduce using rule 74 (tipo -> INTTYPE .)
    LCURLY          reduce using rule 74 (tipo -> INTTYPE .)
    ARR             reduce using rule 74 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 74 (tipo -> INTTYPE .)


state 37

    (43) funcion -> tipo . FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad

    FUNC            shift and go to state 44


state 38

    (44) funcion -> VOIDTYPE . FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (78) tipo -> VOIDTYPE .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 45

  ! FUNC            [ reduce using rule 78 (tipo -> VOIDTYPE .) ]


state 39

    (7) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON . tipo global_addType
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 47

state 40

    (8) variable_global_id_loop_coma -> COMA ID . add_pila_var_globales variable_global_id_loop_coma
    (10) add_pila_var_globales -> .

    COMA            reduce using rule 10 (add_pila_var_globales -> .)
    COLON           reduce using rule 10 (add_pila_var_globales -> .)

    add_pila_var_globales          shift and go to state 48

state 41

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType

    RBRACKET        shift and go to state 49


state 42

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN . init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END
    (3) init_goto -> .

    LPARENTHESIS    reduce using rule 3 (init_goto -> .)

    init_goto                      shift and go to state 50

state 43

    (41) declaracion_funciones -> funcion declaracion_funciones .

    MAIN            reduce using rule 41 (declaracion_funciones -> funcion declaracion_funciones .)


state 44

    (43) funcion -> tipo FUNC . ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad

    ID              shift and go to state 51


state 45

    (44) funcion -> VOIDTYPE FUNC . ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    ID              shift and go to state 52


state 46

    (78) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 78 (tipo -> VOIDTYPE .)
    LCURLY          reduce using rule 78 (tipo -> VOIDTYPE .)
    ARR             reduce using rule 78 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 78 (tipo -> VOIDTYPE .)


state 47

    (7) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo . global_addType
    (13) global_addType -> .

    SEMICOLON       reduce using rule 13 (global_addType -> .)

    global_addType                 shift and go to state 53

state 48

    (8) variable_global_id_loop_coma -> COMA ID add_pila_var_globales . variable_global_id_loop_coma
    (8) variable_global_id_loop_coma -> . COMA ID add_pila_var_globales variable_global_id_loop_coma
    (9) variable_global_id_loop_coma -> .

    COMA            shift and go to state 27
    COLON           reduce using rule 9 (variable_global_id_loop_coma -> .)

    variable_global_id_loop_coma   shift and go to state 54

state 49

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType
    (22) add_pila_arr_globales -> .

    COMA            reduce using rule 22 (add_pila_arr_globales -> .)
    COLON           reduce using rule 22 (add_pila_arr_globales -> .)

    add_pila_arr_globales          shift and go to state 55

state 50

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto . LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END

    LPARENTHESIS    shift and go to state 56


state 51

    (43) funcion -> tipo FUNC ID . add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
    (45) add_dir_funciones -> .

    LPARENTHESIS    reduce using rule 45 (add_dir_funciones -> .)

    add_dir_funciones              shift and go to state 57

state 52

    (44) funcion -> VOIDTYPE FUNC ID . add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (45) add_dir_funciones -> .

    LPARENTHESIS    reduce using rule 45 (add_dir_funciones -> .)

    add_dir_funciones              shift and go to state 58

state 53

    (7) variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType .

    SEMICOLON       reduce using rule 7 (variable_global_id_loop -> ID add_pila_var_globales variable_global_id_loop_coma COLON tipo global_addType .)


state 54

    (8) variable_global_id_loop_coma -> COMA ID add_pila_var_globales variable_global_id_loop_coma .

    COLON           reduce using rule 8 (variable_global_id_loop_coma -> COMA ID add_pila_var_globales variable_global_id_loop_coma .)


state 55

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales . arr_global_id_loop_coma COLON tipo arr_global_addType
    (18) arr_global_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
    (19) arr_global_id_loop_coma -> .

    COMA            shift and go to state 60
    COLON           reduce using rule 19 (arr_global_id_loop_coma -> .)

    arr_global_id_loop_coma        shift and go to state 59

state 56

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS . RPARENTHESIS bloque second_update_dir_proc END

    RPARENTHESIS    shift and go to state 61


state 57

    (43) funcion -> tipo FUNC ID add_dir_funciones . LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad

    LPARENTHESIS    shift and go to state 62


state 58

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones . LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    LPARENTHESIS    shift and go to state 63


state 59

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma . COLON tipo arr_global_addType

    COLON           shift and go to state 64


state 60

    (18) arr_global_id_loop_coma -> COMA . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    ID              shift and go to state 65


state 61

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS . bloque second_update_dir_proc END
    (79) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 67

state 62

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS . params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
    (46) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (47) params -> .

    ID              shift and go to state 69
    RPARENTHESIS    reduce using rule 47 (params -> .)

    params                         shift and go to state 68

state 63

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS . params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (46) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (47) params -> .

    ID              shift and go to state 69
    RPARENTHESIS    reduce using rule 47 (params -> .)

    params                         shift and go to state 70

state 64

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON . tipo arr_global_addType
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 71

state 65

    (18) arr_global_id_loop_coma -> COMA ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    LBRACKET        shift and go to state 72


state 66

    (79) bloque -> LCURLY . bloque_est_loop RCURLY
    (80) bloque_est_loop -> . estatuto bloque_est_loop
    (81) bloque_est_loop -> .
    (82) estatuto -> . asignacion
    (83) estatuto -> . condicion
    (84) estatuto -> . escritura
    (85) estatuto -> . ciclo
    (86) estatuto -> . variables_locales
    (87) estatuto -> . arreglos_locales
    (125) asignacion -> . ID asignacion_option
    (95) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (90) escritura -> . PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON
    (92) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (25) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop
    (33) arreglos_locales -> . ARR arr_local_id_loop SEMICOLON arr_local_end_loop

    RCURLY          reduce using rule 81 (bloque_est_loop -> .)
    ID              shift and go to state 82
    IF              shift and go to state 83
    PRINT           shift and go to state 75
    WHILE           shift and go to state 74
    VAR             shift and go to state 81
    ARR             shift and go to state 80

    ciclo                          shift and go to state 76
    asignacion                     shift and go to state 84
    estatuto                       shift and go to state 77
    arreglos_locales               shift and go to state 73
    variables_locales              shift and go to state 79
    condicion                      shift and go to state 78
    bloque_est_loop                shift and go to state 85
    escritura                      shift and go to state 86

state 67

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque . second_update_dir_proc END
    (73) second_update_dir_proc -> .

    END             reduce using rule 73 (second_update_dir_proc -> .)

    second_update_dir_proc         shift and go to state 87

state 68

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params . RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad

    RPARENTHESIS    shift and go to state 88


state 69

    (46) params -> ID . add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (50) add_pila_funciones -> .

    COMA            reduce using rule 50 (add_pila_funciones -> .)
    COLON           reduce using rule 50 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 89

state 70

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params . RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad

    RPARENTHESIS    shift and go to state 90


state 71

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo . arr_global_addType
    (24) arr_global_addType -> .

    SEMICOLON       reduce using rule 24 (arr_global_addType -> .)

    arr_global_addType             shift and go to state 91

state 72

    (18) arr_global_id_loop_coma -> COMA ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    CTEINT          shift and go to state 92


state 73

    (87) estatuto -> arreglos_locales .

    ID              reduce using rule 87 (estatuto -> arreglos_locales .)
    IF              reduce using rule 87 (estatuto -> arreglos_locales .)
    PRINT           reduce using rule 87 (estatuto -> arreglos_locales .)
    WHILE           reduce using rule 87 (estatuto -> arreglos_locales .)
    VAR             reduce using rule 87 (estatuto -> arreglos_locales .)
    ARR             reduce using rule 87 (estatuto -> arreglos_locales .)
    RCURLY          reduce using rule 87 (estatuto -> arreglos_locales .)


state 74

    (92) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 93


state 75

    (90) escritura -> PRINT . LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 94


state 76

    (85) estatuto -> ciclo .

    ID              reduce using rule 85 (estatuto -> ciclo .)
    IF              reduce using rule 85 (estatuto -> ciclo .)
    PRINT           reduce using rule 85 (estatuto -> ciclo .)
    WHILE           reduce using rule 85 (estatuto -> ciclo .)
    VAR             reduce using rule 85 (estatuto -> ciclo .)
    ARR             reduce using rule 85 (estatuto -> ciclo .)
    RCURLY          reduce using rule 85 (estatuto -> ciclo .)


state 77

    (80) bloque_est_loop -> estatuto . bloque_est_loop
    (80) bloque_est_loop -> . estatuto bloque_est_loop
    (81) bloque_est_loop -> .
    (82) estatuto -> . asignacion
    (83) estatuto -> . condicion
    (84) estatuto -> . escritura
    (85) estatuto -> . ciclo
    (86) estatuto -> . variables_locales
    (87) estatuto -> . arreglos_locales
    (125) asignacion -> . ID asignacion_option
    (95) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (90) escritura -> . PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON
    (92) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (25) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop
    (33) arreglos_locales -> . ARR arr_local_id_loop SEMICOLON arr_local_end_loop

    RCURLY          reduce using rule 81 (bloque_est_loop -> .)
    ID              shift and go to state 82
    IF              shift and go to state 83
    PRINT           shift and go to state 75
    WHILE           shift and go to state 74
    VAR             shift and go to state 81
    ARR             shift and go to state 80

    ciclo                          shift and go to state 76
    asignacion                     shift and go to state 84
    estatuto                       shift and go to state 77
    arreglos_locales               shift and go to state 73
    variables_locales              shift and go to state 79
    condicion                      shift and go to state 78
    bloque_est_loop                shift and go to state 95
    escritura                      shift and go to state 86

state 78

    (83) estatuto -> condicion .

    ID              reduce using rule 83 (estatuto -> condicion .)
    IF              reduce using rule 83 (estatuto -> condicion .)
    PRINT           reduce using rule 83 (estatuto -> condicion .)
    WHILE           reduce using rule 83 (estatuto -> condicion .)
    VAR             reduce using rule 83 (estatuto -> condicion .)
    ARR             reduce using rule 83 (estatuto -> condicion .)
    RCURLY          reduce using rule 83 (estatuto -> condicion .)


state 79

    (86) estatuto -> variables_locales .

    ID              reduce using rule 86 (estatuto -> variables_locales .)
    IF              reduce using rule 86 (estatuto -> variables_locales .)
    PRINT           reduce using rule 86 (estatuto -> variables_locales .)
    WHILE           reduce using rule 86 (estatuto -> variables_locales .)
    VAR             reduce using rule 86 (estatuto -> variables_locales .)
    ARR             reduce using rule 86 (estatuto -> variables_locales .)
    RCURLY          reduce using rule 86 (estatuto -> variables_locales .)


state 80

    (33) arreglos_locales -> ARR . arr_local_id_loop SEMICOLON arr_local_end_loop
    (34) arr_local_id_loop -> . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    ID              shift and go to state 97

    arr_local_id_loop              shift and go to state 96

state 81

    (25) variables_locales -> VAR . variable_local_id_loop SEMICOLON variable_local_end_loop
    (26) variable_local_id_loop -> . ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType

    ID              shift and go to state 99

    variable_local_id_loop         shift and go to state 98

state 82

    (125) asignacion -> ID . asignacion_option
    (126) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (127) asignacion_option -> . ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (128) asignacion_option -> . ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON
    (129) asignacion_option -> . LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON

    ASSIGN          shift and go to state 101
    LBRACKET        shift and go to state 102

    asignacion_option              shift and go to state 100

state 83

    (95) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 103


state 84

    (82) estatuto -> asignacion .

    ID              reduce using rule 82 (estatuto -> asignacion .)
    IF              reduce using rule 82 (estatuto -> asignacion .)
    PRINT           reduce using rule 82 (estatuto -> asignacion .)
    WHILE           reduce using rule 82 (estatuto -> asignacion .)
    VAR             reduce using rule 82 (estatuto -> asignacion .)
    ARR             reduce using rule 82 (estatuto -> asignacion .)
    RCURLY          reduce using rule 82 (estatuto -> asignacion .)


state 85

    (79) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 104


state 86

    (84) estatuto -> escritura .

    ID              reduce using rule 84 (estatuto -> escritura .)
    IF              reduce using rule 84 (estatuto -> escritura .)
    PRINT           reduce using rule 84 (estatuto -> escritura .)
    WHILE           reduce using rule 84 (estatuto -> escritura .)
    VAR             reduce using rule 84 (estatuto -> escritura .)
    ARR             reduce using rule 84 (estatuto -> escritura .)
    RCURLY          reduce using rule 84 (estatuto -> escritura .)


state 87

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc . END

    END             shift and go to state 105


state 88

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS . vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
    (55) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (56) vars_locales_funcion -> .

    VAR             shift and go to state 107
    ARR             reduce using rule 56 (vars_locales_funcion -> .)
    LCURLY          reduce using rule 56 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 106

state 89

    (46) params -> ID add_pila_funciones . params_loop COLON tipo function_add_type semicolon_function_loop
    (48) params_loop -> . COMA ID add_pila_funciones params_loop
    (49) params_loop -> .

    COMA            shift and go to state 109
    COLON           reduce using rule 49 (params_loop -> .)

    params_loop                    shift and go to state 108

state 90

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS . vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (55) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (56) vars_locales_funcion -> .

    VAR             shift and go to state 107
    ARR             reduce using rule 56 (vars_locales_funcion -> .)
    LCURLY          reduce using rule 56 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 110

state 91

    (17) arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType .

    SEMICOLON       reduce using rule 17 (arr_global_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma COLON tipo arr_global_addType .)


state 92

    (18) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
    (23) add_arr_tam -> .

    RBRACKET        reduce using rule 23 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 111

state 93

    (92) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (93) nodo16 -> .

    LPARENTHESIS    reduce using rule 93 (nodo16 -> .)
    ID              reduce using rule 93 (nodo16 -> .)
    CTEINT          reduce using rule 93 (nodo16 -> .)
    CTEFLOAT        reduce using rule 93 (nodo16 -> .)
    CTECHAR         reduce using rule 93 (nodo16 -> .)
    TRUE            reduce using rule 93 (nodo16 -> .)
    FALSE           reduce using rule 93 (nodo16 -> .)

    nodo16                         shift and go to state 112

state 94

    (90) escritura -> PRINT LPARENTHESIS . expresion print_cuad RPARENTHESIS SEMICOLON
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 124
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 95

    (80) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 80 (bloque_est_loop -> estatuto bloque_est_loop .)


state 96

    (33) arreglos_locales -> ARR arr_local_id_loop . SEMICOLON arr_local_end_loop

    SEMICOLON       shift and go to state 129


state 97

    (34) arr_local_id_loop -> ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    LBRACKET        shift and go to state 130


state 98

    (25) variables_locales -> VAR variable_local_id_loop . SEMICOLON variable_local_end_loop

    SEMICOLON       shift and go to state 131


state 99

    (26) variable_local_id_loop -> ID . add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType
    (29) add_pila_var_locales -> .

    COMA            reduce using rule 29 (add_pila_var_locales -> .)
    COLON           reduce using rule 29 (add_pila_var_locales -> .)

    add_pila_var_locales           shift and go to state 132

state 100

    (125) asignacion -> ID asignacion_option .

    ID              reduce using rule 125 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 125 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 125 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 125 (asignacion -> ID asignacion_option .)
    VAR             reduce using rule 125 (asignacion -> ID asignacion_option .)
    ARR             reduce using rule 125 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 125 (asignacion -> ID asignacion_option .)


state 101

    (126) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (127) asignacion_option -> ASSIGN . CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (128) asignacion_option -> ASSIGN . LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    CALL            shift and go to state 135
    LBRACKET        shift and go to state 133
    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 134
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 102

    (129) asignacion_option -> LBRACKET . expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 136
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 103

    (95) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 137
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 104

    (79) bloque -> LCURLY bloque_est_loop RCURLY .

    ID              reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VAR             reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ARR             reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 79 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 105

    (1) programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON add_dir_proc variables_globales arreglos_globales add_main_goto update_dir_proc declaracion_funciones MAIN init_goto LPARENTHESIS RPARENTHESIS bloque second_update_dir_proc END .)


state 106

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion . arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad
    (62) arrs_locales_funcion -> . ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (63) arrs_locales_funcion -> .

    ARR             shift and go to state 139
    LCURLY          reduce using rule 63 (arrs_locales_funcion -> .)

    arrs_locales_funcion           shift and go to state 138

state 107

    (55) vars_locales_funcion -> VAR . ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop

    ID              shift and go to state 140


state 108

    (46) params -> ID add_pila_funciones params_loop . COLON tipo function_add_type semicolon_function_loop

    COLON           shift and go to state 141


state 109

    (48) params_loop -> COMA . ID add_pila_funciones params_loop

    ID              shift and go to state 142


state 110

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion . arrs_locales_funcion add_cantidad_vars bloque ret_cuad
    (62) arrs_locales_funcion -> . ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (63) arrs_locales_funcion -> .

    ARR             shift and go to state 139
    LCURLY          reduce using rule 63 (arrs_locales_funcion -> .)

    arrs_locales_funcion           shift and go to state 143

state 111

    (18) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_globales arr_global_id_loop_coma

    RBRACKET        shift and go to state 144


state 112

    (92) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 145
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 113

    (153) exp -> termino . nodo5 exp_loop
    (160) nodo5 -> .

    ADDITION        reduce using rule 160 (nodo5 -> .)
    SUBTRACTION     reduce using rule 160 (nodo5 -> .)
    LESS            reduce using rule 160 (nodo5 -> .)
    GREATER         reduce using rule 160 (nodo5 -> .)
    LESSEQUAL       reduce using rule 160 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 160 (nodo5 -> .)
    NOTEQUAL        reduce using rule 160 (nodo5 -> .)
    EQUAL           reduce using rule 160 (nodo5 -> .)
    AND             reduce using rule 160 (nodo5 -> .)
    OR              reduce using rule 160 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 160 (nodo5 -> .)
    ID              reduce using rule 160 (nodo5 -> .)
    CTEINT          reduce using rule 160 (nodo5 -> .)
    CTEFLOAT        reduce using rule 160 (nodo5 -> .)
    CTECHAR         reduce using rule 160 (nodo5 -> .)
    TRUE            reduce using rule 160 (nodo5 -> .)
    FALSE           reduce using rule 160 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 160 (nodo5 -> .)
    SEMICOLON       reduce using rule 160 (nodo5 -> .)
    RBRACKET        reduce using rule 160 (nodo5 -> .)
    COMA            reduce using rule 160 (nodo5 -> .)

    nodo5                          shift and go to state 146

state 114

    (180) varcte -> CTECHAR . nodoCteC
    (187) nodoCteC -> .

    MULTIPLICATION  reduce using rule 187 (nodoCteC -> .)
    DIVISION        reduce using rule 187 (nodoCteC -> .)
    ADDITION        reduce using rule 187 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 187 (nodoCteC -> .)
    LESS            reduce using rule 187 (nodoCteC -> .)
    GREATER         reduce using rule 187 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 187 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 187 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 187 (nodoCteC -> .)
    EQUAL           reduce using rule 187 (nodoCteC -> .)
    AND             reduce using rule 187 (nodoCteC -> .)
    OR              reduce using rule 187 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 187 (nodoCteC -> .)
    ID              reduce using rule 187 (nodoCteC -> .)
    CTEINT          reduce using rule 187 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 187 (nodoCteC -> .)
    CTECHAR         reduce using rule 187 (nodoCteC -> .)
    TRUE            reduce using rule 187 (nodoCteC -> .)
    FALSE           reduce using rule 187 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 187 (nodoCteC -> .)
    SEMICOLON       reduce using rule 187 (nodoCteC -> .)
    RBRACKET        reduce using rule 187 (nodoCteC -> .)
    COMA            reduce using rule 187 (nodoCteC -> .)

    nodoCteC                       shift and go to state 147

state 115

    (181) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 181 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 181 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 181 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 181 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 181 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 181 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 181 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 181 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 181 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 181 (CTEBOOL -> TRUE .)
    AND             reduce using rule 181 (CTEBOOL -> TRUE .)
    OR              reduce using rule 181 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 181 (CTEBOOL -> TRUE .)
    ID              reduce using rule 181 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 181 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 181 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 181 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 181 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 181 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 181 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 181 (CTEBOOL -> TRUE .)
    RBRACKET        reduce using rule 181 (CTEBOOL -> TRUE .)
    COMA            reduce using rule 181 (CTEBOOL -> TRUE .)


state 116

    (171) factor_var -> varcte . nodo1
    (173) nodo1 -> .

    MULTIPLICATION  reduce using rule 173 (nodo1 -> .)
    DIVISION        reduce using rule 173 (nodo1 -> .)
    ADDITION        reduce using rule 173 (nodo1 -> .)
    SUBTRACTION     reduce using rule 173 (nodo1 -> .)
    LESS            reduce using rule 173 (nodo1 -> .)
    GREATER         reduce using rule 173 (nodo1 -> .)
    LESSEQUAL       reduce using rule 173 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 173 (nodo1 -> .)
    NOTEQUAL        reduce using rule 173 (nodo1 -> .)
    EQUAL           reduce using rule 173 (nodo1 -> .)
    AND             reduce using rule 173 (nodo1 -> .)
    OR              reduce using rule 173 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 173 (nodo1 -> .)
    ID              reduce using rule 173 (nodo1 -> .)
    CTEINT          reduce using rule 173 (nodo1 -> .)
    CTEFLOAT        reduce using rule 173 (nodo1 -> .)
    CTECHAR         reduce using rule 173 (nodo1 -> .)
    TRUE            reduce using rule 173 (nodo1 -> .)
    FALSE           reduce using rule 173 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 173 (nodo1 -> .)
    SEMICOLON       reduce using rule 173 (nodo1 -> .)
    RBRACKET        reduce using rule 173 (nodo1 -> .)
    COMA            reduce using rule 173 (nodo1 -> .)

    nodo1                          shift and go to state 148

state 117

    (178) varcte -> CTEFLOAT . nodoCteF
    (185) nodoCteF -> .

    MULTIPLICATION  reduce using rule 185 (nodoCteF -> .)
    DIVISION        reduce using rule 185 (nodoCteF -> .)
    ADDITION        reduce using rule 185 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 185 (nodoCteF -> .)
    LESS            reduce using rule 185 (nodoCteF -> .)
    GREATER         reduce using rule 185 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 185 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 185 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 185 (nodoCteF -> .)
    EQUAL           reduce using rule 185 (nodoCteF -> .)
    AND             reduce using rule 185 (nodoCteF -> .)
    OR              reduce using rule 185 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 185 (nodoCteF -> .)
    ID              reduce using rule 185 (nodoCteF -> .)
    CTEINT          reduce using rule 185 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 185 (nodoCteF -> .)
    CTECHAR         reduce using rule 185 (nodoCteF -> .)
    TRUE            reduce using rule 185 (nodoCteF -> .)
    FALSE           reduce using rule 185 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 185 (nodoCteF -> .)
    SEMICOLON       reduce using rule 185 (nodoCteF -> .)
    RBRACKET        reduce using rule 185 (nodoCteF -> .)
    COMA            reduce using rule 185 (nodoCteF -> .)

    nodoCteF                       shift and go to state 149

state 118

    (161) termino -> factor . nodo4 termino_loop
    (168) nodo4 -> .

    MULTIPLICATION  reduce using rule 168 (nodo4 -> .)
    DIVISION        reduce using rule 168 (nodo4 -> .)
    ADDITION        reduce using rule 168 (nodo4 -> .)
    SUBTRACTION     reduce using rule 168 (nodo4 -> .)
    LESS            reduce using rule 168 (nodo4 -> .)
    GREATER         reduce using rule 168 (nodo4 -> .)
    LESSEQUAL       reduce using rule 168 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 168 (nodo4 -> .)
    NOTEQUAL        reduce using rule 168 (nodo4 -> .)
    EQUAL           reduce using rule 168 (nodo4 -> .)
    AND             reduce using rule 168 (nodo4 -> .)
    OR              reduce using rule 168 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 168 (nodo4 -> .)
    ID              reduce using rule 168 (nodo4 -> .)
    CTEINT          reduce using rule 168 (nodo4 -> .)
    CTEFLOAT        reduce using rule 168 (nodo4 -> .)
    CTECHAR         reduce using rule 168 (nodo4 -> .)
    TRUE            reduce using rule 168 (nodo4 -> .)
    FALSE           reduce using rule 168 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 168 (nodo4 -> .)
    SEMICOLON       reduce using rule 168 (nodo4 -> .)
    RBRACKET        reduce using rule 168 (nodo4 -> .)
    COMA            reduce using rule 168 (nodo4 -> .)

    nodo4                          shift and go to state 150

state 119

    (177) varcte -> CTEINT . nodoCteE
    (184) nodoCteE -> .

    MULTIPLICATION  reduce using rule 184 (nodoCteE -> .)
    DIVISION        reduce using rule 184 (nodoCteE -> .)
    ADDITION        reduce using rule 184 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 184 (nodoCteE -> .)
    LESS            reduce using rule 184 (nodoCteE -> .)
    GREATER         reduce using rule 184 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 184 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 184 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 184 (nodoCteE -> .)
    EQUAL           reduce using rule 184 (nodoCteE -> .)
    AND             reduce using rule 184 (nodoCteE -> .)
    OR              reduce using rule 184 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 184 (nodoCteE -> .)
    ID              reduce using rule 184 (nodoCteE -> .)
    CTEINT          reduce using rule 184 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 184 (nodoCteE -> .)
    CTECHAR         reduce using rule 184 (nodoCteE -> .)
    TRUE            reduce using rule 184 (nodoCteE -> .)
    FALSE           reduce using rule 184 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 184 (nodoCteE -> .)
    SEMICOLON       reduce using rule 184 (nodoCteE -> .)
    RBRACKET        reduce using rule 184 (nodoCteE -> .)
    COMA            reduce using rule 184 (nodoCteE -> .)

    nodoCteE                       shift and go to state 151

state 120

    (170) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 170 (factor -> factor_exp .)
    DIVISION        reduce using rule 170 (factor -> factor_exp .)
    ADDITION        reduce using rule 170 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 170 (factor -> factor_exp .)
    LESS            reduce using rule 170 (factor -> factor_exp .)
    GREATER         reduce using rule 170 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 170 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 170 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 170 (factor -> factor_exp .)
    EQUAL           reduce using rule 170 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 170 (factor -> factor_exp .)
    ID              reduce using rule 170 (factor -> factor_exp .)
    CTEINT          reduce using rule 170 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 170 (factor -> factor_exp .)
    CTECHAR         reduce using rule 170 (factor -> factor_exp .)
    TRUE            reduce using rule 170 (factor -> factor_exp .)
    FALSE           reduce using rule 170 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 170 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 170 (factor -> factor_exp .)
    RBRACKET        reduce using rule 170 (factor -> factor_exp .)
    COMA            reduce using rule 170 (factor -> factor_exp .)
    AND             reduce using rule 170 (factor -> factor_exp .)
    OR              reduce using rule 170 (factor -> factor_exp .)


state 121

    (172) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (174) nodo6 -> .

    LPARENTHESIS    reduce using rule 174 (nodo6 -> .)
    ID              reduce using rule 174 (nodo6 -> .)
    CTEINT          reduce using rule 174 (nodo6 -> .)
    CTEFLOAT        reduce using rule 174 (nodo6 -> .)
    CTECHAR         reduce using rule 174 (nodo6 -> .)
    TRUE            reduce using rule 174 (nodo6 -> .)
    FALSE           reduce using rule 174 (nodo6 -> .)

    nodo6                          shift and go to state 152

state 122

    (101) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (102) expresion_option -> . AND nodo12_and nuevaexp
    (103) expresion_option -> . OR nodo12_or nuevaexp
    (104) expresion_option -> .

    AND             shift and go to state 153
    OR              shift and go to state 155
    LPARENTHESIS    reduce using rule 104 (expresion_option -> .)
    ID              reduce using rule 104 (expresion_option -> .)
    CTEINT          reduce using rule 104 (expresion_option -> .)
    CTEFLOAT        reduce using rule 104 (expresion_option -> .)
    CTECHAR         reduce using rule 104 (expresion_option -> .)
    TRUE            reduce using rule 104 (expresion_option -> .)
    FALSE           reduce using rule 104 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 104 (expresion_option -> .)
    SEMICOLON       reduce using rule 104 (expresion_option -> .)
    RBRACKET        reduce using rule 104 (expresion_option -> .)
    COMA            reduce using rule 104 (expresion_option -> .)

    expresion_option               shift and go to state 154

state 123

    (176) varcte -> ID . nodoCteV
    (183) nodoCteV -> .

    MULTIPLICATION  reduce using rule 183 (nodoCteV -> .)
    DIVISION        reduce using rule 183 (nodoCteV -> .)
    ADDITION        reduce using rule 183 (nodoCteV -> .)
    SUBTRACTION     reduce using rule 183 (nodoCteV -> .)
    LESS            reduce using rule 183 (nodoCteV -> .)
    GREATER         reduce using rule 183 (nodoCteV -> .)
    LESSEQUAL       reduce using rule 183 (nodoCteV -> .)
    GREATEREQUAL    reduce using rule 183 (nodoCteV -> .)
    NOTEQUAL        reduce using rule 183 (nodoCteV -> .)
    EQUAL           reduce using rule 183 (nodoCteV -> .)
    AND             reduce using rule 183 (nodoCteV -> .)
    OR              reduce using rule 183 (nodoCteV -> .)
    LPARENTHESIS    reduce using rule 183 (nodoCteV -> .)
    ID              reduce using rule 183 (nodoCteV -> .)
    CTEINT          reduce using rule 183 (nodoCteV -> .)
    CTEFLOAT        reduce using rule 183 (nodoCteV -> .)
    CTECHAR         reduce using rule 183 (nodoCteV -> .)
    TRUE            reduce using rule 183 (nodoCteV -> .)
    FALSE           reduce using rule 183 (nodoCteV -> .)
    RPARENTHESIS    reduce using rule 183 (nodoCteV -> .)
    SEMICOLON       reduce using rule 183 (nodoCteV -> .)
    RBRACKET        reduce using rule 183 (nodoCteV -> .)
    COMA            reduce using rule 183 (nodoCteV -> .)

    nodoCteV                       shift and go to state 156

state 124

    (90) escritura -> PRINT LPARENTHESIS expresion . print_cuad RPARENTHESIS SEMICOLON
    (91) print_cuad -> .

    RPARENTHESIS    reduce using rule 91 (print_cuad -> .)

    print_cuad                     shift and go to state 157

state 125

    (182) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 182 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 182 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 182 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 182 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 182 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 182 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 182 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 182 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 182 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 182 (CTEBOOL -> FALSE .)
    AND             reduce using rule 182 (CTEBOOL -> FALSE .)
    OR              reduce using rule 182 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 182 (CTEBOOL -> FALSE .)
    ID              reduce using rule 182 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 182 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 182 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 182 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 182 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 182 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 182 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 182 (CTEBOOL -> FALSE .)
    RBRACKET        reduce using rule 182 (CTEBOOL -> FALSE .)
    COMA            reduce using rule 182 (CTEBOOL -> FALSE .)


state 126

    (179) varcte -> CTEBOOL . nodoCteB
    (186) nodoCteB -> .

    MULTIPLICATION  reduce using rule 186 (nodoCteB -> .)
    DIVISION        reduce using rule 186 (nodoCteB -> .)
    ADDITION        reduce using rule 186 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 186 (nodoCteB -> .)
    LESS            reduce using rule 186 (nodoCteB -> .)
    GREATER         reduce using rule 186 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 186 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 186 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 186 (nodoCteB -> .)
    EQUAL           reduce using rule 186 (nodoCteB -> .)
    AND             reduce using rule 186 (nodoCteB -> .)
    OR              reduce using rule 186 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 186 (nodoCteB -> .)
    ID              reduce using rule 186 (nodoCteB -> .)
    CTEINT          reduce using rule 186 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 186 (nodoCteB -> .)
    CTECHAR         reduce using rule 186 (nodoCteB -> .)
    TRUE            reduce using rule 186 (nodoCteB -> .)
    FALSE           reduce using rule 186 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 186 (nodoCteB -> .)
    SEMICOLON       reduce using rule 186 (nodoCteB -> .)
    RBRACKET        reduce using rule 186 (nodoCteB -> .)
    COMA            reduce using rule 186 (nodoCteB -> .)

    nodoCteB                       shift and go to state 158

state 127

    (110) nuevaexp -> exp . nuevaexp_type nodo10
    (111) nuevaexp_type -> . LESS nodo9_menor exp
    (112) nuevaexp_type -> . GREATER nodo9_mayor exp
    (113) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (114) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (115) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (116) nuevaexp_type -> . EQUAL nodo9_igual exp
    (117) nuevaexp_type -> .

    LESS            shift and go to state 161
    GREATER         shift and go to state 160
    LESSEQUAL       shift and go to state 165
    GREATEREQUAL    shift and go to state 159
    NOTEQUAL        shift and go to state 163
    EQUAL           shift and go to state 162
    AND             reduce using rule 117 (nuevaexp_type -> .)
    OR              reduce using rule 117 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 117 (nuevaexp_type -> .)
    ID              reduce using rule 117 (nuevaexp_type -> .)
    CTEINT          reduce using rule 117 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 117 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 117 (nuevaexp_type -> .)
    TRUE            reduce using rule 117 (nuevaexp_type -> .)
    FALSE           reduce using rule 117 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 117 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 117 (nuevaexp_type -> .)
    RBRACKET        reduce using rule 117 (nuevaexp_type -> .)
    COMA            reduce using rule 117 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 164

state 128

    (169) factor -> factor_var .

    MULTIPLICATION  reduce using rule 169 (factor -> factor_var .)
    DIVISION        reduce using rule 169 (factor -> factor_var .)
    ADDITION        reduce using rule 169 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 169 (factor -> factor_var .)
    LESS            reduce using rule 169 (factor -> factor_var .)
    GREATER         reduce using rule 169 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 169 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 169 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 169 (factor -> factor_var .)
    EQUAL           reduce using rule 169 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 169 (factor -> factor_var .)
    ID              reduce using rule 169 (factor -> factor_var .)
    CTEINT          reduce using rule 169 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 169 (factor -> factor_var .)
    CTECHAR         reduce using rule 169 (factor -> factor_var .)
    TRUE            reduce using rule 169 (factor -> factor_var .)
    FALSE           reduce using rule 169 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 169 (factor -> factor_var .)
    SEMICOLON       reduce using rule 169 (factor -> factor_var .)
    RBRACKET        reduce using rule 169 (factor -> factor_var .)
    COMA            reduce using rule 169 (factor -> factor_var .)
    AND             reduce using rule 169 (factor -> factor_var .)
    OR              reduce using rule 169 (factor -> factor_var .)


state 129

    (33) arreglos_locales -> ARR arr_local_id_loop SEMICOLON . arr_local_end_loop
    (37) arr_local_end_loop -> . arreglos_locales
    (38) arr_local_end_loop -> .
    (33) arreglos_locales -> . ARR arr_local_id_loop SEMICOLON arr_local_end_loop

  ! shift/reduce conflict for ARR resolved as shift
    ID              reduce using rule 38 (arr_local_end_loop -> .)
    IF              reduce using rule 38 (arr_local_end_loop -> .)
    PRINT           reduce using rule 38 (arr_local_end_loop -> .)
    WHILE           reduce using rule 38 (arr_local_end_loop -> .)
    VAR             reduce using rule 38 (arr_local_end_loop -> .)
    RCURLY          reduce using rule 38 (arr_local_end_loop -> .)
    ARR             shift and go to state 80

  ! ARR             [ reduce using rule 38 (arr_local_end_loop -> .) ]

    arr_local_end_loop             shift and go to state 166
    arreglos_locales               shift and go to state 167

state 130

    (34) arr_local_id_loop -> ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    CTEINT          shift and go to state 168


state 131

    (25) variables_locales -> VAR variable_local_id_loop SEMICOLON . variable_local_end_loop
    (30) variable_local_end_loop -> . variables_locales
    (31) variable_local_end_loop -> .
    (25) variables_locales -> . VAR variable_local_id_loop SEMICOLON variable_local_end_loop

  ! shift/reduce conflict for VAR resolved as shift
    ID              reduce using rule 31 (variable_local_end_loop -> .)
    IF              reduce using rule 31 (variable_local_end_loop -> .)
    PRINT           reduce using rule 31 (variable_local_end_loop -> .)
    WHILE           reduce using rule 31 (variable_local_end_loop -> .)
    ARR             reduce using rule 31 (variable_local_end_loop -> .)
    RCURLY          reduce using rule 31 (variable_local_end_loop -> .)
    VAR             shift and go to state 81

  ! VAR             [ reduce using rule 31 (variable_local_end_loop -> .) ]

    variable_local_end_loop        shift and go to state 169
    variables_locales              shift and go to state 170

state 132

    (26) variable_local_id_loop -> ID add_pila_var_locales . variable_local_id_loop_coma COLON tipo local_addType
    (27) variable_local_id_loop_coma -> . COMA ID add_pila_var_locales variable_local_id_loop_coma
    (28) variable_local_id_loop_coma -> .

    COMA            shift and go to state 172
    COLON           reduce using rule 28 (variable_local_id_loop_coma -> .)

    variable_local_id_loop_coma    shift and go to state 171

state 133

    (128) asignacion_option -> ASSIGN LBRACKET . asignacion_type RBRACKET set_arr_values SEMICOLON
    (130) asignacion_type -> . CTEINT add_arr_valores_pila asignacion_coma_loop
    (131) asignacion_type -> . CTEFLOAT add_arr_valores_pila asignacion_coma_loop
    (132) asignacion_type -> . CTECHAR add_arr_valores_pila asignacion_coma_loop
    (133) asignacion_type -> . CTEBOOL add_arr_valores_pila asignacion_coma_loop
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    CTEINT          shift and go to state 174
    CTEFLOAT        shift and go to state 175
    CTECHAR         shift and go to state 176
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    asignacion_type                shift and go to state 177
    CTEBOOL                        shift and go to state 173

state 134

    (126) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (152) nodo8 -> .

    SEMICOLON       reduce using rule 152 (nodo8 -> .)

    nodo8                          shift and go to state 178

state 135

    (127) asignacion_option -> ASSIGN CALL . ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad

    ID              shift and go to state 179


state 136

    (129) asignacion_option -> LBRACKET expresion . arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON
    (143) arr_pos -> .

    RBRACKET        reduce using rule 143 (arr_pos -> .)

    arr_pos                        shift and go to state 180

state 137

    (95) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 181


state 138

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion . add_cantidad_vars bloque regreso ret_cuad
    (53) add_cantidad_vars -> .

    LCURLY          reduce using rule 53 (add_cantidad_vars -> .)

    add_cantidad_vars              shift and go to state 182

state 139

    (62) arrs_locales_funcion -> ARR . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    ID              shift and go to state 183


state 140

    (55) vars_locales_funcion -> VAR ID . add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (50) add_pila_funciones -> .

    COMA            reduce using rule 50 (add_pila_funciones -> .)
    COLON           reduce using rule 50 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 184

state 141

    (46) params -> ID add_pila_funciones params_loop COLON . tipo function_add_type semicolon_function_loop
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 185

state 142

    (48) params_loop -> COMA ID . add_pila_funciones params_loop
    (50) add_pila_funciones -> .

    COMA            reduce using rule 50 (add_pila_funciones -> .)
    COLON           reduce using rule 50 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 186

state 143

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion . add_cantidad_vars bloque ret_cuad
    (53) add_cantidad_vars -> .

    LCURLY          reduce using rule 53 (add_cantidad_vars -> .)

    add_cantidad_vars              shift and go to state 187

state 144

    (18) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_globales arr_global_id_loop_coma
    (22) add_pila_arr_globales -> .

    COMA            reduce using rule 22 (add_pila_arr_globales -> .)
    COLON           reduce using rule 22 (add_pila_arr_globales -> .)

    add_pila_arr_globales          shift and go to state 188

state 145

    (92) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 189


state 146

    (153) exp -> termino nodo5 . exp_loop
    (154) exp_loop -> . exp_type_loop
    (155) exp_loop -> .
    (156) exp_type_loop -> . ADDITION nodo3_suma exp
    (157) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    LESS            reduce using rule 155 (exp_loop -> .)
    GREATER         reduce using rule 155 (exp_loop -> .)
    LESSEQUAL       reduce using rule 155 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 155 (exp_loop -> .)
    NOTEQUAL        reduce using rule 155 (exp_loop -> .)
    EQUAL           reduce using rule 155 (exp_loop -> .)
    AND             reduce using rule 155 (exp_loop -> .)
    OR              reduce using rule 155 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 155 (exp_loop -> .)
    ID              reduce using rule 155 (exp_loop -> .)
    CTEINT          reduce using rule 155 (exp_loop -> .)
    CTEFLOAT        reduce using rule 155 (exp_loop -> .)
    CTECHAR         reduce using rule 155 (exp_loop -> .)
    TRUE            reduce using rule 155 (exp_loop -> .)
    FALSE           reduce using rule 155 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 155 (exp_loop -> .)
    SEMICOLON       reduce using rule 155 (exp_loop -> .)
    RBRACKET        reduce using rule 155 (exp_loop -> .)
    COMA            reduce using rule 155 (exp_loop -> .)
    ADDITION        shift and go to state 190
    SUBTRACTION     shift and go to state 193

    exp_loop                       shift and go to state 191
    exp_type_loop                  shift and go to state 192

state 147

    (180) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    RBRACKET        reduce using rule 180 (varcte -> CTECHAR nodoCteC .)
    COMA            reduce using rule 180 (varcte -> CTECHAR nodoCteC .)


state 148

    (171) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 171 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 171 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 171 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 171 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 171 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 171 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 171 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 171 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 171 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 171 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 171 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 171 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 171 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 171 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 171 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 171 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 171 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 171 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 171 (factor_var -> varcte nodo1 .)
    COMA            reduce using rule 171 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 171 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 171 (factor_var -> varcte nodo1 .)
    RBRACKET        reduce using rule 171 (factor_var -> varcte nodo1 .)


state 149

    (178) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    RBRACKET        reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)
    COMA            reduce using rule 178 (varcte -> CTEFLOAT nodoCteF .)


state 150

    (161) termino -> factor nodo4 . termino_loop
    (162) termino_loop -> . termino_type_loop
    (163) termino_loop -> .
    (164) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (165) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 163 (termino_loop -> .)
    SUBTRACTION     reduce using rule 163 (termino_loop -> .)
    LESS            reduce using rule 163 (termino_loop -> .)
    GREATER         reduce using rule 163 (termino_loop -> .)
    LESSEQUAL       reduce using rule 163 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 163 (termino_loop -> .)
    NOTEQUAL        reduce using rule 163 (termino_loop -> .)
    EQUAL           reduce using rule 163 (termino_loop -> .)
    AND             reduce using rule 163 (termino_loop -> .)
    OR              reduce using rule 163 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 163 (termino_loop -> .)
    ID              reduce using rule 163 (termino_loop -> .)
    CTEINT          reduce using rule 163 (termino_loop -> .)
    CTEFLOAT        reduce using rule 163 (termino_loop -> .)
    CTECHAR         reduce using rule 163 (termino_loop -> .)
    TRUE            reduce using rule 163 (termino_loop -> .)
    FALSE           reduce using rule 163 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 163 (termino_loop -> .)
    SEMICOLON       reduce using rule 163 (termino_loop -> .)
    RBRACKET        reduce using rule 163 (termino_loop -> .)
    COMA            reduce using rule 163 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 196
    DIVISION        shift and go to state 194

    termino_type_loop              shift and go to state 195
    termino_loop                   shift and go to state 197

state 151

    (177) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    RBRACKET        reduce using rule 177 (varcte -> CTEINT nodoCteE .)
    COMA            reduce using rule 177 (varcte -> CTEINT nodoCteE .)


state 152

    (172) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 198
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 153

    (102) expresion_option -> AND . nodo12_and nuevaexp
    (107) nodo12_and -> .

    LPARENTHESIS    reduce using rule 107 (nodo12_and -> .)
    ID              reduce using rule 107 (nodo12_and -> .)
    CTEINT          reduce using rule 107 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 107 (nodo12_and -> .)
    CTECHAR         reduce using rule 107 (nodo12_and -> .)
    TRUE            reduce using rule 107 (nodo12_and -> .)
    FALSE           reduce using rule 107 (nodo12_and -> .)

    nodo12_and                     shift and go to state 199

state 154

    (101) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (109) nodo11 -> .

    LPARENTHESIS    reduce using rule 109 (nodo11 -> .)
    ID              reduce using rule 109 (nodo11 -> .)
    CTEINT          reduce using rule 109 (nodo11 -> .)
    CTEFLOAT        reduce using rule 109 (nodo11 -> .)
    CTECHAR         reduce using rule 109 (nodo11 -> .)
    TRUE            reduce using rule 109 (nodo11 -> .)
    FALSE           reduce using rule 109 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 109 (nodo11 -> .)
    SEMICOLON       reduce using rule 109 (nodo11 -> .)
    RBRACKET        reduce using rule 109 (nodo11 -> .)
    COMA            reduce using rule 109 (nodo11 -> .)

    nodo11                         shift and go to state 200

state 155

    (103) expresion_option -> OR . nodo12_or nuevaexp
    (108) nodo12_or -> .

    LPARENTHESIS    reduce using rule 108 (nodo12_or -> .)
    ID              reduce using rule 108 (nodo12_or -> .)
    CTEINT          reduce using rule 108 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 108 (nodo12_or -> .)
    CTECHAR         reduce using rule 108 (nodo12_or -> .)
    TRUE            reduce using rule 108 (nodo12_or -> .)
    FALSE           reduce using rule 108 (nodo12_or -> .)

    nodo12_or                      shift and go to state 201

state 156

    (176) varcte -> ID nodoCteV .

    MULTIPLICATION  reduce using rule 176 (varcte -> ID nodoCteV .)
    DIVISION        reduce using rule 176 (varcte -> ID nodoCteV .)
    ADDITION        reduce using rule 176 (varcte -> ID nodoCteV .)
    SUBTRACTION     reduce using rule 176 (varcte -> ID nodoCteV .)
    LESS            reduce using rule 176 (varcte -> ID nodoCteV .)
    GREATER         reduce using rule 176 (varcte -> ID nodoCteV .)
    LESSEQUAL       reduce using rule 176 (varcte -> ID nodoCteV .)
    GREATEREQUAL    reduce using rule 176 (varcte -> ID nodoCteV .)
    NOTEQUAL        reduce using rule 176 (varcte -> ID nodoCteV .)
    EQUAL           reduce using rule 176 (varcte -> ID nodoCteV .)
    AND             reduce using rule 176 (varcte -> ID nodoCteV .)
    OR              reduce using rule 176 (varcte -> ID nodoCteV .)
    LPARENTHESIS    reduce using rule 176 (varcte -> ID nodoCteV .)
    ID              reduce using rule 176 (varcte -> ID nodoCteV .)
    CTEINT          reduce using rule 176 (varcte -> ID nodoCteV .)
    CTEFLOAT        reduce using rule 176 (varcte -> ID nodoCteV .)
    CTECHAR         reduce using rule 176 (varcte -> ID nodoCteV .)
    TRUE            reduce using rule 176 (varcte -> ID nodoCteV .)
    FALSE           reduce using rule 176 (varcte -> ID nodoCteV .)
    RPARENTHESIS    reduce using rule 176 (varcte -> ID nodoCteV .)
    SEMICOLON       reduce using rule 176 (varcte -> ID nodoCteV .)
    RBRACKET        reduce using rule 176 (varcte -> ID nodoCteV .)
    COMA            reduce using rule 176 (varcte -> ID nodoCteV .)


state 157

    (90) escritura -> PRINT LPARENTHESIS expresion print_cuad . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 202


state 158

    (179) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    RBRACKET        reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)
    COMA            reduce using rule 179 (varcte -> CTEBOOL nodoCteB .)


state 159

    (114) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (122) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 122 (nodo9_mayorig -> .)
    ID              reduce using rule 122 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 122 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 122 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 122 (nodo9_mayorig -> .)
    TRUE            reduce using rule 122 (nodo9_mayorig -> .)
    FALSE           reduce using rule 122 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 203

state 160

    (112) nuevaexp_type -> GREATER . nodo9_mayor exp
    (120) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 120 (nodo9_mayor -> .)
    ID              reduce using rule 120 (nodo9_mayor -> .)
    CTEINT          reduce using rule 120 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 120 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 120 (nodo9_mayor -> .)
    TRUE            reduce using rule 120 (nodo9_mayor -> .)
    FALSE           reduce using rule 120 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 204

state 161

    (111) nuevaexp_type -> LESS . nodo9_menor exp
    (119) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 119 (nodo9_menor -> .)
    ID              reduce using rule 119 (nodo9_menor -> .)
    CTEINT          reduce using rule 119 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 119 (nodo9_menor -> .)
    CTECHAR         reduce using rule 119 (nodo9_menor -> .)
    TRUE            reduce using rule 119 (nodo9_menor -> .)
    FALSE           reduce using rule 119 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 205

state 162

    (116) nuevaexp_type -> EQUAL . nodo9_igual exp
    (124) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 124 (nodo9_igual -> .)
    ID              reduce using rule 124 (nodo9_igual -> .)
    CTEINT          reduce using rule 124 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 124 (nodo9_igual -> .)
    CTECHAR         reduce using rule 124 (nodo9_igual -> .)
    TRUE            reduce using rule 124 (nodo9_igual -> .)
    FALSE           reduce using rule 124 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 206

state 163

    (115) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (123) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 123 (nodo9_dif -> .)
    ID              reduce using rule 123 (nodo9_dif -> .)
    CTEINT          reduce using rule 123 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 123 (nodo9_dif -> .)
    CTECHAR         reduce using rule 123 (nodo9_dif -> .)
    TRUE            reduce using rule 123 (nodo9_dif -> .)
    FALSE           reduce using rule 123 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 207

state 164

    (110) nuevaexp -> exp nuevaexp_type . nodo10
    (118) nodo10 -> .

    AND             reduce using rule 118 (nodo10 -> .)
    OR              reduce using rule 118 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 118 (nodo10 -> .)
    ID              reduce using rule 118 (nodo10 -> .)
    CTEINT          reduce using rule 118 (nodo10 -> .)
    CTEFLOAT        reduce using rule 118 (nodo10 -> .)
    CTECHAR         reduce using rule 118 (nodo10 -> .)
    TRUE            reduce using rule 118 (nodo10 -> .)
    FALSE           reduce using rule 118 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 118 (nodo10 -> .)
    SEMICOLON       reduce using rule 118 (nodo10 -> .)
    RBRACKET        reduce using rule 118 (nodo10 -> .)
    COMA            reduce using rule 118 (nodo10 -> .)

    nodo10                         shift and go to state 208

state 165

    (113) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (121) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 121 (nodo9_menorig -> .)
    ID              reduce using rule 121 (nodo9_menorig -> .)
    CTEINT          reduce using rule 121 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 121 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 121 (nodo9_menorig -> .)
    TRUE            reduce using rule 121 (nodo9_menorig -> .)
    FALSE           reduce using rule 121 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 209

state 166

    (33) arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .

    ID              reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    IF              reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    PRINT           reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    WHILE           reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    VAR             reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    ARR             reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)
    RCURLY          reduce using rule 33 (arreglos_locales -> ARR arr_local_id_loop SEMICOLON arr_local_end_loop .)


state 167

    (37) arr_local_end_loop -> arreglos_locales .

    ID              reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)
    IF              reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)
    PRINT           reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)
    WHILE           reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)
    VAR             reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)
    ARR             reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)
    RCURLY          reduce using rule 37 (arr_local_end_loop -> arreglos_locales .)


state 168

    (34) arr_local_id_loop -> ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType
    (23) add_arr_tam -> .

    RBRACKET        reduce using rule 23 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 210

state 169

    (25) variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .

    ID              reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    IF              reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    PRINT           reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    WHILE           reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    VAR             reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    ARR             reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)
    RCURLY          reduce using rule 25 (variables_locales -> VAR variable_local_id_loop SEMICOLON variable_local_end_loop .)


state 170

    (30) variable_local_end_loop -> variables_locales .

    ID              reduce using rule 30 (variable_local_end_loop -> variables_locales .)
    IF              reduce using rule 30 (variable_local_end_loop -> variables_locales .)
    PRINT           reduce using rule 30 (variable_local_end_loop -> variables_locales .)
    WHILE           reduce using rule 30 (variable_local_end_loop -> variables_locales .)
    VAR             reduce using rule 30 (variable_local_end_loop -> variables_locales .)
    ARR             reduce using rule 30 (variable_local_end_loop -> variables_locales .)
    RCURLY          reduce using rule 30 (variable_local_end_loop -> variables_locales .)


state 171

    (26) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma . COLON tipo local_addType

    COLON           shift and go to state 211


state 172

    (27) variable_local_id_loop_coma -> COMA . ID add_pila_var_locales variable_local_id_loop_coma

    ID              shift and go to state 212


state 173

    (133) asignacion_type -> CTEBOOL . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 213

state 174

    (130) asignacion_type -> CTEINT . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 214

state 175

    (131) asignacion_type -> CTEFLOAT . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 215

state 176

    (132) asignacion_type -> CTECHAR . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 216

state 177

    (128) asignacion_option -> ASSIGN LBRACKET asignacion_type . RBRACKET set_arr_values SEMICOLON

    RBRACKET        shift and go to state 217


state 178

    (126) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 218


state 179

    (127) asignacion_option -> ASSIGN CALL ID . function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (145) function_call -> .

    LPARENTHESIS    reduce using rule 145 (function_call -> .)

    function_call                  shift and go to state 219

state 180

    (129) asignacion_option -> LBRACKET expresion arr_pos . RBRACKET ASSIGN expresion asign_arr SEMICOLON

    RBRACKET        shift and go to state 220


state 181

    (95) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (100) nodo13 -> .

    LCURLY          reduce using rule 100 (nodo13 -> .)

    nodo13                         shift and go to state 221

state 182

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars . bloque regreso ret_cuad
    (79) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 222

state 183

    (62) arrs_locales_funcion -> ARR ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    LBRACKET        shift and go to state 223


state 184

    (55) vars_locales_funcion -> VAR ID add_pila_funciones . vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (57) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (58) vars_locales_id_loop -> .

    COMA            shift and go to state 225
    COLON           reduce using rule 58 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 224

state 185

    (46) params -> ID add_pila_funciones params_loop COLON tipo . function_add_type semicolon_function_loop
    (54) function_add_type -> .

    SEMICOLON       reduce using rule 54 (function_add_type -> .)
    RPARENTHESIS    reduce using rule 54 (function_add_type -> .)

    function_add_type              shift and go to state 226

state 186

    (48) params_loop -> COMA ID add_pila_funciones . params_loop
    (48) params_loop -> . COMA ID add_pila_funciones params_loop
    (49) params_loop -> .

    COMA            shift and go to state 109
    COLON           reduce using rule 49 (params_loop -> .)

    params_loop                    shift and go to state 227

state 187

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars . bloque ret_cuad
    (79) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 228

state 188

    (18) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales . arr_global_id_loop_coma
    (18) arr_global_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma
    (19) arr_global_id_loop_coma -> .

    COMA            shift and go to state 60
    COLON           reduce using rule 19 (arr_global_id_loop_coma -> .)

    arr_global_id_loop_coma        shift and go to state 229

state 189

    (92) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (100) nodo13 -> .

    LCURLY          reduce using rule 100 (nodo13 -> .)

    nodo13                         shift and go to state 230

state 190

    (156) exp_type_loop -> ADDITION . nodo3_suma exp
    (158) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 158 (nodo3_suma -> .)
    ID              reduce using rule 158 (nodo3_suma -> .)
    CTEINT          reduce using rule 158 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 158 (nodo3_suma -> .)
    CTECHAR         reduce using rule 158 (nodo3_suma -> .)
    TRUE            reduce using rule 158 (nodo3_suma -> .)
    FALSE           reduce using rule 158 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 231

state 191

    (153) exp -> termino nodo5 exp_loop .

    LESS            reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    SEMICOLON       reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    RBRACKET        reduce using rule 153 (exp -> termino nodo5 exp_loop .)
    COMA            reduce using rule 153 (exp -> termino nodo5 exp_loop .)


state 192

    (154) exp_loop -> exp_type_loop .

    LESS            reduce using rule 154 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 154 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 154 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 154 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 154 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 154 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 154 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 154 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 154 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 154 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 154 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 154 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 154 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 154 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 154 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 154 (exp_loop -> exp_type_loop .)
    SEMICOLON       reduce using rule 154 (exp_loop -> exp_type_loop .)
    RBRACKET        reduce using rule 154 (exp_loop -> exp_type_loop .)
    COMA            reduce using rule 154 (exp_loop -> exp_type_loop .)


state 193

    (157) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (159) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 159 (nodo3_resta -> .)
    ID              reduce using rule 159 (nodo3_resta -> .)
    CTEINT          reduce using rule 159 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 159 (nodo3_resta -> .)
    CTECHAR         reduce using rule 159 (nodo3_resta -> .)
    TRUE            reduce using rule 159 (nodo3_resta -> .)
    FALSE           reduce using rule 159 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 232

state 194

    (165) termino_type_loop -> DIVISION . nodo2_div termino
    (167) nodo2_div -> .

    LPARENTHESIS    reduce using rule 167 (nodo2_div -> .)
    ID              reduce using rule 167 (nodo2_div -> .)
    CTEINT          reduce using rule 167 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 167 (nodo2_div -> .)
    CTECHAR         reduce using rule 167 (nodo2_div -> .)
    TRUE            reduce using rule 167 (nodo2_div -> .)
    FALSE           reduce using rule 167 (nodo2_div -> .)

    nodo2_div                      shift and go to state 233

state 195

    (162) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 162 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 162 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 162 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 162 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 162 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 162 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 162 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 162 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 162 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 162 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 162 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 162 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 162 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 162 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 162 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 162 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 162 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 162 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 162 (termino_loop -> termino_type_loop .)
    RBRACKET        reduce using rule 162 (termino_loop -> termino_type_loop .)
    COMA            reduce using rule 162 (termino_loop -> termino_type_loop .)


state 196

    (164) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (166) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 166 (nodo2_mult -> .)
    ID              reduce using rule 166 (nodo2_mult -> .)
    CTEINT          reduce using rule 166 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 166 (nodo2_mult -> .)
    CTECHAR         reduce using rule 166 (nodo2_mult -> .)
    TRUE            reduce using rule 166 (nodo2_mult -> .)
    FALSE           reduce using rule 166 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 234

state 197

    (161) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    RBRACKET        reduce using rule 161 (termino -> factor nodo4 termino_loop .)
    COMA            reduce using rule 161 (termino -> factor nodo4 termino_loop .)


state 198

    (172) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 235


state 199

    (102) expresion_option -> AND nodo12_and . nuevaexp
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 236
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 200

    (101) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (105) expresion_loop -> . expresion
    (106) expresion_loop -> .
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 106 (expresion_loop -> .)
    SEMICOLON       reduce using rule 106 (expresion_loop -> .)
    RBRACKET        reduce using rule 106 (expresion_loop -> .)
    COMA            reduce using rule 106 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    expresion_loop                 shift and go to state 237
    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 238
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 201

    (103) expresion_option -> OR nodo12_or . nuevaexp
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 239
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 202

    (90) escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 240


state 203

    (114) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 241
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 204

    (112) nuevaexp_type -> GREATER nodo9_mayor . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 242
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 205

    (111) nuevaexp_type -> LESS nodo9_menor . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 243
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 206

    (116) nuevaexp_type -> EQUAL nodo9_igual . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    factor_exp                     shift and go to state 120
    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    termino                        shift and go to state 113
    exp                            shift and go to state 244
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 207

    (115) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 245
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 208

    (110) nuevaexp -> exp nuevaexp_type nodo10 .

    AND             reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    LPARENTHESIS    reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RBRACKET        reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)
    COMA            reduce using rule 110 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 209

    (113) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 246
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 210

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType

    RBRACKET        shift and go to state 247


state 211

    (26) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON . tipo local_addType
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 248

state 212

    (27) variable_local_id_loop_coma -> COMA ID . add_pila_var_locales variable_local_id_loop_coma
    (29) add_pila_var_locales -> .

    COMA            reduce using rule 29 (add_pila_var_locales -> .)
    COLON           reduce using rule 29 (add_pila_var_locales -> .)

    add_pila_var_locales           shift and go to state 249

state 213

    (133) asignacion_type -> CTEBOOL add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 251

state 214

    (130) asignacion_type -> CTEINT add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 252

state 215

    (131) asignacion_type -> CTEFLOAT add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 253

state 216

    (132) asignacion_type -> CTECHAR add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 254

state 217

    (128) asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET . set_arr_values SEMICOLON
    (142) set_arr_values -> .

    SEMICOLON       reduce using rule 142 (set_arr_values -> .)

    set_arr_values                 shift and go to state 255

state 218

    (126) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    VAR             reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    ARR             reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 126 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 219

    (127) asignacion_option -> ASSIGN CALL ID function_call . LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad

    LPARENTHESIS    shift and go to state 256


state 220

    (129) asignacion_option -> LBRACKET expresion arr_pos RBRACKET . ASSIGN expresion asign_arr SEMICOLON

    ASSIGN          shift and go to state 257


state 221

    (95) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (79) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 258

state 222

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque . regreso ret_cuad
    (88) regreso -> . RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON

    RETURN          shift and go to state 260

    regreso                        shift and go to state 259

state 223

    (62) arrs_locales_funcion -> ARR ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    CTEINT          shift and go to state 261


state 224

    (55) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop . COLON tipo function_local_add_type semicolon_function_local_loop

    COLON           shift and go to state 262


state 225

    (57) vars_locales_id_loop -> COMA . ID add_pila_funciones vars_locales_id_loop

    ID              shift and go to state 263


state 226

    (46) params -> ID add_pila_funciones params_loop COLON tipo function_add_type . semicolon_function_loop
    (51) semicolon_function_loop -> . SEMICOLON params
    (52) semicolon_function_loop -> .

    SEMICOLON       shift and go to state 264
    RPARENTHESIS    reduce using rule 52 (semicolon_function_loop -> .)

    semicolon_function_loop        shift and go to state 265

state 227

    (48) params_loop -> COMA ID add_pila_funciones params_loop .

    COLON           reduce using rule 48 (params_loop -> COMA ID add_pila_funciones params_loop .)


state 228

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque . ret_cuad
    (70) ret_cuad -> .

    VOIDTYPE        reduce using rule 70 (ret_cuad -> .)
    INTTYPE         reduce using rule 70 (ret_cuad -> .)
    FLOATTYPE       reduce using rule 70 (ret_cuad -> .)
    CHARTYPE        reduce using rule 70 (ret_cuad -> .)
    BOOLTYPE        reduce using rule 70 (ret_cuad -> .)
    MAIN            reduce using rule 70 (ret_cuad -> .)

    ret_cuad                       shift and go to state 266

state 229

    (18) arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma .

    COLON           reduce using rule 18 (arr_global_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_globales arr_global_id_loop_coma .)


state 230

    (92) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (79) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 267

state 231

    (156) exp_type_loop -> ADDITION nodo3_suma . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 268
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 232

    (157) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 113
    exp                            shift and go to state 269
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 233

    (165) termino_type_loop -> DIVISION nodo2_div . termino
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 270
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 234

    (164) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    varcte                         shift and go to state 116
    CTEBOOL                        shift and go to state 126
    factor_exp                     shift and go to state 120
    termino                        shift and go to state 271
    factor                         shift and go to state 118
    factor_var                     shift and go to state 128

state 235

    (172) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (175) nodo7 -> .

    MULTIPLICATION  reduce using rule 175 (nodo7 -> .)
    DIVISION        reduce using rule 175 (nodo7 -> .)
    ADDITION        reduce using rule 175 (nodo7 -> .)
    SUBTRACTION     reduce using rule 175 (nodo7 -> .)
    LESS            reduce using rule 175 (nodo7 -> .)
    GREATER         reduce using rule 175 (nodo7 -> .)
    LESSEQUAL       reduce using rule 175 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 175 (nodo7 -> .)
    NOTEQUAL        reduce using rule 175 (nodo7 -> .)
    EQUAL           reduce using rule 175 (nodo7 -> .)
    AND             reduce using rule 175 (nodo7 -> .)
    OR              reduce using rule 175 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 175 (nodo7 -> .)
    ID              reduce using rule 175 (nodo7 -> .)
    CTEINT          reduce using rule 175 (nodo7 -> .)
    CTEFLOAT        reduce using rule 175 (nodo7 -> .)
    CTECHAR         reduce using rule 175 (nodo7 -> .)
    TRUE            reduce using rule 175 (nodo7 -> .)
    FALSE           reduce using rule 175 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 175 (nodo7 -> .)
    SEMICOLON       reduce using rule 175 (nodo7 -> .)
    RBRACKET        reduce using rule 175 (nodo7 -> .)
    COMA            reduce using rule 175 (nodo7 -> .)

    nodo7                          shift and go to state 272

state 236

    (102) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    RBRACKET        reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)
    COMA            reduce using rule 102 (expresion_option -> AND nodo12_and nuevaexp .)


state 237

    (101) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    RPARENTHESIS    reduce using rule 101 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    SEMICOLON       reduce using rule 101 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    RBRACKET        reduce using rule 101 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    COMA            reduce using rule 101 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 238

    (105) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 105 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 105 (expresion_loop -> expresion .)
    RBRACKET        reduce using rule 105 (expresion_loop -> expresion .)
    COMA            reduce using rule 105 (expresion_loop -> expresion .)


state 239

    (103) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    RBRACKET        reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)
    COMA            reduce using rule 103 (expresion_option -> OR nodo12_or nuevaexp .)


state 240

    (90) escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .

    ID              reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    VAR             reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    ARR             reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 90 (escritura -> PRINT LPARENTHESIS expresion print_cuad RPARENTHESIS SEMICOLON .)


state 241

    (114) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RBRACKET        reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    COMA            reduce using rule 114 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 242

    (112) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RBRACKET        reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    COMA            reduce using rule 112 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 243

    (111) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    RBRACKET        reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)
    COMA            reduce using rule 111 (nuevaexp_type -> LESS nodo9_menor exp .)


state 244

    (116) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RBRACKET        reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    COMA            reduce using rule 116 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 245

    (115) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RBRACKET        reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    COMA            reduce using rule 115 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 246

    (113) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RBRACKET        reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    COMA            reduce using rule 113 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 247

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType
    (39) add_pila_arr_locales -> .

    COMA            reduce using rule 39 (add_pila_arr_locales -> .)
    COLON           reduce using rule 39 (add_pila_arr_locales -> .)

    add_pila_arr_locales           shift and go to state 273

state 248

    (26) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo . local_addType
    (32) local_addType -> .

    SEMICOLON       reduce using rule 32 (local_addType -> .)

    local_addType                  shift and go to state 274

state 249

    (27) variable_local_id_loop_coma -> COMA ID add_pila_var_locales . variable_local_id_loop_coma
    (27) variable_local_id_loop_coma -> . COMA ID add_pila_var_locales variable_local_id_loop_coma
    (28) variable_local_id_loop_coma -> .

    COMA            shift and go to state 172
    COLON           reduce using rule 28 (variable_local_id_loop_coma -> .)

    variable_local_id_loop_coma    shift and go to state 275

state 250

    (134) asignacion_coma_loop -> COMA . asignacion_type_loop
    (136) asignacion_type_loop -> . CTEINT add_arr_valores_pila asignacion_coma_loop
    (137) asignacion_type_loop -> . CTEFLOAT add_arr_valores_pila asignacion_coma_loop
    (138) asignacion_type_loop -> . CTECHAR add_arr_valores_pila asignacion_coma_loop
    (139) asignacion_type_loop -> . CTEBOOL add_arr_valores_pila asignacion_coma_loop
    (140) asignacion_type_loop -> .
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    CTEINT          shift and go to state 277
    CTEFLOAT        shift and go to state 278
    CTECHAR         shift and go to state 280
    RBRACKET        reduce using rule 140 (asignacion_type_loop -> .)
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    asignacion_type_loop           shift and go to state 279
    CTEBOOL                        shift and go to state 276

state 251

    (133) asignacion_type -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 133 (asignacion_type -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .)


state 252

    (130) asignacion_type -> CTEINT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 130 (asignacion_type -> CTEINT add_arr_valores_pila asignacion_coma_loop .)


state 253

    (131) asignacion_type -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 131 (asignacion_type -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .)


state 254

    (132) asignacion_type -> CTECHAR add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 132 (asignacion_type -> CTECHAR add_arr_valores_pila asignacion_coma_loop .)


state 255

    (128) asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values . SEMICOLON

    SEMICOLON       shift and go to state 281


state 256

    (127) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS . func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad
    (146) func_args -> . expresion args_cuad func_args_loop
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    func_args                      shift and go to state 282
    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 283
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 257

    (129) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN . expresion asign_arr SEMICOLON
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 284
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 258

    (95) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (96) condicion_option -> . ELSE nodo14 bloque
    (97) condicion_option -> .

    ELSE            shift and go to state 285
    ID              reduce using rule 97 (condicion_option -> .)
    IF              reduce using rule 97 (condicion_option -> .)
    PRINT           reduce using rule 97 (condicion_option -> .)
    WHILE           reduce using rule 97 (condicion_option -> .)
    VAR             reduce using rule 97 (condicion_option -> .)
    ARR             reduce using rule 97 (condicion_option -> .)
    RCURLY          reduce using rule 97 (condicion_option -> .)

    condicion_option               shift and go to state 286

state 259

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso . ret_cuad
    (70) ret_cuad -> .

    VOIDTYPE        reduce using rule 70 (ret_cuad -> .)
    INTTYPE         reduce using rule 70 (ret_cuad -> .)
    FLOATTYPE       reduce using rule 70 (ret_cuad -> .)
    CHARTYPE        reduce using rule 70 (ret_cuad -> .)
    BOOLTYPE        reduce using rule 70 (ret_cuad -> .)
    MAIN            reduce using rule 70 (ret_cuad -> .)

    ret_cuad                       shift and go to state 287

state 260

    (88) regreso -> RETURN . LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 288


state 261

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (23) add_arr_tam -> .

    RBRACKET        reduce using rule 23 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 289

state 262

    (55) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON . tipo function_local_add_type semicolon_function_local_loop
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 290

state 263

    (57) vars_locales_id_loop -> COMA ID . add_pila_funciones vars_locales_id_loop
    (50) add_pila_funciones -> .

    COMA            reduce using rule 50 (add_pila_funciones -> .)
    COLON           reduce using rule 50 (add_pila_funciones -> .)

    add_pila_funciones             shift and go to state 291

state 264

    (51) semicolon_function_loop -> SEMICOLON . params
    (46) params -> . ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop
    (47) params -> .

    ID              shift and go to state 69
    RPARENTHESIS    reduce using rule 47 (params -> .)

    params                         shift and go to state 292

state 265

    (46) params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .

    RPARENTHESIS    reduce using rule 46 (params -> ID add_pila_funciones params_loop COLON tipo function_add_type semicolon_function_loop .)


state 266

    (44) funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .

    VOIDTYPE        reduce using rule 44 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    INTTYPE         reduce using rule 44 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    FLOATTYPE       reduce using rule 44 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    CHARTYPE        reduce using rule 44 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    BOOLTYPE        reduce using rule 44 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)
    MAIN            reduce using rule 44 (funcion -> VOIDTYPE FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque ret_cuad .)


state 267

    (92) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (94) nodo17 -> .

    ID              reduce using rule 94 (nodo17 -> .)
    IF              reduce using rule 94 (nodo17 -> .)
    PRINT           reduce using rule 94 (nodo17 -> .)
    WHILE           reduce using rule 94 (nodo17 -> .)
    VAR             reduce using rule 94 (nodo17 -> .)
    ARR             reduce using rule 94 (nodo17 -> .)
    RCURLY          reduce using rule 94 (nodo17 -> .)

    nodo17                         shift and go to state 293

state 268

    (156) exp_type_loop -> ADDITION nodo3_suma exp .

    LESS            reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    SEMICOLON       reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RBRACKET        reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)
    COMA            reduce using rule 156 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 269

    (157) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    LESS            reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    SEMICOLON       reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RBRACKET        reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    COMA            reduce using rule 157 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 270

    (165) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    RBRACKET        reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)
    COMA            reduce using rule 165 (termino_type_loop -> DIVISION nodo2_div termino .)


state 271

    (164) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RBRACKET        reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    COMA            reduce using rule 164 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 272

    (172) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RBRACKET        reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    COMA            reduce using rule 172 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 273

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales . arr_local_id_loop_coma COLON tipo arr_local_addType
    (35) arr_local_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
    (36) arr_local_id_loop_coma -> .

    COMA            shift and go to state 295
    COLON           reduce using rule 36 (arr_local_id_loop_coma -> .)

    arr_local_id_loop_coma         shift and go to state 294

state 274

    (26) variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType .

    SEMICOLON       reduce using rule 26 (variable_local_id_loop -> ID add_pila_var_locales variable_local_id_loop_coma COLON tipo local_addType .)


state 275

    (27) variable_local_id_loop_coma -> COMA ID add_pila_var_locales variable_local_id_loop_coma .

    COLON           reduce using rule 27 (variable_local_id_loop_coma -> COMA ID add_pila_var_locales variable_local_id_loop_coma .)


state 276

    (139) asignacion_type_loop -> CTEBOOL . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 296

state 277

    (136) asignacion_type_loop -> CTEINT . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 297

state 278

    (137) asignacion_type_loop -> CTEFLOAT . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 298

state 279

    (134) asignacion_coma_loop -> COMA asignacion_type_loop .

    RBRACKET        reduce using rule 134 (asignacion_coma_loop -> COMA asignacion_type_loop .)


state 280

    (138) asignacion_type_loop -> CTECHAR . add_arr_valores_pila asignacion_coma_loop
    (141) add_arr_valores_pila -> .

    COMA            reduce using rule 141 (add_arr_valores_pila -> .)
    RBRACKET        reduce using rule 141 (add_arr_valores_pila -> .)

    add_arr_valores_pila           shift and go to state 299

state 281

    (128) asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .

    ID              reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    IF              reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    PRINT           reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    WHILE           reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    VAR             reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    ARR             reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)
    RCURLY          reduce using rule 128 (asignacion_option -> ASSIGN LBRACKET asignacion_type RBRACKET set_arr_values SEMICOLON .)


state 282

    (127) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args . RPARENTHESIS gosub SEMICOLON asign_return_cuad

    RPARENTHESIS    shift and go to state 300


state 283

    (146) func_args -> expresion . args_cuad func_args_loop
    (150) args_cuad -> .

    COMA            reduce using rule 150 (args_cuad -> .)
    RPARENTHESIS    reduce using rule 150 (args_cuad -> .)

    args_cuad                      shift and go to state 301

state 284

    (129) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion . asign_arr SEMICOLON
    (144) asign_arr -> .

    SEMICOLON       reduce using rule 144 (asign_arr -> .)

    asign_arr                      shift and go to state 302

state 285

    (96) condicion_option -> ELSE . nodo14 bloque
    (99) nodo14 -> .

    LCURLY          reduce using rule 99 (nodo14 -> .)

    nodo14                         shift and go to state 303

state 286

    (95) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (98) nodo15 -> .

    ID              reduce using rule 98 (nodo15 -> .)
    IF              reduce using rule 98 (nodo15 -> .)
    PRINT           reduce using rule 98 (nodo15 -> .)
    WHILE           reduce using rule 98 (nodo15 -> .)
    VAR             reduce using rule 98 (nodo15 -> .)
    ARR             reduce using rule 98 (nodo15 -> .)
    RCURLY          reduce using rule 98 (nodo15 -> .)

    nodo15                         shift and go to state 304

state 287

    (43) funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .

    VOIDTYPE        reduce using rule 43 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .)
    INTTYPE         reduce using rule 43 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .)
    FLOATTYPE       reduce using rule 43 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .)
    CHARTYPE        reduce using rule 43 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .)
    BOOLTYPE        reduce using rule 43 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .)
    MAIN            reduce using rule 43 (funcion -> tipo FUNC ID add_dir_funciones LPARENTHESIS params RPARENTHESIS vars_locales_funcion arrs_locales_funcion add_cantidad_vars bloque regreso ret_cuad .)


state 288

    (88) regreso -> RETURN LPARENTHESIS . expresion return_cuad RPARENTHESIS SEMICOLON
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 305
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 289

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    RBRACKET        shift and go to state 306


state 290

    (55) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo . function_local_add_type semicolon_function_local_loop
    (61) function_local_add_type -> .

    SEMICOLON       reduce using rule 61 (function_local_add_type -> .)
    ARR             reduce using rule 61 (function_local_add_type -> .)
    LCURLY          reduce using rule 61 (function_local_add_type -> .)

    function_local_add_type        shift and go to state 307

state 291

    (57) vars_locales_id_loop -> COMA ID add_pila_funciones . vars_locales_id_loop
    (57) vars_locales_id_loop -> . COMA ID add_pila_funciones vars_locales_id_loop
    (58) vars_locales_id_loop -> .

    COMA            shift and go to state 225
    COLON           reduce using rule 58 (vars_locales_id_loop -> .)

    vars_locales_id_loop           shift and go to state 308

state 292

    (51) semicolon_function_loop -> SEMICOLON params .

    RPARENTHESIS    reduce using rule 51 (semicolon_function_loop -> SEMICOLON params .)


state 293

    (92) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    VAR             reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    ARR             reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 92 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 294

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma . COLON tipo arr_local_addType

    COLON           shift and go to state 309


state 295

    (35) arr_local_id_loop_coma -> COMA . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    ID              shift and go to state 310


state 296

    (139) asignacion_type_loop -> CTEBOOL add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 311

state 297

    (136) asignacion_type_loop -> CTEINT add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 312

state 298

    (137) asignacion_type_loop -> CTEFLOAT add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 313

state 299

    (138) asignacion_type_loop -> CTECHAR add_arr_valores_pila . asignacion_coma_loop
    (134) asignacion_coma_loop -> . COMA asignacion_type_loop
    (135) asignacion_coma_loop -> .

    COMA            shift and go to state 250
    RBRACKET        reduce using rule 135 (asignacion_coma_loop -> .)

    asignacion_coma_loop           shift and go to state 314

state 300

    (127) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS . gosub SEMICOLON asign_return_cuad
    (149) gosub -> .

    SEMICOLON       reduce using rule 149 (gosub -> .)

    gosub                          shift and go to state 315

state 301

    (146) func_args -> expresion args_cuad . func_args_loop
    (147) func_args_loop -> . COMA expresion args_cuad func_args_loop
    (148) func_args_loop -> .

    COMA            shift and go to state 316
    RPARENTHESIS    reduce using rule 148 (func_args_loop -> .)

    func_args_loop                 shift and go to state 317

state 302

    (129) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr . SEMICOLON

    SEMICOLON       shift and go to state 318


state 303

    (96) condicion_option -> ELSE nodo14 . bloque
    (79) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 319

state 304

    (95) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    VAR             reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    ARR             reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 95 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 305

    (88) regreso -> RETURN LPARENTHESIS expresion . return_cuad RPARENTHESIS SEMICOLON
    (89) return_cuad -> .

    RPARENTHESIS    reduce using rule 89 (return_cuad -> .)

    return_cuad                    shift and go to state 320

state 306

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (68) add_pila_arr_funciones -> .

    COMA            reduce using rule 68 (add_pila_arr_funciones -> .)
    COLON           reduce using rule 68 (add_pila_arr_funciones -> .)

    add_pila_arr_funciones         shift and go to state 321

state 307

    (55) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type . semicolon_function_local_loop
    (59) semicolon_function_local_loop -> . SEMICOLON vars_locales_funcion
    (60) semicolon_function_local_loop -> .

    SEMICOLON       shift and go to state 322
    ARR             reduce using rule 60 (semicolon_function_local_loop -> .)
    LCURLY          reduce using rule 60 (semicolon_function_local_loop -> .)

    semicolon_function_local_loop  shift and go to state 323

state 308

    (57) vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .

    COLON           reduce using rule 57 (vars_locales_id_loop -> COMA ID add_pila_funciones vars_locales_id_loop .)


state 309

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON . tipo arr_local_addType
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 324

state 310

    (35) arr_local_id_loop_coma -> COMA ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    LBRACKET        shift and go to state 325


state 311

    (139) asignacion_type_loop -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 139 (asignacion_type_loop -> CTEBOOL add_arr_valores_pila asignacion_coma_loop .)


state 312

    (136) asignacion_type_loop -> CTEINT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 136 (asignacion_type_loop -> CTEINT add_arr_valores_pila asignacion_coma_loop .)


state 313

    (137) asignacion_type_loop -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 137 (asignacion_type_loop -> CTEFLOAT add_arr_valores_pila asignacion_coma_loop .)


state 314

    (138) asignacion_type_loop -> CTECHAR add_arr_valores_pila asignacion_coma_loop .

    RBRACKET        reduce using rule 138 (asignacion_type_loop -> CTECHAR add_arr_valores_pila asignacion_coma_loop .)


state 315

    (127) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub . SEMICOLON asign_return_cuad

    SEMICOLON       shift and go to state 326


state 316

    (147) func_args_loop -> COMA . expresion args_cuad func_args_loop
    (101) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (110) nuevaexp -> . exp nuevaexp_type nodo10
    (153) exp -> . termino nodo5 exp_loop
    (161) termino -> . factor nodo4 termino_loop
    (169) factor -> . factor_var
    (170) factor -> . factor_exp
    (171) factor_var -> . varcte nodo1
    (172) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (176) varcte -> . ID nodoCteV
    (177) varcte -> . CTEINT nodoCteE
    (178) varcte -> . CTEFLOAT nodoCteF
    (179) varcte -> . CTEBOOL nodoCteB
    (180) varcte -> . CTECHAR nodoCteC
    (181) CTEBOOL -> . TRUE
    (182) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 121
    ID              shift and go to state 123
    CTEINT          shift and go to state 119
    CTEFLOAT        shift and go to state 117
    CTECHAR         shift and go to state 114
    TRUE            shift and go to state 115
    FALSE           shift and go to state 125

    termino                        shift and go to state 113
    varcte                         shift and go to state 116
    factor                         shift and go to state 118
    factor_exp                     shift and go to state 120
    nuevaexp                       shift and go to state 122
    expresion                      shift and go to state 327
    CTEBOOL                        shift and go to state 126
    exp                            shift and go to state 127
    factor_var                     shift and go to state 128

state 317

    (146) func_args -> expresion args_cuad func_args_loop .

    RPARENTHESIS    reduce using rule 146 (func_args -> expresion args_cuad func_args_loop .)


state 318

    (129) asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .

    ID              reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    IF              reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    PRINT           reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    WHILE           reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    VAR             reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    ARR             reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)
    RCURLY          reduce using rule 129 (asignacion_option -> LBRACKET expresion arr_pos RBRACKET ASSIGN expresion asign_arr SEMICOLON .)


state 319

    (96) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)
    VAR             reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)
    ARR             reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 96 (condicion_option -> ELSE nodo14 bloque .)


state 320

    (88) regreso -> RETURN LPARENTHESIS expresion return_cuad . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 328


state 321

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones . arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (64) arrs_locales_id_loop -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
    (65) arrs_locales_id_loop -> .

    COMA            shift and go to state 329
    COLON           reduce using rule 65 (arrs_locales_id_loop -> .)

    arrs_locales_id_loop           shift and go to state 330

state 322

    (59) semicolon_function_local_loop -> SEMICOLON . vars_locales_funcion
    (55) vars_locales_funcion -> . VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop
    (56) vars_locales_funcion -> .

    VAR             shift and go to state 107
    ARR             reduce using rule 56 (vars_locales_funcion -> .)
    LCURLY          reduce using rule 56 (vars_locales_funcion -> .)

    vars_locales_funcion           shift and go to state 331

state 323

    (55) vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .

    ARR             reduce using rule 55 (vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .)
    LCURLY          reduce using rule 55 (vars_locales_funcion -> VAR ID add_pila_funciones vars_locales_id_loop COLON tipo function_local_add_type semicolon_function_local_loop .)


state 324

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo . arr_local_addType
    (40) arr_local_addType -> .

    SEMICOLON       reduce using rule 40 (arr_local_addType -> .)

    arr_local_addType              shift and go to state 332

state 325

    (35) arr_local_id_loop_coma -> COMA ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    CTEINT          shift and go to state 333


state 326

    (127) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON . asign_return_cuad
    (151) asign_return_cuad -> .

    ID              reduce using rule 151 (asign_return_cuad -> .)
    IF              reduce using rule 151 (asign_return_cuad -> .)
    PRINT           reduce using rule 151 (asign_return_cuad -> .)
    WHILE           reduce using rule 151 (asign_return_cuad -> .)
    VAR             reduce using rule 151 (asign_return_cuad -> .)
    ARR             reduce using rule 151 (asign_return_cuad -> .)
    RCURLY          reduce using rule 151 (asign_return_cuad -> .)

    asign_return_cuad              shift and go to state 334

state 327

    (147) func_args_loop -> COMA expresion . args_cuad func_args_loop
    (150) args_cuad -> .

    COMA            reduce using rule 150 (args_cuad -> .)
    RPARENTHESIS    reduce using rule 150 (args_cuad -> .)

    args_cuad                      shift and go to state 335

state 328

    (88) regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 336


state 329

    (64) arrs_locales_id_loop -> COMA . ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    ID              shift and go to state 337


state 330

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop . COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop

    COLON           shift and go to state 338


state 331

    (59) semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .

    ARR             reduce using rule 59 (semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .)
    LCURLY          reduce using rule 59 (semicolon_function_local_loop -> SEMICOLON vars_locales_funcion .)


state 332

    (34) arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType .

    SEMICOLON       reduce using rule 34 (arr_local_id_loop -> ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma COLON tipo arr_local_addType .)


state 333

    (35) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
    (23) add_arr_tam -> .

    RBRACKET        reduce using rule 23 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 339

state 334

    (127) asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .

    ID              reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    IF              reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    PRINT           reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    WHILE           reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    VAR             reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    ARR             reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)
    RCURLY          reduce using rule 127 (asignacion_option -> ASSIGN CALL ID function_call LPARENTHESIS func_args RPARENTHESIS gosub SEMICOLON asign_return_cuad .)


state 335

    (147) func_args_loop -> COMA expresion args_cuad . func_args_loop
    (147) func_args_loop -> . COMA expresion args_cuad func_args_loop
    (148) func_args_loop -> .

    COMA            shift and go to state 316
    RPARENTHESIS    reduce using rule 148 (func_args_loop -> .)

    func_args_loop                 shift and go to state 340

state 336

    (88) regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .

    VOIDTYPE        reduce using rule 88 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    INTTYPE         reduce using rule 88 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    FLOATTYPE       reduce using rule 88 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    CHARTYPE        reduce using rule 88 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    BOOLTYPE        reduce using rule 88 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)
    MAIN            reduce using rule 88 (regreso -> RETURN LPARENTHESIS expresion return_cuad RPARENTHESIS SEMICOLON .)


state 337

    (64) arrs_locales_id_loop -> COMA ID . LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    LBRACKET        shift and go to state 341


state 338

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON . tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (74) tipo -> . INTTYPE
    (75) tipo -> . FLOATTYPE
    (76) tipo -> . CHARTYPE
    (77) tipo -> . BOOLTYPE
    (78) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 36
    FLOATTYPE       shift and go to state 35
    CHARTYPE        shift and go to state 32
    BOOLTYPE        shift and go to state 34
    VOIDTYPE        shift and go to state 46

    tipo                           shift and go to state 342

state 339

    (35) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_locales arr_local_id_loop_coma

    RBRACKET        shift and go to state 343


state 340

    (147) func_args_loop -> COMA expresion args_cuad func_args_loop .

    RPARENTHESIS    reduce using rule 147 (func_args_loop -> COMA expresion args_cuad func_args_loop .)


state 341

    (64) arrs_locales_id_loop -> COMA ID LBRACKET . CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    CTEINT          shift and go to state 344


state 342

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo . function_local_arr_add_type semicolon_function_local_arr_loop
    (69) function_local_arr_add_type -> .

    SEMICOLON       reduce using rule 69 (function_local_arr_add_type -> .)
    LCURLY          reduce using rule 69 (function_local_arr_add_type -> .)

    function_local_arr_add_type    shift and go to state 345

state 343

    (35) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_locales arr_local_id_loop_coma
    (39) add_pila_arr_locales -> .

    COMA            reduce using rule 39 (add_pila_arr_locales -> .)
    COLON           reduce using rule 39 (add_pila_arr_locales -> .)

    add_pila_arr_locales           shift and go to state 346

state 344

    (64) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT . add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
    (23) add_arr_tam -> .

    RBRACKET        reduce using rule 23 (add_arr_tam -> .)

    add_arr_tam                    shift and go to state 347

state 345

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type . semicolon_function_local_arr_loop
    (66) semicolon_function_local_arr_loop -> . SEMICOLON arrs_locales_funcion
    (67) semicolon_function_local_arr_loop -> .

    SEMICOLON       shift and go to state 348
    LCURLY          reduce using rule 67 (semicolon_function_local_arr_loop -> .)

    semicolon_function_local_arr_loop shift and go to state 349

state 346

    (35) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales . arr_local_id_loop_coma
    (35) arr_local_id_loop_coma -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma
    (36) arr_local_id_loop_coma -> .

    COMA            shift and go to state 295
    COLON           reduce using rule 36 (arr_local_id_loop_coma -> .)

    arr_local_id_loop_coma         shift and go to state 350

state 347

    (64) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam . RBRACKET add_pila_arr_funciones arrs_locales_id_loop

    RBRACKET        shift and go to state 351


state 348

    (66) semicolon_function_local_arr_loop -> SEMICOLON . arrs_locales_funcion
    (62) arrs_locales_funcion -> . ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop
    (63) arrs_locales_funcion -> .

    ARR             shift and go to state 139
    LCURLY          reduce using rule 63 (arrs_locales_funcion -> .)

    arrs_locales_funcion           shift and go to state 352

state 349

    (62) arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop .

    LCURLY          reduce using rule 62 (arrs_locales_funcion -> ARR ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop COLON tipo function_local_arr_add_type semicolon_function_local_arr_loop .)


state 350

    (35) arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma .

    COLON           reduce using rule 35 (arr_local_id_loop_coma -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_locales arr_local_id_loop_coma .)


state 351

    (64) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET . add_pila_arr_funciones arrs_locales_id_loop
    (68) add_pila_arr_funciones -> .

    COMA            reduce using rule 68 (add_pila_arr_funciones -> .)
    COLON           reduce using rule 68 (add_pila_arr_funciones -> .)

    add_pila_arr_funciones         shift and go to state 353

state 352

    (66) semicolon_function_local_arr_loop -> SEMICOLON arrs_locales_funcion .

    LCURLY          reduce using rule 66 (semicolon_function_local_arr_loop -> SEMICOLON arrs_locales_funcion .)


state 353

    (64) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones . arrs_locales_id_loop
    (64) arrs_locales_id_loop -> . COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop
    (65) arrs_locales_id_loop -> .

    COMA            shift and go to state 329
    COLON           reduce using rule 65 (arrs_locales_id_loop -> .)

    arrs_locales_id_loop           shift and go to state 354

state 354

    (64) arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop .

    COLON           reduce using rule 64 (arrs_locales_id_loop -> COMA ID LBRACKET CTEINT add_arr_tam RBRACKET add_pila_arr_funciones arrs_locales_id_loop .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 38 resolved as shift
WARNING: shift/reduce conflict for ARR in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR in state 131 resolved as shift
