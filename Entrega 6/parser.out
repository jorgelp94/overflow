Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     nodo18 -> <empty>
Rule 3     addProcDir -> <empty>
Rule 4     addMainProc -> <empty>
Rule 5     programa_var_loop -> variable programa_var_loop
Rule 6     programa_var_loop -> <empty>
Rule 7     programa_func_loop -> funcion programa_func_loop
Rule 8     programa_func_loop -> <empty>
Rule 9     bloque -> LCURLY bloque_est_loop RCURLY
Rule 10    bloque_est_loop -> estatuto bloque_est_loop
Rule 11    bloque_est_loop -> <empty>
Rule 12    tipo -> INTTYPE
Rule 13    tipo -> FLOATTYPE
Rule 14    tipo -> CHARTYPE
Rule 15    tipo -> BOOLTYPE
Rule 16    tipo -> VOIDTYPE
Rule 17    subtipo -> INTTYPE
Rule 18    subtipo -> FLOATTYPE
Rule 19    estatuto -> asignacion
Rule 20    estatuto -> condicion
Rule 21    estatuto -> escritura
Rule 22    estatuto -> regreso
Rule 23    estatuto -> ciclo
Rule 24    regreso -> RETURN exp SEMICOLON
Rule 25    variable -> VAR variable_loop
Rule 26    variable_loop -> variable_id_loop SEMICOLON variable_end_loop
Rule 27    variable_loop -> variable_arr_loop SEMICOLON variable_end_loop
Rule 28    addType -> <empty>
Rule 29    variable_id_loop -> variable_id_loop_coma COLON tipo addType
Rule 30    variable_id_loop_coma -> ID addDirVarGlobales
Rule 31    variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma
Rule 32    variable_arr_loop -> variable_arr_coma COLON subtipo addType
Rule 33    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET
Rule 34    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
Rule 35    addDirVarGlobales -> <empty>
Rule 36    variable_end_loop -> variable
Rule 37    variable_end_loop -> <empty>
Rule 38    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 39    escritura_type -> expresion
Rule 40    escritura_type -> QUOTE CTECHAR QUOTE
Rule 41    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
Rule 42    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
Rule 43    variable_func -> VAR variable_loop_func
Rule 44    variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func
Rule 45    variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func
Rule 46    variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc
Rule 47    variable_end_loop_func -> variable_func
Rule 48    variable_end_loop_func -> <empty>
Rule 49    variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc
Rule 50    variable_id_loop_coma_func -> ID addDirVarLocalesFunc
Rule 51    variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA variable_id_loop_coma_func
Rule 52    variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET
Rule 53    variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
Rule 54    addProcDirFunc -> <empty>
Rule 55    clearFunc -> <empty>
Rule 56    addProcDirFuncVars -> <empty>
Rule 57    funcion_option -> argumentos
Rule 58    funcion_option -> <empty>
Rule 59    argumentos -> ID addDirVarLocalesFunc COLON tipo addTypeFunc argumentos_loop
Rule 60    argumentos_loop -> COMA argumentos
Rule 61    argumentos_loop -> <empty>
Rule 62    addDirVarLocalesFunc -> <empty>
Rule 63    addTypeFunc -> <empty>
Rule 64    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 65    nodo16 -> <empty>
Rule 66    nodo17 -> <empty>
Rule 67    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 68    condicion_option -> ELSE nodo14 bloque
Rule 69    condicion_option -> <empty>
Rule 70    nodo15 -> <empty>
Rule 71    nodo14 -> <empty>
Rule 72    nodo13 -> <empty>
Rule 73    expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 74    expresion_option -> AND nodo12_and nuevaexp
Rule 75    expresion_option -> OR nodo12_or nuevaexp
Rule 76    expresion_option -> <empty>
Rule 77    expresion_loop -> expresion
Rule 78    expresion_loop -> <empty>
Rule 79    nodo12_and -> <empty>
Rule 80    nodo12_or -> <empty>
Rule 81    nodo11 -> <empty>
Rule 82    nuevaexp -> exp nuevaexp_type nodo10
Rule 83    nuevaexp_type -> LESS nodo9_menor exp
Rule 84    nuevaexp_type -> GREATER nodo9_mayor exp
Rule 85    nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 86    nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 87    nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 88    nuevaexp_type -> EQUAL nodo9_igual exp
Rule 89    nuevaexp_type -> <empty>
Rule 90    nodo10 -> <empty>
Rule 91    nodo9_menor -> <empty>
Rule 92    nodo9_mayor -> <empty>
Rule 93    nodo9_menorig -> <empty>
Rule 94    nodo9_mayorig -> <empty>
Rule 95    nodo9_dif -> <empty>
Rule 96    nodo9_igual -> <empty>
Rule 97    asignacion -> ID asignacion_option
Rule 98    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 99    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 100   asignacion_type -> CTEINT
Rule 101   asignacion_type -> CTEFLOAT
Rule 102   asignacion_type -> CTEINT COMA asignacion_type
Rule 103   asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 104   nodo8 -> <empty>
Rule 105   exp -> termino nodo5 exp_loop
Rule 106   exp_loop -> exp_type_loop
Rule 107   exp_loop -> <empty>
Rule 108   exp_type_loop -> ADDITION nodo3_suma exp
Rule 109   exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 110   nodo3_suma -> <empty>
Rule 111   nodo3_resta -> <empty>
Rule 112   nodo5 -> <empty>
Rule 113   termino -> factor nodo4 termino_loop
Rule 114   termino_loop -> termino_type_loop
Rule 115   termino_loop -> <empty>
Rule 116   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 117   termino_type_loop -> DIVISION nodo2_div termino
Rule 118   nodo2_mult -> <empty>
Rule 119   nodo2_div -> <empty>
Rule 120   nodo4 -> <empty>
Rule 121   factor -> factor_var
Rule 122   factor -> factor_exp
Rule 123   factor_var -> varcte nodo1
Rule 124   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 125   nodo1 -> <empty>
Rule 126   nodo6 -> <empty>
Rule 127   nodo7 -> <empty>
Rule 128   varcte -> ID varcte_arr
Rule 129   varcte -> CTEINT nodoCteE
Rule 130   varcte -> CTEFLOAT nodoCteF
Rule 131   varcte -> CTEBOOL nodoCteB
Rule 132   varcte -> CTECHAR nodoCteC
Rule 133   llamada -> ID LPARENTHESIS llamada_params RPARENTHESIS SEMICOLON
Rule 134   llamada_params -> params
Rule 135   llamada_params -> <empty>
Rule 136   params -> varcte
Rule 137   params -> varcte COMA params
Rule 138   varcte_arr -> LBRACKET RBRACKET
Rule 139   varcte_arr -> <empty>
Rule 140   CTEBOOL -> TRUE
Rule 141   CTEBOOL -> FALSE
Rule 142   nodoCteE -> <empty>
Rule 143   nodoCteF -> <empty>
Rule 144   nodoCteB -> <empty>
Rule 145   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 108
AND                  : 74
ASSIGN               : 98 99
BOOLTYPE             : 15
CHARTYPE             : 14
COLON                : 29 32 46 49 59
COMA                 : 31 34 51 53 60 102 103 137
CTECHAR              : 40 132
CTEFLOAT             : 101 103 130
CTEINT               : 99 100 102 129
DIVISION             : 117
ELSE                 : 68
END                  : 1
EQUAL                : 88
FALSE                : 141
FLOATTYPE            : 13 18
FUNC                 : 41 42
GREATER              : 84
GREATEREQUAL         : 86
ID                   : 1 30 31 33 34 41 42 50 51 52 53 59 97 128 133
IF                   : 67
INTTYPE              : 12 17
LBRACKET             : 33 34 52 53 99 99 138
LCURLY               : 9
LESS                 : 83
LESSEQUAL            : 85
LPARENTHESIS         : 1 38 41 42 64 67 124 133
MAIN                 : 1
MULTIPLICATION       : 116
NOTEQUAL             : 87
OR                   : 75
PRINT                : 38
PROGRAM              : 1
QUOTE                : 40 40
RBRACKET             : 33 34 52 53 99 99 138
RCURLY               : 9
RETURN               : 24
RPARENTHESIS         : 1 38 41 42 64 67 124 133
SEMICOLON            : 1 24 26 27 38 44 45 98 99 133
SUBTRACTION          : 109
TRUE                 : 140
VAR                  : 25 43
VOIDTYPE             : 16
WHILE                : 64
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 131
addDirVarGlobales    : 30 31 33 34
addDirVarLocalesFunc : 50 51 52 53 59
addMainProc          : 1
addProcDir           : 1
addProcDirFunc       : 41
addProcDirFuncVars   : 42
addType              : 29 32
addTypeFunc          : 46 49 59
argumentos           : 57 60
argumentos_loop      : 59
asignacion           : 19
asignacion_option    : 97
asignacion_type      : 99 102 103
bloque               : 1 41 42 64 67 68
bloque_est_loop      : 9 10
ciclo                : 23
clearFunc            : 41 42
condicion            : 20
condicion_option     : 67
escritura            : 21
escritura_type       : 38
estatuto             : 10
exp                  : 24 82 83 84 85 86 87 88 108 109
exp_loop             : 105
exp_type_loop        : 106
expresion            : 39 64 67 77 98 124
expresion_loop       : 73
expresion_option     : 73
factor               : 113
factor_exp           : 122
factor_var           : 121
funcion              : 7
funcion_option       : 41 42
llamada              : 
llamada_params       : 133
nodo1                : 123
nodo10               : 82
nodo11               : 73
nodo12_and           : 74
nodo12_or            : 75
nodo13               : 64 67
nodo14               : 68
nodo15               : 67
nodo16               : 64
nodo17               : 64
nodo18               : 1
nodo2_div            : 117
nodo2_mult           : 116
nodo3_resta          : 109
nodo3_suma           : 108
nodo4                : 113
nodo5                : 105
nodo6                : 124
nodo7                : 124
nodo8                : 98 99
nodo9_dif            : 87
nodo9_igual          : 88
nodo9_mayor          : 84
nodo9_mayorig        : 86
nodo9_menor          : 83
nodo9_menorig        : 85
nodoCteB             : 131
nodoCteC             : 132
nodoCteE             : 129
nodoCteF             : 130
nuevaexp             : 73 74 75
nuevaexp_type        : 82
params               : 134 137
programa             : 0
programa_func_loop   : 1 7
programa_var_loop    : 1 5
regreso              : 22
subtipo              : 32 49
termino              : 105 116 117
termino_loop         : 113
termino_type_loop    : 114
tipo                 : 29 41 42 46 59
varcte               : 123 136 137
varcte_arr           : 128
variable             : 5 36
variable_arr_coma    : 32 34
variable_arr_coma_func : 49 53
variable_arr_loop    : 27
variable_arr_loop_func : 45
variable_end_loop    : 26 27
variable_end_loop_func : 44 45
variable_func        : 42 47
variable_id_loop     : 26
variable_id_loop_coma : 29 31
variable_id_loop_coma_func : 46 51
variable_id_loop_func : 44
variable_loop        : 25
variable_loop_func   : 43

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (5) programa_var_loop -> . variable programa_var_loop
    (6) programa_var_loop -> .
    (25) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 6 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 6 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 6 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 6 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 6 (programa_var_loop -> .)
    MAIN            reduce using rule 6 (programa_var_loop -> .)
    VAR             shift and go to state 5

    programa_var_loop              shift and go to state 6
    variable                       shift and go to state 7

state 5

    (25) variable -> VAR . variable_loop
    (26) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (27) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (29) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (32) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (30) variable_id_loop_coma -> . ID addDirVarGlobales
    (31) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (34) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 12

state 6

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop . nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) nodo18 -> .

    INTTYPE         reduce using rule 2 (nodo18 -> .)
    FLOATTYPE       reduce using rule 2 (nodo18 -> .)
    CHARTYPE        reduce using rule 2 (nodo18 -> .)
    BOOLTYPE        reduce using rule 2 (nodo18 -> .)
    VOIDTYPE        reduce using rule 2 (nodo18 -> .)
    MAIN            reduce using rule 2 (nodo18 -> .)

    nodo18                         shift and go to state 14

state 7

    (5) programa_var_loop -> variable . programa_var_loop
    (5) programa_var_loop -> . variable programa_var_loop
    (6) programa_var_loop -> .
    (25) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 6 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 6 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 6 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 6 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 6 (programa_var_loop -> .)
    MAIN            reduce using rule 6 (programa_var_loop -> .)
    VAR             shift and go to state 5

    variable                       shift and go to state 7
    programa_var_loop              shift and go to state 15

state 8

    (27) variable_loop -> variable_arr_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 16


state 9

    (29) variable_id_loop -> variable_id_loop_coma . COLON tipo addType

    COLON           shift and go to state 17


state 10

    (26) variable_loop -> variable_id_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 18


state 11

    (32) variable_arr_loop -> variable_arr_coma . COLON subtipo addType

    COLON           shift and go to state 19


state 12

    (25) variable -> VAR variable_loop .

    VAR             reduce using rule 25 (variable -> VAR variable_loop .)
    INTTYPE         reduce using rule 25 (variable -> VAR variable_loop .)
    FLOATTYPE       reduce using rule 25 (variable -> VAR variable_loop .)
    CHARTYPE        reduce using rule 25 (variable -> VAR variable_loop .)
    BOOLTYPE        reduce using rule 25 (variable -> VAR variable_loop .)
    VOIDTYPE        reduce using rule 25 (variable -> VAR variable_loop .)
    MAIN            reduce using rule 25 (variable -> VAR variable_loop .)


state 13

    (30) variable_id_loop_coma -> ID . addDirVarGlobales
    (31) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (34) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (35) addDirVarGlobales -> .

    COMA            reduce using rule 35 (addDirVarGlobales -> .)
    LBRACKET        reduce using rule 35 (addDirVarGlobales -> .)
    COLON           reduce using rule 35 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 20

state 14

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 . programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (7) programa_func_loop -> . funcion programa_func_loop
    (8) programa_func_loop -> .
    (41) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    MAIN            reduce using rule 8 (programa_func_loop -> .)
    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 21
    programa_func_loop             shift and go to state 28
    funcion                        shift and go to state 23

state 15

    (5) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 5 (programa_var_loop -> variable programa_var_loop .)


state 16

    (27) variable_loop -> variable_arr_loop SEMICOLON . variable_end_loop
    (36) variable_end_loop -> . variable
    (37) variable_end_loop -> .
    (25) variable -> . VAR variable_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 37 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 37 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 37 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 37 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 37 (variable_end_loop -> .)
    MAIN            reduce using rule 37 (variable_end_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 37 (variable_end_loop -> .) ]

    variable                       shift and go to state 30
    variable_end_loop              shift and go to state 29

state 17

    (29) variable_id_loop -> variable_id_loop_coma COLON . tipo addType
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 31

state 18

    (26) variable_loop -> variable_id_loop SEMICOLON . variable_end_loop
    (36) variable_end_loop -> . variable
    (37) variable_end_loop -> .
    (25) variable -> . VAR variable_loop

  ! shift/reduce conflict for VAR resolved as shift
    INTTYPE         reduce using rule 37 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 37 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 37 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 37 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 37 (variable_end_loop -> .)
    MAIN            reduce using rule 37 (variable_end_loop -> .)
    VAR             shift and go to state 5

  ! VAR             [ reduce using rule 37 (variable_end_loop -> .) ]

    variable                       shift and go to state 30
    variable_end_loop              shift and go to state 32

state 19

    (32) variable_arr_loop -> variable_arr_coma COLON . subtipo addType
    (17) subtipo -> . INTTYPE
    (18) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 33
    FLOATTYPE       shift and go to state 34

    subtipo                        shift and go to state 35

state 20

    (30) variable_id_loop_coma -> ID addDirVarGlobales .
    (31) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (34) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    COLON           reduce using rule 30 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 37
    LBRACKET        shift and go to state 36


state 21

    (41) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    FUNC            shift and go to state 38


state 22

    (16) tipo -> VOIDTYPE .

    FUNC            reduce using rule 16 (tipo -> VOIDTYPE .)
    COMA            reduce using rule 16 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 16 (tipo -> VOIDTYPE .)
    SEMICOLON       reduce using rule 16 (tipo -> VOIDTYPE .)


state 23

    (7) programa_func_loop -> funcion . programa_func_loop
    (7) programa_func_loop -> . funcion programa_func_loop
    (8) programa_func_loop -> .
    (41) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    MAIN            reduce using rule 8 (programa_func_loop -> .)
    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 21
    programa_func_loop             shift and go to state 39
    funcion                        shift and go to state 23

state 24

    (15) tipo -> BOOLTYPE .

    FUNC            reduce using rule 15 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 15 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> BOOLTYPE .)
    SEMICOLON       reduce using rule 15 (tipo -> BOOLTYPE .)


state 25

    (13) tipo -> FLOATTYPE .

    FUNC            reduce using rule 13 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 13 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> FLOATTYPE .)
    SEMICOLON       reduce using rule 13 (tipo -> FLOATTYPE .)


state 26

    (12) tipo -> INTTYPE .

    FUNC            reduce using rule 12 (tipo -> INTTYPE .)
    COMA            reduce using rule 12 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> INTTYPE .)
    SEMICOLON       reduce using rule 12 (tipo -> INTTYPE .)


state 27

    (14) tipo -> CHARTYPE .

    FUNC            reduce using rule 14 (tipo -> CHARTYPE .)
    COMA            reduce using rule 14 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> CHARTYPE .)
    SEMICOLON       reduce using rule 14 (tipo -> CHARTYPE .)


state 28

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop . addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addProcDir -> .

    MAIN            reduce using rule 3 (addProcDir -> .)

    addProcDir                     shift and go to state 40

state 29

    (27) variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 27 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)


state 30

    (36) variable_end_loop -> variable .

    VAR             reduce using rule 36 (variable_end_loop -> variable .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> variable .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> variable .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> variable .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> variable .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> variable .)
    MAIN            reduce using rule 36 (variable_end_loop -> variable .)


state 31

    (29) variable_id_loop -> variable_id_loop_coma COLON tipo . addType
    (28) addType -> .

    SEMICOLON       reduce using rule 28 (addType -> .)

    addType                        shift and go to state 41

state 32

    (26) variable_loop -> variable_id_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 26 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)


state 33

    (17) subtipo -> INTTYPE .

    SEMICOLON       reduce using rule 17 (subtipo -> INTTYPE .)


state 34

    (18) subtipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 18 (subtipo -> FLOATTYPE .)


state 35

    (32) variable_arr_loop -> variable_arr_coma COLON subtipo . addType
    (28) addType -> .

    SEMICOLON       reduce using rule 28 (addType -> .)

    addType                        shift and go to state 42

state 36

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET
    (34) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET COMA variable_arr_coma

    RBRACKET        shift and go to state 43


state 37

    (31) variable_id_loop_coma -> ID addDirVarGlobales COMA . variable_id_loop_coma
    (30) variable_id_loop_coma -> . ID addDirVarGlobales
    (31) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma

    ID              shift and go to state 44

    variable_id_loop_coma          shift and go to state 45

state 38

    (41) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    ID              shift and go to state 46


state 39

    (7) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 7 (programa_func_loop -> funcion programa_func_loop .)


state 40

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 47


state 41

    (29) variable_id_loop -> variable_id_loop_coma COLON tipo addType .

    SEMICOLON       reduce using rule 29 (variable_id_loop -> variable_id_loop_coma COLON tipo addType .)


state 42

    (32) variable_arr_loop -> variable_arr_coma COLON subtipo addType .

    SEMICOLON       reduce using rule 32 (variable_arr_loop -> variable_arr_coma COLON subtipo addType .)


state 43

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .
    (34) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET . COMA variable_arr_coma

    COLON           reduce using rule 33 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .)
    COMA            shift and go to state 48


state 44

    (30) variable_id_loop_coma -> ID . addDirVarGlobales
    (31) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (35) addDirVarGlobales -> .

    COMA            reduce using rule 35 (addDirVarGlobales -> .)
    COLON           reduce using rule 35 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 49

state 45

    (31) variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .

    COLON           reduce using rule 31 (variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .)


state 46

    (41) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    LPARENTHESIS    shift and go to state 50


state 47

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) addMainProc -> .

    LPARENTHESIS    reduce using rule 4 (addMainProc -> .)

    addMainProc                    shift and go to state 51

state 48

    (34) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA . variable_arr_coma
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (34) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 53

    variable_arr_coma              shift and go to state 52

state 49

    (30) variable_id_loop_coma -> ID addDirVarGlobales .
    (31) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma

    COLON           reduce using rule 30 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 37


state 50

    (41) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc
    (57) funcion_option -> . argumentos
    (58) funcion_option -> .
    (59) argumentos -> . ID addDirVarLocalesFunc COLON tipo addTypeFunc argumentos_loop

    RPARENTHESIS    reduce using rule 58 (funcion_option -> .)
    ID              shift and go to state 56

    funcion_option                 shift and go to state 54
    argumentos                     shift and go to state 55

state 51

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 57


state 52

    (34) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .

    COLON           reduce using rule 34 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .)


state 53

    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (34) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (35) addDirVarGlobales -> .

    LBRACKET        reduce using rule 35 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 58

state 54

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS addProcDirFunc bloque clearFunc
    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc

    RPARENTHESIS    shift and go to state 59


state 55

    (57) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 57 (funcion_option -> argumentos .)


state 56

    (59) argumentos -> ID . addDirVarLocalesFunc COLON tipo addTypeFunc argumentos_loop
    (62) addDirVarLocalesFunc -> .

    COLON           reduce using rule 62 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 60

state 57

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 61


state 58

    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (34) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    LBRACKET        shift and go to state 36


state 59

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . addProcDirFunc bloque clearFunc
    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . variable_func addProcDirFuncVars bloque clearFunc
    (54) addProcDirFunc -> .
    (43) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 54 (addProcDirFunc -> .)
    VAR             shift and go to state 63

    addProcDirFunc                 shift and go to state 62
    variable_func                  shift and go to state 64

state 60

    (59) argumentos -> ID addDirVarLocalesFunc . COLON tipo addTypeFunc argumentos_loop

    COLON           shift and go to state 65


state 61

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 67

state 62

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc . bloque clearFunc
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 68

state 63

    (43) variable_func -> VAR . variable_loop_func
    (44) variable_loop_func -> . variable_id_loop_func SEMICOLON variable_end_loop_func
    (45) variable_loop_func -> . variable_arr_loop_func SEMICOLON variable_end_loop_func
    (46) variable_id_loop_func -> . variable_id_loop_coma_func COLON tipo addTypeFunc
    (49) variable_arr_loop_func -> . variable_arr_coma_func COLON subtipo addTypeFunc
    (50) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc
    (51) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc COMA variable_id_loop_coma_func
    (52) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET
    (53) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func

    ID              shift and go to state 73

    variable_id_loop_func          shift and go to state 69
    variable_id_loop_coma_func     shift and go to state 70
    variable_arr_loop_func         shift and go to state 71
    variable_loop_func             shift and go to state 72
    variable_arr_coma_func         shift and go to state 74

state 64

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func . addProcDirFuncVars bloque clearFunc
    (56) addProcDirFuncVars -> .

    LCURLY          reduce using rule 56 (addProcDirFuncVars -> .)

    addProcDirFuncVars             shift and go to state 75

state 65

    (59) argumentos -> ID addDirVarLocalesFunc COLON . tipo addTypeFunc argumentos_loop
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 76

state 66

    (9) bloque -> LCURLY . bloque_est_loop RCURLY
    (10) bloque_est_loop -> . estatuto bloque_est_loop
    (11) bloque_est_loop -> .
    (19) estatuto -> . asignacion
    (20) estatuto -> . condicion
    (21) estatuto -> . escritura
    (22) estatuto -> . regreso
    (23) estatuto -> . ciclo
    (97) asignacion -> . ID asignacion_option
    (67) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (38) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (24) regreso -> . RETURN exp SEMICOLON
    (64) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    RCURLY          reduce using rule 11 (bloque_est_loop -> .)
    ID              shift and go to state 83
    IF              shift and go to state 84
    PRINT           shift and go to state 79
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78

    regreso                        shift and go to state 85
    ciclo                          shift and go to state 80
    asignacion                     shift and go to state 86
    estatuto                       shift and go to state 81
    condicion                      shift and go to state 82
    bloque_est_loop                shift and go to state 87
    escritura                      shift and go to state 88

state 67

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 89


state 68

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque . clearFunc
    (55) clearFunc -> .

    INTTYPE         reduce using rule 55 (clearFunc -> .)
    FLOATTYPE       reduce using rule 55 (clearFunc -> .)
    CHARTYPE        reduce using rule 55 (clearFunc -> .)
    BOOLTYPE        reduce using rule 55 (clearFunc -> .)
    VOIDTYPE        reduce using rule 55 (clearFunc -> .)
    MAIN            reduce using rule 55 (clearFunc -> .)

    clearFunc                      shift and go to state 90

state 69

    (44) variable_loop_func -> variable_id_loop_func . SEMICOLON variable_end_loop_func

    SEMICOLON       shift and go to state 91


state 70

    (46) variable_id_loop_func -> variable_id_loop_coma_func . COLON tipo addTypeFunc

    COLON           shift and go to state 92


state 71

    (45) variable_loop_func -> variable_arr_loop_func . SEMICOLON variable_end_loop_func

    SEMICOLON       shift and go to state 93


state 72

    (43) variable_func -> VAR variable_loop_func .

    LCURLY          reduce using rule 43 (variable_func -> VAR variable_loop_func .)


state 73

    (50) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc
    (51) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc COMA variable_id_loop_coma_func
    (52) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET
    (53) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
    (62) addDirVarLocalesFunc -> .

    COMA            reduce using rule 62 (addDirVarLocalesFunc -> .)
    LBRACKET        reduce using rule 62 (addDirVarLocalesFunc -> .)
    COLON           reduce using rule 62 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 94

state 74

    (49) variable_arr_loop_func -> variable_arr_coma_func . COLON subtipo addTypeFunc

    COLON           shift and go to state 95


state 75

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars . bloque clearFunc
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 96

state 76

    (59) argumentos -> ID addDirVarLocalesFunc COLON tipo . addTypeFunc argumentos_loop
    (63) addTypeFunc -> .

    COMA            reduce using rule 63 (addTypeFunc -> .)
    RPARENTHESIS    reduce using rule 63 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 97

state 77

    (24) regreso -> RETURN . exp SEMICOLON
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 109
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 78

    (64) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 112


state 79

    (38) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 113


state 80

    (23) estatuto -> ciclo .

    ID              reduce using rule 23 (estatuto -> ciclo .)
    IF              reduce using rule 23 (estatuto -> ciclo .)
    PRINT           reduce using rule 23 (estatuto -> ciclo .)
    RETURN          reduce using rule 23 (estatuto -> ciclo .)
    WHILE           reduce using rule 23 (estatuto -> ciclo .)
    RCURLY          reduce using rule 23 (estatuto -> ciclo .)


state 81

    (10) bloque_est_loop -> estatuto . bloque_est_loop
    (10) bloque_est_loop -> . estatuto bloque_est_loop
    (11) bloque_est_loop -> .
    (19) estatuto -> . asignacion
    (20) estatuto -> . condicion
    (21) estatuto -> . escritura
    (22) estatuto -> . regreso
    (23) estatuto -> . ciclo
    (97) asignacion -> . ID asignacion_option
    (67) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (38) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (24) regreso -> . RETURN exp SEMICOLON
    (64) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    RCURLY          reduce using rule 11 (bloque_est_loop -> .)
    ID              shift and go to state 83
    IF              shift and go to state 84
    PRINT           shift and go to state 79
    RETURN          shift and go to state 77
    WHILE           shift and go to state 78

    regreso                        shift and go to state 85
    ciclo                          shift and go to state 80
    asignacion                     shift and go to state 86
    estatuto                       shift and go to state 81
    condicion                      shift and go to state 82
    bloque_est_loop                shift and go to state 114
    escritura                      shift and go to state 88

state 82

    (20) estatuto -> condicion .

    ID              reduce using rule 20 (estatuto -> condicion .)
    IF              reduce using rule 20 (estatuto -> condicion .)
    PRINT           reduce using rule 20 (estatuto -> condicion .)
    RETURN          reduce using rule 20 (estatuto -> condicion .)
    WHILE           reduce using rule 20 (estatuto -> condicion .)
    RCURLY          reduce using rule 20 (estatuto -> condicion .)


state 83

    (97) asignacion -> ID . asignacion_option
    (98) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (99) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 116
    LBRACKET        shift and go to state 117

    asignacion_option              shift and go to state 115

state 84

    (67) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 118


state 85

    (22) estatuto -> regreso .

    ID              reduce using rule 22 (estatuto -> regreso .)
    IF              reduce using rule 22 (estatuto -> regreso .)
    PRINT           reduce using rule 22 (estatuto -> regreso .)
    RETURN          reduce using rule 22 (estatuto -> regreso .)
    WHILE           reduce using rule 22 (estatuto -> regreso .)
    RCURLY          reduce using rule 22 (estatuto -> regreso .)


state 86

    (19) estatuto -> asignacion .

    ID              reduce using rule 19 (estatuto -> asignacion .)
    IF              reduce using rule 19 (estatuto -> asignacion .)
    PRINT           reduce using rule 19 (estatuto -> asignacion .)
    RETURN          reduce using rule 19 (estatuto -> asignacion .)
    WHILE           reduce using rule 19 (estatuto -> asignacion .)
    RCURLY          reduce using rule 19 (estatuto -> asignacion .)


state 87

    (9) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 119


state 88

    (21) estatuto -> escritura .

    ID              reduce using rule 21 (estatuto -> escritura .)
    IF              reduce using rule 21 (estatuto -> escritura .)
    PRINT           reduce using rule 21 (estatuto -> escritura .)
    RETURN          reduce using rule 21 (estatuto -> escritura .)
    WHILE           reduce using rule 21 (estatuto -> escritura .)
    RCURLY          reduce using rule 21 (estatuto -> escritura .)


state 89

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa_var_loop nodo18 programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 90

    (41) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .

    INTTYPE         reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    FLOATTYPE       reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    CHARTYPE        reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    BOOLTYPE        reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    VOIDTYPE        reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)
    MAIN            reduce using rule 41 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque clearFunc .)


state 91

    (44) variable_loop_func -> variable_id_loop_func SEMICOLON . variable_end_loop_func
    (47) variable_end_loop_func -> . variable_func
    (48) variable_end_loop_func -> .
    (43) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 48 (variable_end_loop_func -> .)
    VAR             shift and go to state 63

    variable_func                  shift and go to state 121
    variable_end_loop_func         shift and go to state 120

state 92

    (46) variable_id_loop_func -> variable_id_loop_coma_func COLON . tipo addTypeFunc
    (12) tipo -> . INTTYPE
    (13) tipo -> . FLOATTYPE
    (14) tipo -> . CHARTYPE
    (15) tipo -> . BOOLTYPE
    (16) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 26
    FLOATTYPE       shift and go to state 25
    CHARTYPE        shift and go to state 27
    BOOLTYPE        shift and go to state 24
    VOIDTYPE        shift and go to state 22

    tipo                           shift and go to state 122

state 93

    (45) variable_loop_func -> variable_arr_loop_func SEMICOLON . variable_end_loop_func
    (47) variable_end_loop_func -> . variable_func
    (48) variable_end_loop_func -> .
    (43) variable_func -> . VAR variable_loop_func

    LCURLY          reduce using rule 48 (variable_end_loop_func -> .)
    VAR             shift and go to state 63

    variable_func                  shift and go to state 121
    variable_end_loop_func         shift and go to state 123

state 94

    (50) variable_id_loop_coma_func -> ID addDirVarLocalesFunc .
    (51) variable_id_loop_coma_func -> ID addDirVarLocalesFunc . COMA variable_id_loop_coma_func
    (52) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET
    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET COMA variable_arr_coma_func

    COLON           reduce using rule 50 (variable_id_loop_coma_func -> ID addDirVarLocalesFunc .)
    COMA            shift and go to state 125
    LBRACKET        shift and go to state 124


state 95

    (49) variable_arr_loop_func -> variable_arr_coma_func COLON . subtipo addTypeFunc
    (17) subtipo -> . INTTYPE
    (18) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 33
    FLOATTYPE       shift and go to state 34

    subtipo                        shift and go to state 126

state 96

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque . clearFunc
    (55) clearFunc -> .

    INTTYPE         reduce using rule 55 (clearFunc -> .)
    FLOATTYPE       reduce using rule 55 (clearFunc -> .)
    CHARTYPE        reduce using rule 55 (clearFunc -> .)
    BOOLTYPE        reduce using rule 55 (clearFunc -> .)
    VOIDTYPE        reduce using rule 55 (clearFunc -> .)
    MAIN            reduce using rule 55 (clearFunc -> .)

    clearFunc                      shift and go to state 127

state 97

    (59) argumentos -> ID addDirVarLocalesFunc COLON tipo addTypeFunc . argumentos_loop
    (60) argumentos_loop -> . COMA argumentos
    (61) argumentos_loop -> .

    COMA            shift and go to state 129
    RPARENTHESIS    reduce using rule 61 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 128

state 98

    (132) varcte -> CTECHAR . nodoCteC
    (145) nodoCteC -> .

    MULTIPLICATION  reduce using rule 145 (nodoCteC -> .)
    DIVISION        reduce using rule 145 (nodoCteC -> .)
    ADDITION        reduce using rule 145 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 145 (nodoCteC -> .)
    SEMICOLON       reduce using rule 145 (nodoCteC -> .)
    LESS            reduce using rule 145 (nodoCteC -> .)
    GREATER         reduce using rule 145 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 145 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 145 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 145 (nodoCteC -> .)
    EQUAL           reduce using rule 145 (nodoCteC -> .)
    AND             reduce using rule 145 (nodoCteC -> .)
    OR              reduce using rule 145 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 145 (nodoCteC -> .)
    ID              reduce using rule 145 (nodoCteC -> .)
    CTEINT          reduce using rule 145 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 145 (nodoCteC -> .)
    CTECHAR         reduce using rule 145 (nodoCteC -> .)
    TRUE            reduce using rule 145 (nodoCteC -> .)
    FALSE           reduce using rule 145 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 145 (nodoCteC -> .)

    nodoCteC                       shift and go to state 130

state 99

    (140) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 140 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 140 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 140 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 140 (CTEBOOL -> TRUE .)
    AND             reduce using rule 140 (CTEBOOL -> TRUE .)
    OR              reduce using rule 140 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 140 (CTEBOOL -> TRUE .)
    ID              reduce using rule 140 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 140 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 140 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 140 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 140 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 140 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 140 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 140 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 140 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 140 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 140 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 140 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 140 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 140 (CTEBOOL -> TRUE .)


state 100

    (123) factor_var -> varcte . nodo1
    (125) nodo1 -> .

    MULTIPLICATION  reduce using rule 125 (nodo1 -> .)
    DIVISION        reduce using rule 125 (nodo1 -> .)
    ADDITION        reduce using rule 125 (nodo1 -> .)
    SUBTRACTION     reduce using rule 125 (nodo1 -> .)
    SEMICOLON       reduce using rule 125 (nodo1 -> .)
    LESS            reduce using rule 125 (nodo1 -> .)
    GREATER         reduce using rule 125 (nodo1 -> .)
    LESSEQUAL       reduce using rule 125 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 125 (nodo1 -> .)
    NOTEQUAL        reduce using rule 125 (nodo1 -> .)
    EQUAL           reduce using rule 125 (nodo1 -> .)
    AND             reduce using rule 125 (nodo1 -> .)
    OR              reduce using rule 125 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 125 (nodo1 -> .)
    ID              reduce using rule 125 (nodo1 -> .)
    CTEINT          reduce using rule 125 (nodo1 -> .)
    CTEFLOAT        reduce using rule 125 (nodo1 -> .)
    CTECHAR         reduce using rule 125 (nodo1 -> .)
    TRUE            reduce using rule 125 (nodo1 -> .)
    FALSE           reduce using rule 125 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 125 (nodo1 -> .)

    nodo1                          shift and go to state 131

state 101

    (130) varcte -> CTEFLOAT . nodoCteF
    (143) nodoCteF -> .

    MULTIPLICATION  reduce using rule 143 (nodoCteF -> .)
    DIVISION        reduce using rule 143 (nodoCteF -> .)
    ADDITION        reduce using rule 143 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 143 (nodoCteF -> .)
    SEMICOLON       reduce using rule 143 (nodoCteF -> .)
    LESS            reduce using rule 143 (nodoCteF -> .)
    GREATER         reduce using rule 143 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 143 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 143 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 143 (nodoCteF -> .)
    EQUAL           reduce using rule 143 (nodoCteF -> .)
    AND             reduce using rule 143 (nodoCteF -> .)
    OR              reduce using rule 143 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 143 (nodoCteF -> .)
    ID              reduce using rule 143 (nodoCteF -> .)
    CTEINT          reduce using rule 143 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 143 (nodoCteF -> .)
    CTECHAR         reduce using rule 143 (nodoCteF -> .)
    TRUE            reduce using rule 143 (nodoCteF -> .)
    FALSE           reduce using rule 143 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 143 (nodoCteF -> .)

    nodoCteF                       shift and go to state 132

state 102

    (113) termino -> factor . nodo4 termino_loop
    (120) nodo4 -> .

    MULTIPLICATION  reduce using rule 120 (nodo4 -> .)
    DIVISION        reduce using rule 120 (nodo4 -> .)
    ADDITION        reduce using rule 120 (nodo4 -> .)
    SUBTRACTION     reduce using rule 120 (nodo4 -> .)
    SEMICOLON       reduce using rule 120 (nodo4 -> .)
    LESS            reduce using rule 120 (nodo4 -> .)
    GREATER         reduce using rule 120 (nodo4 -> .)
    LESSEQUAL       reduce using rule 120 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 120 (nodo4 -> .)
    NOTEQUAL        reduce using rule 120 (nodo4 -> .)
    EQUAL           reduce using rule 120 (nodo4 -> .)
    AND             reduce using rule 120 (nodo4 -> .)
    OR              reduce using rule 120 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 120 (nodo4 -> .)
    ID              reduce using rule 120 (nodo4 -> .)
    CTEINT          reduce using rule 120 (nodo4 -> .)
    CTEFLOAT        reduce using rule 120 (nodo4 -> .)
    CTECHAR         reduce using rule 120 (nodo4 -> .)
    TRUE            reduce using rule 120 (nodo4 -> .)
    FALSE           reduce using rule 120 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 120 (nodo4 -> .)

    nodo4                          shift and go to state 133

state 103

    (122) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 122 (factor -> factor_exp .)
    DIVISION        reduce using rule 122 (factor -> factor_exp .)
    ADDITION        reduce using rule 122 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 122 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 122 (factor -> factor_exp .)
    LESS            reduce using rule 122 (factor -> factor_exp .)
    GREATER         reduce using rule 122 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 122 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 122 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 122 (factor -> factor_exp .)
    EQUAL           reduce using rule 122 (factor -> factor_exp .)
    AND             reduce using rule 122 (factor -> factor_exp .)
    OR              reduce using rule 122 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 122 (factor -> factor_exp .)
    ID              reduce using rule 122 (factor -> factor_exp .)
    CTEINT          reduce using rule 122 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 122 (factor -> factor_exp .)
    CTECHAR         reduce using rule 122 (factor -> factor_exp .)
    TRUE            reduce using rule 122 (factor -> factor_exp .)
    FALSE           reduce using rule 122 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 122 (factor -> factor_exp .)


state 104

    (129) varcte -> CTEINT . nodoCteE
    (142) nodoCteE -> .

    MULTIPLICATION  reduce using rule 142 (nodoCteE -> .)
    DIVISION        reduce using rule 142 (nodoCteE -> .)
    ADDITION        reduce using rule 142 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 142 (nodoCteE -> .)
    SEMICOLON       reduce using rule 142 (nodoCteE -> .)
    LESS            reduce using rule 142 (nodoCteE -> .)
    GREATER         reduce using rule 142 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 142 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 142 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 142 (nodoCteE -> .)
    EQUAL           reduce using rule 142 (nodoCteE -> .)
    AND             reduce using rule 142 (nodoCteE -> .)
    OR              reduce using rule 142 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 142 (nodoCteE -> .)
    ID              reduce using rule 142 (nodoCteE -> .)
    CTEINT          reduce using rule 142 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 142 (nodoCteE -> .)
    CTECHAR         reduce using rule 142 (nodoCteE -> .)
    TRUE            reduce using rule 142 (nodoCteE -> .)
    FALSE           reduce using rule 142 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 142 (nodoCteE -> .)

    nodoCteE                       shift and go to state 134

state 105

    (124) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (126) nodo6 -> .

    LPARENTHESIS    reduce using rule 126 (nodo6 -> .)
    ID              reduce using rule 126 (nodo6 -> .)
    CTEINT          reduce using rule 126 (nodo6 -> .)
    CTEFLOAT        reduce using rule 126 (nodo6 -> .)
    CTECHAR         reduce using rule 126 (nodo6 -> .)
    TRUE            reduce using rule 126 (nodo6 -> .)
    FALSE           reduce using rule 126 (nodo6 -> .)

    nodo6                          shift and go to state 135

state 106

    (128) varcte -> ID . varcte_arr
    (138) varcte_arr -> . LBRACKET RBRACKET
    (139) varcte_arr -> .

    LBRACKET        shift and go to state 136
    MULTIPLICATION  reduce using rule 139 (varcte_arr -> .)
    DIVISION        reduce using rule 139 (varcte_arr -> .)
    ADDITION        reduce using rule 139 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 139 (varcte_arr -> .)
    SEMICOLON       reduce using rule 139 (varcte_arr -> .)
    LESS            reduce using rule 139 (varcte_arr -> .)
    GREATER         reduce using rule 139 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 139 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 139 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 139 (varcte_arr -> .)
    EQUAL           reduce using rule 139 (varcte_arr -> .)
    AND             reduce using rule 139 (varcte_arr -> .)
    OR              reduce using rule 139 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 139 (varcte_arr -> .)
    ID              reduce using rule 139 (varcte_arr -> .)
    CTEINT          reduce using rule 139 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 139 (varcte_arr -> .)
    CTECHAR         reduce using rule 139 (varcte_arr -> .)
    TRUE            reduce using rule 139 (varcte_arr -> .)
    FALSE           reduce using rule 139 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 139 (varcte_arr -> .)

    varcte_arr                     shift and go to state 137

state 107

    (141) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 141 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 141 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 141 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 141 (CTEBOOL -> FALSE .)
    AND             reduce using rule 141 (CTEBOOL -> FALSE .)
    OR              reduce using rule 141 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 141 (CTEBOOL -> FALSE .)
    ID              reduce using rule 141 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 141 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 141 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 141 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 141 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 141 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 141 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 141 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 141 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 141 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 141 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 141 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 141 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 141 (CTEBOOL -> FALSE .)


state 108

    (131) varcte -> CTEBOOL . nodoCteB
    (144) nodoCteB -> .

    MULTIPLICATION  reduce using rule 144 (nodoCteB -> .)
    DIVISION        reduce using rule 144 (nodoCteB -> .)
    ADDITION        reduce using rule 144 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 144 (nodoCteB -> .)
    SEMICOLON       reduce using rule 144 (nodoCteB -> .)
    LESS            reduce using rule 144 (nodoCteB -> .)
    GREATER         reduce using rule 144 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 144 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 144 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 144 (nodoCteB -> .)
    EQUAL           reduce using rule 144 (nodoCteB -> .)
    AND             reduce using rule 144 (nodoCteB -> .)
    OR              reduce using rule 144 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 144 (nodoCteB -> .)
    ID              reduce using rule 144 (nodoCteB -> .)
    CTEINT          reduce using rule 144 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 144 (nodoCteB -> .)
    CTECHAR         reduce using rule 144 (nodoCteB -> .)
    TRUE            reduce using rule 144 (nodoCteB -> .)
    FALSE           reduce using rule 144 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 144 (nodoCteB -> .)

    nodoCteB                       shift and go to state 138

state 109

    (24) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 139


state 110

    (121) factor -> factor_var .

    MULTIPLICATION  reduce using rule 121 (factor -> factor_var .)
    DIVISION        reduce using rule 121 (factor -> factor_var .)
    ADDITION        reduce using rule 121 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 121 (factor -> factor_var .)
    SEMICOLON       reduce using rule 121 (factor -> factor_var .)
    LESS            reduce using rule 121 (factor -> factor_var .)
    GREATER         reduce using rule 121 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 121 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 121 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 121 (factor -> factor_var .)
    EQUAL           reduce using rule 121 (factor -> factor_var .)
    AND             reduce using rule 121 (factor -> factor_var .)
    OR              reduce using rule 121 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 121 (factor -> factor_var .)
    ID              reduce using rule 121 (factor -> factor_var .)
    CTEINT          reduce using rule 121 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 121 (factor -> factor_var .)
    CTECHAR         reduce using rule 121 (factor -> factor_var .)
    TRUE            reduce using rule 121 (factor -> factor_var .)
    FALSE           reduce using rule 121 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 121 (factor -> factor_var .)


state 111

    (105) exp -> termino . nodo5 exp_loop
    (112) nodo5 -> .

    ADDITION        reduce using rule 112 (nodo5 -> .)
    SUBTRACTION     reduce using rule 112 (nodo5 -> .)
    SEMICOLON       reduce using rule 112 (nodo5 -> .)
    LESS            reduce using rule 112 (nodo5 -> .)
    GREATER         reduce using rule 112 (nodo5 -> .)
    LESSEQUAL       reduce using rule 112 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 112 (nodo5 -> .)
    NOTEQUAL        reduce using rule 112 (nodo5 -> .)
    EQUAL           reduce using rule 112 (nodo5 -> .)
    AND             reduce using rule 112 (nodo5 -> .)
    OR              reduce using rule 112 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 112 (nodo5 -> .)
    ID              reduce using rule 112 (nodo5 -> .)
    CTEINT          reduce using rule 112 (nodo5 -> .)
    CTEFLOAT        reduce using rule 112 (nodo5 -> .)
    CTECHAR         reduce using rule 112 (nodo5 -> .)
    TRUE            reduce using rule 112 (nodo5 -> .)
    FALSE           reduce using rule 112 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 112 (nodo5 -> .)

    nodo5                          shift and go to state 140

state 112

    (64) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (65) nodo16 -> .

    LPARENTHESIS    reduce using rule 65 (nodo16 -> .)
    ID              reduce using rule 65 (nodo16 -> .)
    CTEINT          reduce using rule 65 (nodo16 -> .)
    CTEFLOAT        reduce using rule 65 (nodo16 -> .)
    CTECHAR         reduce using rule 65 (nodo16 -> .)
    TRUE            reduce using rule 65 (nodo16 -> .)
    FALSE           reduce using rule 65 (nodo16 -> .)

    nodo16                         shift and go to state 141

state 113

    (38) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (39) escritura_type -> . expresion
    (40) escritura_type -> . QUOTE CTECHAR QUOTE
    (73) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 142
    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    escritura_type                 shift and go to state 143
    nuevaexp                       shift and go to state 144
    expresion                      shift and go to state 145
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 114

    (10) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 10 (bloque_est_loop -> estatuto bloque_est_loop .)


state 115

    (97) asignacion -> ID asignacion_option .

    ID              reduce using rule 97 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 97 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 97 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 97 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 97 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 97 (asignacion -> ID asignacion_option .)


state 116

    (98) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (73) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 144
    expresion                      shift and go to state 147
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 117

    (99) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 148


state 118

    (67) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (73) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 144
    expresion                      shift and go to state 149
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 119

    (9) bloque -> LCURLY bloque_est_loop RCURLY .

    INTTYPE         reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 9 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 120

    (44) variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func .

    LCURLY          reduce using rule 44 (variable_loop_func -> variable_id_loop_func SEMICOLON variable_end_loop_func .)


state 121

    (47) variable_end_loop_func -> variable_func .

    LCURLY          reduce using rule 47 (variable_end_loop_func -> variable_func .)


state 122

    (46) variable_id_loop_func -> variable_id_loop_coma_func COLON tipo . addTypeFunc
    (63) addTypeFunc -> .

    SEMICOLON       reduce using rule 63 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 150

state 123

    (45) variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func .

    LCURLY          reduce using rule 45 (variable_loop_func -> variable_arr_loop_func SEMICOLON variable_end_loop_func .)


state 124

    (52) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET . RBRACKET
    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET . RBRACKET COMA variable_arr_coma_func

    RBRACKET        shift and go to state 151


state 125

    (51) variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA . variable_id_loop_coma_func
    (50) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc
    (51) variable_id_loop_coma_func -> . ID addDirVarLocalesFunc COMA variable_id_loop_coma_func

    ID              shift and go to state 152

    variable_id_loop_coma_func     shift and go to state 153

state 126

    (49) variable_arr_loop_func -> variable_arr_coma_func COLON subtipo . addTypeFunc
    (63) addTypeFunc -> .

    SEMICOLON       reduce using rule 63 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 154

state 127

    (42) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .

    INTTYPE         reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    FLOATTYPE       reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    CHARTYPE        reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    BOOLTYPE        reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    VOIDTYPE        reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)
    MAIN            reduce using rule 42 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS variable_func addProcDirFuncVars bloque clearFunc .)


state 128

    (59) argumentos -> ID addDirVarLocalesFunc COLON tipo addTypeFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 59 (argumentos -> ID addDirVarLocalesFunc COLON tipo addTypeFunc argumentos_loop .)


state 129

    (60) argumentos_loop -> COMA . argumentos
    (59) argumentos -> . ID addDirVarLocalesFunc COLON tipo addTypeFunc argumentos_loop

    ID              shift and go to state 56

    argumentos                     shift and go to state 155

state 130

    (132) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 132 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 132 (varcte -> CTECHAR nodoCteC .)


state 131

    (123) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 123 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 123 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 123 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 123 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 123 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 123 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 123 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 123 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 123 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 123 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 123 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 123 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 123 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 123 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 123 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 123 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 123 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 123 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 123 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 123 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 123 (factor_var -> varcte nodo1 .)


state 132

    (130) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 130 (varcte -> CTEFLOAT nodoCteF .)


state 133

    (113) termino -> factor nodo4 . termino_loop
    (114) termino_loop -> . termino_type_loop
    (115) termino_loop -> .
    (116) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (117) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 115 (termino_loop -> .)
    SUBTRACTION     reduce using rule 115 (termino_loop -> .)
    SEMICOLON       reduce using rule 115 (termino_loop -> .)
    LESS            reduce using rule 115 (termino_loop -> .)
    GREATER         reduce using rule 115 (termino_loop -> .)
    LESSEQUAL       reduce using rule 115 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 115 (termino_loop -> .)
    NOTEQUAL        reduce using rule 115 (termino_loop -> .)
    EQUAL           reduce using rule 115 (termino_loop -> .)
    AND             reduce using rule 115 (termino_loop -> .)
    OR              reduce using rule 115 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 115 (termino_loop -> .)
    ID              reduce using rule 115 (termino_loop -> .)
    CTEINT          reduce using rule 115 (termino_loop -> .)
    CTEFLOAT        reduce using rule 115 (termino_loop -> .)
    CTECHAR         reduce using rule 115 (termino_loop -> .)
    TRUE            reduce using rule 115 (termino_loop -> .)
    FALSE           reduce using rule 115 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 115 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 158
    DIVISION        shift and go to state 156

    termino_type_loop              shift and go to state 157
    termino_loop                   shift and go to state 159

state 134

    (129) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 129 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 129 (varcte -> CTEINT nodoCteE .)


state 135

    (124) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (73) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 144
    expresion                      shift and go to state 160
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 136

    (138) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 161


state 137

    (128) varcte -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 128 (varcte -> ID varcte_arr .)
    DIVISION        reduce using rule 128 (varcte -> ID varcte_arr .)
    ADDITION        reduce using rule 128 (varcte -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 128 (varcte -> ID varcte_arr .)
    SEMICOLON       reduce using rule 128 (varcte -> ID varcte_arr .)
    LESS            reduce using rule 128 (varcte -> ID varcte_arr .)
    GREATER         reduce using rule 128 (varcte -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 128 (varcte -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 128 (varcte -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 128 (varcte -> ID varcte_arr .)
    EQUAL           reduce using rule 128 (varcte -> ID varcte_arr .)
    AND             reduce using rule 128 (varcte -> ID varcte_arr .)
    OR              reduce using rule 128 (varcte -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 128 (varcte -> ID varcte_arr .)
    ID              reduce using rule 128 (varcte -> ID varcte_arr .)
    CTEINT          reduce using rule 128 (varcte -> ID varcte_arr .)
    CTEFLOAT        reduce using rule 128 (varcte -> ID varcte_arr .)
    CTECHAR         reduce using rule 128 (varcte -> ID varcte_arr .)
    TRUE            reduce using rule 128 (varcte -> ID varcte_arr .)
    FALSE           reduce using rule 128 (varcte -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 128 (varcte -> ID varcte_arr .)


state 138

    (131) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 131 (varcte -> CTEBOOL nodoCteB .)


state 139

    (24) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 24 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 24 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 24 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 24 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 24 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 24 (regreso -> RETURN exp SEMICOLON .)


state 140

    (105) exp -> termino nodo5 . exp_loop
    (106) exp_loop -> . exp_type_loop
    (107) exp_loop -> .
    (108) exp_type_loop -> . ADDITION nodo3_suma exp
    (109) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 107 (exp_loop -> .)
    LESS            reduce using rule 107 (exp_loop -> .)
    GREATER         reduce using rule 107 (exp_loop -> .)
    LESSEQUAL       reduce using rule 107 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 107 (exp_loop -> .)
    NOTEQUAL        reduce using rule 107 (exp_loop -> .)
    EQUAL           reduce using rule 107 (exp_loop -> .)
    AND             reduce using rule 107 (exp_loop -> .)
    OR              reduce using rule 107 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 107 (exp_loop -> .)
    ID              reduce using rule 107 (exp_loop -> .)
    CTEINT          reduce using rule 107 (exp_loop -> .)
    CTEFLOAT        reduce using rule 107 (exp_loop -> .)
    CTECHAR         reduce using rule 107 (exp_loop -> .)
    TRUE            reduce using rule 107 (exp_loop -> .)
    FALSE           reduce using rule 107 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 107 (exp_loop -> .)
    ADDITION        shift and go to state 162
    SUBTRACTION     shift and go to state 165

    exp_loop                       shift and go to state 163
    exp_type_loop                  shift and go to state 164

state 141

    (64) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (73) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 144
    expresion                      shift and go to state 166
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 142

    (40) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 167


state 143

    (38) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 168


state 144

    (73) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (74) expresion_option -> . AND nodo12_and nuevaexp
    (75) expresion_option -> . OR nodo12_or nuevaexp
    (76) expresion_option -> .

    AND             shift and go to state 169
    OR              shift and go to state 171
    LPARENTHESIS    reduce using rule 76 (expresion_option -> .)
    ID              reduce using rule 76 (expresion_option -> .)
    CTEINT          reduce using rule 76 (expresion_option -> .)
    CTEFLOAT        reduce using rule 76 (expresion_option -> .)
    CTECHAR         reduce using rule 76 (expresion_option -> .)
    TRUE            reduce using rule 76 (expresion_option -> .)
    FALSE           reduce using rule 76 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 76 (expresion_option -> .)
    SEMICOLON       reduce using rule 76 (expresion_option -> .)

    expresion_option               shift and go to state 170

state 145

    (39) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 39 (escritura_type -> expresion .)


state 146

    (82) nuevaexp -> exp . nuevaexp_type nodo10
    (83) nuevaexp_type -> . LESS nodo9_menor exp
    (84) nuevaexp_type -> . GREATER nodo9_mayor exp
    (85) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (86) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (87) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (88) nuevaexp_type -> . EQUAL nodo9_igual exp
    (89) nuevaexp_type -> .

    LESS            shift and go to state 174
    GREATER         shift and go to state 173
    LESSEQUAL       shift and go to state 178
    GREATEREQUAL    shift and go to state 172
    NOTEQUAL        shift and go to state 176
    EQUAL           shift and go to state 175
    AND             reduce using rule 89 (nuevaexp_type -> .)
    OR              reduce using rule 89 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 89 (nuevaexp_type -> .)
    ID              reduce using rule 89 (nuevaexp_type -> .)
    CTEINT          reduce using rule 89 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 89 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 89 (nuevaexp_type -> .)
    TRUE            reduce using rule 89 (nuevaexp_type -> .)
    FALSE           reduce using rule 89 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 89 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 89 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 177

state 147

    (98) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (104) nodo8 -> .

    SEMICOLON       reduce using rule 104 (nodo8 -> .)

    nodo8                          shift and go to state 179

state 148

    (99) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 180


state 149

    (67) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 181


state 150

    (46) variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc .

    SEMICOLON       reduce using rule 46 (variable_id_loop_func -> variable_id_loop_coma_func COLON tipo addTypeFunc .)


state 151

    (52) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET .
    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET . COMA variable_arr_coma_func

    COLON           reduce using rule 52 (variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET .)
    COMA            shift and go to state 182


state 152

    (50) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc
    (51) variable_id_loop_coma_func -> ID . addDirVarLocalesFunc COMA variable_id_loop_coma_func
    (62) addDirVarLocalesFunc -> .

    COMA            reduce using rule 62 (addDirVarLocalesFunc -> .)
    COLON           reduce using rule 62 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 183

state 153

    (51) variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA variable_id_loop_coma_func .

    COLON           reduce using rule 51 (variable_id_loop_coma_func -> ID addDirVarLocalesFunc COMA variable_id_loop_coma_func .)


state 154

    (49) variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc .

    SEMICOLON       reduce using rule 49 (variable_arr_loop_func -> variable_arr_coma_func COLON subtipo addTypeFunc .)


state 155

    (60) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 60 (argumentos_loop -> COMA argumentos .)


state 156

    (117) termino_type_loop -> DIVISION . nodo2_div termino
    (119) nodo2_div -> .

    LPARENTHESIS    reduce using rule 119 (nodo2_div -> .)
    ID              reduce using rule 119 (nodo2_div -> .)
    CTEINT          reduce using rule 119 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 119 (nodo2_div -> .)
    CTECHAR         reduce using rule 119 (nodo2_div -> .)
    TRUE            reduce using rule 119 (nodo2_div -> .)
    FALSE           reduce using rule 119 (nodo2_div -> .)

    nodo2_div                      shift and go to state 184

state 157

    (114) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 114 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 114 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 114 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 114 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 114 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 114 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 114 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 114 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 114 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 114 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 114 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 114 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 114 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 114 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 114 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 114 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 114 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 114 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 114 (termino_loop -> termino_type_loop .)


state 158

    (116) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (118) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 118 (nodo2_mult -> .)
    ID              reduce using rule 118 (nodo2_mult -> .)
    CTEINT          reduce using rule 118 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 118 (nodo2_mult -> .)
    CTECHAR         reduce using rule 118 (nodo2_mult -> .)
    TRUE            reduce using rule 118 (nodo2_mult -> .)
    FALSE           reduce using rule 118 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 185

state 159

    (113) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 113 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 113 (termino -> factor nodo4 termino_loop .)


state 160

    (124) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 186


state 161

    (138) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 138 (varcte_arr -> LBRACKET RBRACKET .)


state 162

    (108) exp_type_loop -> ADDITION . nodo3_suma exp
    (110) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 110 (nodo3_suma -> .)
    ID              reduce using rule 110 (nodo3_suma -> .)
    CTEINT          reduce using rule 110 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 110 (nodo3_suma -> .)
    CTECHAR         reduce using rule 110 (nodo3_suma -> .)
    TRUE            reduce using rule 110 (nodo3_suma -> .)
    FALSE           reduce using rule 110 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 187

state 163

    (105) exp -> termino nodo5 exp_loop .

    LESS            reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 105 (exp -> termino nodo5 exp_loop .)
    SEMICOLON       reduce using rule 105 (exp -> termino nodo5 exp_loop .)


state 164

    (106) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 106 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 106 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 106 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 106 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 106 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 106 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 106 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 106 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 106 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 106 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 106 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 106 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 106 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 106 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 106 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 106 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 106 (exp_loop -> exp_type_loop .)


state 165

    (109) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (111) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 111 (nodo3_resta -> .)
    ID              reduce using rule 111 (nodo3_resta -> .)
    CTEINT          reduce using rule 111 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 111 (nodo3_resta -> .)
    CTECHAR         reduce using rule 111 (nodo3_resta -> .)
    TRUE            reduce using rule 111 (nodo3_resta -> .)
    FALSE           reduce using rule 111 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 188

state 166

    (64) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 189


state 167

    (40) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 190


state 168

    (38) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 191


state 169

    (74) expresion_option -> AND . nodo12_and nuevaexp
    (79) nodo12_and -> .

    LPARENTHESIS    reduce using rule 79 (nodo12_and -> .)
    ID              reduce using rule 79 (nodo12_and -> .)
    CTEINT          reduce using rule 79 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 79 (nodo12_and -> .)
    CTECHAR         reduce using rule 79 (nodo12_and -> .)
    TRUE            reduce using rule 79 (nodo12_and -> .)
    FALSE           reduce using rule 79 (nodo12_and -> .)

    nodo12_and                     shift and go to state 192

state 170

    (73) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (81) nodo11 -> .

    LPARENTHESIS    reduce using rule 81 (nodo11 -> .)
    ID              reduce using rule 81 (nodo11 -> .)
    CTEINT          reduce using rule 81 (nodo11 -> .)
    CTEFLOAT        reduce using rule 81 (nodo11 -> .)
    CTECHAR         reduce using rule 81 (nodo11 -> .)
    TRUE            reduce using rule 81 (nodo11 -> .)
    FALSE           reduce using rule 81 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 81 (nodo11 -> .)
    SEMICOLON       reduce using rule 81 (nodo11 -> .)

    nodo11                         shift and go to state 193

state 171

    (75) expresion_option -> OR . nodo12_or nuevaexp
    (80) nodo12_or -> .

    LPARENTHESIS    reduce using rule 80 (nodo12_or -> .)
    ID              reduce using rule 80 (nodo12_or -> .)
    CTEINT          reduce using rule 80 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 80 (nodo12_or -> .)
    CTECHAR         reduce using rule 80 (nodo12_or -> .)
    TRUE            reduce using rule 80 (nodo12_or -> .)
    FALSE           reduce using rule 80 (nodo12_or -> .)

    nodo12_or                      shift and go to state 194

state 172

    (86) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (94) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 94 (nodo9_mayorig -> .)
    ID              reduce using rule 94 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 94 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 94 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 94 (nodo9_mayorig -> .)
    TRUE            reduce using rule 94 (nodo9_mayorig -> .)
    FALSE           reduce using rule 94 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 195

state 173

    (84) nuevaexp_type -> GREATER . nodo9_mayor exp
    (92) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 92 (nodo9_mayor -> .)
    ID              reduce using rule 92 (nodo9_mayor -> .)
    CTEINT          reduce using rule 92 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 92 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 92 (nodo9_mayor -> .)
    TRUE            reduce using rule 92 (nodo9_mayor -> .)
    FALSE           reduce using rule 92 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 196

state 174

    (83) nuevaexp_type -> LESS . nodo9_menor exp
    (91) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 91 (nodo9_menor -> .)
    ID              reduce using rule 91 (nodo9_menor -> .)
    CTEINT          reduce using rule 91 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 91 (nodo9_menor -> .)
    CTECHAR         reduce using rule 91 (nodo9_menor -> .)
    TRUE            reduce using rule 91 (nodo9_menor -> .)
    FALSE           reduce using rule 91 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 197

state 175

    (88) nuevaexp_type -> EQUAL . nodo9_igual exp
    (96) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 96 (nodo9_igual -> .)
    ID              reduce using rule 96 (nodo9_igual -> .)
    CTEINT          reduce using rule 96 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 96 (nodo9_igual -> .)
    CTECHAR         reduce using rule 96 (nodo9_igual -> .)
    TRUE            reduce using rule 96 (nodo9_igual -> .)
    FALSE           reduce using rule 96 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 198

state 176

    (87) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (95) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 95 (nodo9_dif -> .)
    ID              reduce using rule 95 (nodo9_dif -> .)
    CTEINT          reduce using rule 95 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 95 (nodo9_dif -> .)
    CTECHAR         reduce using rule 95 (nodo9_dif -> .)
    TRUE            reduce using rule 95 (nodo9_dif -> .)
    FALSE           reduce using rule 95 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 199

state 177

    (82) nuevaexp -> exp nuevaexp_type . nodo10
    (90) nodo10 -> .

    AND             reduce using rule 90 (nodo10 -> .)
    OR              reduce using rule 90 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 90 (nodo10 -> .)
    ID              reduce using rule 90 (nodo10 -> .)
    CTEINT          reduce using rule 90 (nodo10 -> .)
    CTEFLOAT        reduce using rule 90 (nodo10 -> .)
    CTECHAR         reduce using rule 90 (nodo10 -> .)
    TRUE            reduce using rule 90 (nodo10 -> .)
    FALSE           reduce using rule 90 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 90 (nodo10 -> .)
    SEMICOLON       reduce using rule 90 (nodo10 -> .)

    nodo10                         shift and go to state 200

state 178

    (85) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (93) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 93 (nodo9_menorig -> .)
    ID              reduce using rule 93 (nodo9_menorig -> .)
    CTEINT          reduce using rule 93 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 93 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 93 (nodo9_menorig -> .)
    TRUE            reduce using rule 93 (nodo9_menorig -> .)
    FALSE           reduce using rule 93 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 201

state 179

    (98) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 202


state 180

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 203


state 181

    (67) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (72) nodo13 -> .

    LCURLY          reduce using rule 72 (nodo13 -> .)

    nodo13                         shift and go to state 204

state 182

    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA . variable_arr_coma_func
    (52) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET
    (53) variable_arr_coma_func -> . ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func

    ID              shift and go to state 205

    variable_arr_coma_func         shift and go to state 206

state 183

    (50) variable_id_loop_coma_func -> ID addDirVarLocalesFunc .
    (51) variable_id_loop_coma_func -> ID addDirVarLocalesFunc . COMA variable_id_loop_coma_func

    COLON           reduce using rule 50 (variable_id_loop_coma_func -> ID addDirVarLocalesFunc .)
    COMA            shift and go to state 125


state 184

    (117) termino_type_loop -> DIVISION nodo2_div . termino
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 207
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 185

    (116) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 208
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 186

    (124) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (127) nodo7 -> .

    MULTIPLICATION  reduce using rule 127 (nodo7 -> .)
    DIVISION        reduce using rule 127 (nodo7 -> .)
    ADDITION        reduce using rule 127 (nodo7 -> .)
    SUBTRACTION     reduce using rule 127 (nodo7 -> .)
    SEMICOLON       reduce using rule 127 (nodo7 -> .)
    LESS            reduce using rule 127 (nodo7 -> .)
    GREATER         reduce using rule 127 (nodo7 -> .)
    LESSEQUAL       reduce using rule 127 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 127 (nodo7 -> .)
    NOTEQUAL        reduce using rule 127 (nodo7 -> .)
    EQUAL           reduce using rule 127 (nodo7 -> .)
    AND             reduce using rule 127 (nodo7 -> .)
    OR              reduce using rule 127 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 127 (nodo7 -> .)
    ID              reduce using rule 127 (nodo7 -> .)
    CTEINT          reduce using rule 127 (nodo7 -> .)
    CTEFLOAT        reduce using rule 127 (nodo7 -> .)
    CTECHAR         reduce using rule 127 (nodo7 -> .)
    TRUE            reduce using rule 127 (nodo7 -> .)
    FALSE           reduce using rule 127 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 127 (nodo7 -> .)

    nodo7                          shift and go to state 209

state 187

    (108) exp_type_loop -> ADDITION nodo3_suma . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 210
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 188

    (109) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 211
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 189

    (64) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (72) nodo13 -> .

    LCURLY          reduce using rule 72 (nodo13 -> .)

    nodo13                         shift and go to state 212

state 190

    (40) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 40 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 191

    (38) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 38 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 38 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 38 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 38 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 38 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 38 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 192

    (74) expresion_option -> AND nodo12_and . nuevaexp
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 213
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 193

    (73) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (77) expresion_loop -> . expresion
    (78) expresion_loop -> .
    (73) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 78 (expresion_loop -> .)
    SEMICOLON       reduce using rule 78 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    expresion_loop                 shift and go to state 214
    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 144
    expresion                      shift and go to state 215
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 194

    (75) expresion_option -> OR nodo12_or . nuevaexp
    (82) nuevaexp -> . exp nuevaexp_type nodo10
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    termino                        shift and go to state 111
    varcte                         shift and go to state 100
    factor                         shift and go to state 102
    factor_exp                     shift and go to state 103
    nuevaexp                       shift and go to state 216
    CTEBOOL                        shift and go to state 108
    exp                            shift and go to state 146
    factor_var                     shift and go to state 110

state 195

    (86) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 217
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 196

    (84) nuevaexp_type -> GREATER nodo9_mayor . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 218
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 197

    (83) nuevaexp_type -> LESS nodo9_menor . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 219
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 198

    (88) nuevaexp_type -> EQUAL nodo9_igual . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    factor_exp                     shift and go to state 103
    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    termino                        shift and go to state 111
    exp                            shift and go to state 220
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 199

    (87) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 221
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 200

    (82) nuevaexp -> exp nuevaexp_type nodo10 .

    AND             reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    LPARENTHESIS    reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 82 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 201

    (85) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (105) exp -> . termino nodo5 exp_loop
    (113) termino -> . factor nodo4 termino_loop
    (121) factor -> . factor_var
    (122) factor -> . factor_exp
    (123) factor_var -> . varcte nodo1
    (124) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (128) varcte -> . ID varcte_arr
    (129) varcte -> . CTEINT nodoCteE
    (130) varcte -> . CTEFLOAT nodoCteF
    (131) varcte -> . CTEBOOL nodoCteB
    (132) varcte -> . CTECHAR nodoCteC
    (140) CTEBOOL -> . TRUE
    (141) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 105
    ID              shift and go to state 106
    CTEINT          shift and go to state 104
    CTEFLOAT        shift and go to state 101
    CTECHAR         shift and go to state 98
    TRUE            shift and go to state 99
    FALSE           shift and go to state 107

    varcte                         shift and go to state 100
    CTEBOOL                        shift and go to state 108
    factor_exp                     shift and go to state 103
    termino                        shift and go to state 111
    exp                            shift and go to state 222
    factor                         shift and go to state 102
    factor_var                     shift and go to state 110

state 202

    (98) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 98 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 98 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 98 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 98 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 98 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 98 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 203

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (104) nodo8 -> .

    LBRACKET        reduce using rule 104 (nodo8 -> .)

    nodo8                          shift and go to state 223

state 204

    (67) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 224

state 205

    (52) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET
    (53) variable_arr_coma_func -> ID . addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func
    (62) addDirVarLocalesFunc -> .

    LBRACKET        reduce using rule 62 (addDirVarLocalesFunc -> .)

    addDirVarLocalesFunc           shift and go to state 225

state 206

    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func .

    COLON           reduce using rule 53 (variable_arr_coma_func -> ID addDirVarLocalesFunc LBRACKET RBRACKET COMA variable_arr_coma_func .)


state 207

    (117) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 117 (termino_type_loop -> DIVISION nodo2_div termino .)


state 208

    (116) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 116 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 209

    (124) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 124 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 210

    (108) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 108 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 211

    (109) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 109 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 212

    (64) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 226

state 213

    (74) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 74 (expresion_option -> AND nodo12_and nuevaexp .)


state 214

    (73) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    RPARENTHESIS    reduce using rule 73 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    SEMICOLON       reduce using rule 73 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 215

    (77) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 77 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 77 (expresion_loop -> expresion .)


state 216

    (75) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 75 (expresion_option -> OR nodo12_or nuevaexp .)


state 217

    (86) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 86 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 218

    (84) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 84 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 219

    (83) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 83 (nuevaexp_type -> LESS nodo9_menor exp .)


state 220

    (88) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 88 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 221

    (87) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 87 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 222

    (85) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 85 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 223

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 227


state 224

    (67) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (68) condicion_option -> . ELSE nodo14 bloque
    (69) condicion_option -> .

    ELSE            shift and go to state 228
    ID              reduce using rule 69 (condicion_option -> .)
    IF              reduce using rule 69 (condicion_option -> .)
    PRINT           reduce using rule 69 (condicion_option -> .)
    RETURN          reduce using rule 69 (condicion_option -> .)
    WHILE           reduce using rule 69 (condicion_option -> .)
    RCURLY          reduce using rule 69 (condicion_option -> .)

    condicion_option               shift and go to state 229

state 225

    (52) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET
    (53) variable_arr_coma_func -> ID addDirVarLocalesFunc . LBRACKET RBRACKET COMA variable_arr_coma_func

    LBRACKET        shift and go to state 124


state 226

    (64) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (66) nodo17 -> .

    ID              reduce using rule 66 (nodo17 -> .)
    IF              reduce using rule 66 (nodo17 -> .)
    PRINT           reduce using rule 66 (nodo17 -> .)
    RETURN          reduce using rule 66 (nodo17 -> .)
    WHILE           reduce using rule 66 (nodo17 -> .)
    RCURLY          reduce using rule 66 (nodo17 -> .)

    nodo17                         shift and go to state 230

state 227

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (100) asignacion_type -> . CTEINT
    (101) asignacion_type -> . CTEFLOAT
    (102) asignacion_type -> . CTEINT COMA asignacion_type
    (103) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 231
    CTEFLOAT        shift and go to state 232

    asignacion_type                shift and go to state 233

state 228

    (68) condicion_option -> ELSE . nodo14 bloque
    (71) nodo14 -> .

    LCURLY          reduce using rule 71 (nodo14 -> .)

    nodo14                         shift and go to state 234

state 229

    (67) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (70) nodo15 -> .

    ID              reduce using rule 70 (nodo15 -> .)
    IF              reduce using rule 70 (nodo15 -> .)
    PRINT           reduce using rule 70 (nodo15 -> .)
    RETURN          reduce using rule 70 (nodo15 -> .)
    WHILE           reduce using rule 70 (nodo15 -> .)
    RCURLY          reduce using rule 70 (nodo15 -> .)

    nodo15                         shift and go to state 235

state 230

    (64) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 64 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 64 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 64 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RETURN          reduce using rule 64 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 64 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 64 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 231

    (100) asignacion_type -> CTEINT .
    (102) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 100 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 236


state 232

    (101) asignacion_type -> CTEFLOAT .
    (103) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 101 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 237


state 233

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 238


state 234

    (68) condicion_option -> ELSE nodo14 . bloque
    (9) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 66

    bloque                         shift and go to state 239

state 235

    (67) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 67 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 67 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 67 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RETURN          reduce using rule 67 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 67 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 67 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 236

    (102) asignacion_type -> CTEINT COMA . asignacion_type
    (100) asignacion_type -> . CTEINT
    (101) asignacion_type -> . CTEFLOAT
    (102) asignacion_type -> . CTEINT COMA asignacion_type
    (103) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 231
    CTEFLOAT        shift and go to state 232

    asignacion_type                shift and go to state 240

state 237

    (103) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (100) asignacion_type -> . CTEINT
    (101) asignacion_type -> . CTEFLOAT
    (102) asignacion_type -> . CTEINT COMA asignacion_type
    (103) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 231
    CTEFLOAT        shift and go to state 232

    asignacion_type                shift and go to state 241

state 238

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 242


state 239

    (68) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 68 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 68 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 68 (condicion_option -> ELSE nodo14 bloque .)
    RETURN          reduce using rule 68 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 68 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 68 (condicion_option -> ELSE nodo14 bloque .)


state 240

    (102) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 102 (asignacion_type -> CTEINT COMA asignacion_type .)


state 241

    (103) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 103 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 242

    (99) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 99 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VAR in state 16 resolved as shift
WARNING: shift/reduce conflict for VAR in state 18 resolved as shift
