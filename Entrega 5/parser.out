Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     addProcDir -> <empty>
Rule 3     addMainProc -> <empty>
Rule 4     programa_var_loop -> variable programa_var_loop
Rule 5     programa_var_loop -> <empty>
Rule 6     programa_func_loop -> funcion programa_func_loop
Rule 7     programa_func_loop -> <empty>
Rule 8     bloque -> LCURLY bloque_est_loop RCURLY
Rule 9     bloque_est_loop -> estatuto bloque_est_loop
Rule 10    bloque_est_loop -> <empty>
Rule 11    tipo -> INTTYPE
Rule 12    tipo -> FLOATTYPE
Rule 13    tipo -> CHARTYPE
Rule 14    tipo -> BOOLTYPE
Rule 15    tipo -> VOIDTYPE
Rule 16    subtipo -> INTTYPE
Rule 17    subtipo -> FLOATTYPE
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> escritura
Rule 21    estatuto -> regreso
Rule 22    estatuto -> ciclo
Rule 23    regreso -> RETURN exp SEMICOLON
Rule 24    variable -> VAR variable_loop
Rule 25    variable_loop -> variable_id_loop SEMICOLON variable_end_loop
Rule 26    variable_loop -> variable_arr_loop SEMICOLON variable_end_loop
Rule 27    addType -> <empty>
Rule 28    variable_id_loop -> variable_id_loop_coma COLON tipo addType
Rule 29    variable_id_loop_coma -> ID addDirVarGlobales
Rule 30    variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma
Rule 31    variable_arr_loop -> variable_arr_coma COLON subtipo addType
Rule 32    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET
Rule 33    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
Rule 34    addDirVarGlobales -> <empty>
Rule 35    variable_end_loop -> variable_loop
Rule 36    variable_end_loop -> <empty>
Rule 37    nuevaexp -> exp nuevaexp_type
Rule 38    nuevaexp_type -> LESS exp
Rule 39    nuevaexp_type -> GREATER exp
Rule 40    nuevaexp_type -> LESSEQUAL exp
Rule 41    nuevaexp_type -> GREATEREQUAL exp
Rule 42    nuevaexp_type -> NOTEQUAL exp
Rule 43    nuevaexp_type -> EQUAL exp
Rule 44    nuevaexp_type -> <empty>
Rule 45    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 46    escritura_type -> expresion
Rule 47    escritura_type -> QUOTE CTECHAR QUOTE
Rule 48    ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque
Rule 49    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
Rule 50    addProcDirFunc -> <empty>
Rule 51    funcion_option -> argumentos
Rule 52    funcion_option -> <empty>
Rule 53    argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
Rule 54    argumentos_loop -> COMA argumentos
Rule 55    argumentos_loop -> <empty>
Rule 56    addDirVarGlobalesFunc -> <empty>
Rule 57    addTypeFunc -> <empty>
Rule 58    condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
Rule 59    condicion_option -> ELSE bloque
Rule 60    condicion_option -> <empty>
Rule 61    expresion -> nuevaexp expresion_option nodo9 expresion_loop
Rule 62    expresion_option -> AND nodo10_and nuevaexp
Rule 63    expresion_option -> OR nodo10_or nuevaexp
Rule 64    expresion_option -> <empty>
Rule 65    expresion_loop -> expresion
Rule 66    expresion_loop -> <empty>
Rule 67    nodo9 -> <empty>
Rule 68    nodo10_and -> <empty>
Rule 69    nodo10_or -> <empty>
Rule 70    asignacion -> ID asignacion_option
Rule 71    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 72    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 73    asignacion_type -> CTEINT
Rule 74    asignacion_type -> CTEFLOAT
Rule 75    asignacion_type -> CTEINT COMA asignacion_type
Rule 76    asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 77    nodo8 -> <empty>
Rule 78    exp -> termino nodo5 exp_loop
Rule 79    exp_loop -> exp_type_loop
Rule 80    exp_loop -> <empty>
Rule 81    exp_type_loop -> ADDITION nodo3_suma exp
Rule 82    exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 83    nodo3_suma -> <empty>
Rule 84    nodo3_resta -> <empty>
Rule 85    nodo5 -> <empty>
Rule 86    termino -> factor nodo4 termino_loop
Rule 87    termino_loop -> termino_type_loop
Rule 88    termino_loop -> <empty>
Rule 89    termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 90    termino_type_loop -> DIVISION nodo2_div termino
Rule 91    nodo2_mult -> <empty>
Rule 92    nodo2_div -> <empty>
Rule 93    nodo4 -> <empty>
Rule 94    factor -> factor_var
Rule 95    factor -> factor_exp
Rule 96    factor_var -> varcte nodo1
Rule 97    factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 98    nodo1 -> <empty>
Rule 99    nodo6 -> <empty>
Rule 100   nodo7 -> <empty>
Rule 101   varcte -> ID varcte_arr
Rule 102   varcte -> CTEINT nodoCteE
Rule 103   varcte -> CTEFLOAT nodoCteF
Rule 104   varcte -> CTEBOOL nodoCteB
Rule 105   varcte -> CTECHAR nodoCteC
Rule 106   varcte_arr -> LBRACKET RBRACKET
Rule 107   varcte_arr -> <empty>
Rule 108   CTEBOOL -> TRUE
Rule 109   CTEBOOL -> FALSE
Rule 110   nodoCteE -> <empty>
Rule 111   nodoCteF -> <empty>
Rule 112   nodoCteB -> <empty>
Rule 113   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 81
AND                  : 62
ASSIGN               : 71 72
BOOLTYPE             : 14
CHARTYPE             : 13
COLON                : 28 31 53
COMA                 : 30 33 54 75 76
CTECHAR              : 47 105
CTEFLOAT             : 74 76 103
CTEINT               : 72 73 75 102
DIVISION             : 90
ELSE                 : 59
END                  : 1
EQUAL                : 43
FALSE                : 109
FLOATTYPE            : 12 17
FUNC                 : 49
GREATER              : 39
GREATEREQUAL         : 41
ID                   : 1 29 30 32 33 49 53 70 101
IF                   : 58
INTTYPE              : 11 16
LBRACKET             : 32 33 72 72 106
LCURLY               : 8
LESS                 : 38
LESSEQUAL            : 40
LPARENTHESIS         : 1 45 48 49 58 97
MAIN                 : 1
MULTIPLICATION       : 89
NOTEQUAL             : 42
OR                   : 63
PRINT                : 45
PROGRAM              : 1
QUOTE                : 47 47
RBRACKET             : 32 33 72 72 106
RCURLY               : 8
RETURN               : 23
RPARENTHESIS         : 1 45 48 49 58 97
SEMICOLON            : 1 23 25 26 45 71 72
SUBTRACTION          : 82
TRUE                 : 108
VAR                  : 24
VOIDTYPE             : 15
WHILE                : 48
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 104
addDirVarGlobales    : 29 30 32 33
addDirVarGlobalesFunc : 53
addMainProc          : 1
addProcDir           : 1
addProcDirFunc       : 49
addType              : 28 31
addTypeFunc          : 53
argumentos           : 51 54
argumentos_loop      : 53
asignacion           : 18
asignacion_option    : 70
asignacion_type      : 72 75 76
bloque               : 1 48 49 58 59
bloque_est_loop      : 8 9
ciclo                : 22
condicion            : 19
condicion_option     : 58
escritura            : 20
escritura_type       : 45
estatuto             : 9
exp                  : 23 37 38 39 40 41 42 43 81 82
exp_loop             : 78
exp_type_loop        : 79
expresion            : 46 48 58 65 71 97
expresion_loop       : 61
expresion_option     : 61
factor               : 86
factor_exp           : 95
factor_var           : 94
funcion              : 6
funcion_option       : 49
nodo1                : 96
nodo10_and           : 62
nodo10_or            : 63
nodo2_div            : 90
nodo2_mult           : 89
nodo3_resta          : 82
nodo3_suma           : 81
nodo4                : 86
nodo5                : 78
nodo6                : 97
nodo7                : 97
nodo8                : 71 72
nodo9                : 61
nodoCteB             : 104
nodoCteC             : 105
nodoCteE             : 102
nodoCteF             : 103
nuevaexp             : 61 62 63
nuevaexp_type        : 37
programa             : 0
programa_func_loop   : 1 6
programa_var_loop    : 1 4
regreso              : 21
subtipo              : 31
termino              : 78 89 90
termino_loop         : 86
termino_type_loop    : 87
tipo                 : 28 49 53
varcte               : 96
varcte_arr           : 101
variable             : 4
variable_arr_coma    : 31 33
variable_arr_loop    : 26
variable_end_loop    : 25 26
variable_id_loop     : 25
variable_id_loop_coma : 28 30
variable_loop        : 24 35

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    programa_var_loop              shift and go to state 6
    variable                       shift and go to state 7

state 5

    (24) variable -> VAR . variable_loop
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 12

state 6

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop . programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (49) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 18
    funcion                        shift and go to state 15

state 7

    (4) programa_var_loop -> variable . programa_var_loop
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    variable                       shift and go to state 7
    programa_var_loop              shift and go to state 22

state 8

    (26) variable_loop -> variable_arr_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 23


state 9

    (28) variable_id_loop -> variable_id_loop_coma . COLON tipo addType

    COLON           shift and go to state 24


state 10

    (25) variable_loop -> variable_id_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 25


state 11

    (31) variable_arr_loop -> variable_arr_coma . COLON subtipo addType

    COLON           shift and go to state 26


state 12

    (24) variable -> VAR variable_loop .

    VAR             reduce using rule 24 (variable -> VAR variable_loop .)
    INTTYPE         reduce using rule 24 (variable -> VAR variable_loop .)
    FLOATTYPE       reduce using rule 24 (variable -> VAR variable_loop .)
    CHARTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    BOOLTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    VOIDTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    MAIN            reduce using rule 24 (variable -> VAR variable_loop .)


state 13

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 27

state 14

    (49) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    FUNC            shift and go to state 28


state 15

    (6) programa_func_loop -> funcion . programa_func_loop
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (49) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 29
    funcion                        shift and go to state 15

state 16

    (14) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 14 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 14 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 14 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> BOOLTYPE .)


state 17

    (12) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 12 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 12 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 12 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> FLOATTYPE .)


state 18

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop . addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) addProcDir -> .

    MAIN            reduce using rule 2 (addProcDir -> .)

    addProcDir                     shift and go to state 30

state 19

    (11) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 11 (tipo -> INTTYPE .)
    FUNC            reduce using rule 11 (tipo -> INTTYPE .)
    COMA            reduce using rule 11 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 11 (tipo -> INTTYPE .)


state 20

    (15) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 15 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 15 (tipo -> VOIDTYPE .)
    COMA            reduce using rule 15 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> VOIDTYPE .)


state 21

    (13) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 13 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 13 (tipo -> CHARTYPE .)
    COMA            reduce using rule 13 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> CHARTYPE .)


state 22

    (4) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)


state 23

    (26) variable_loop -> variable_arr_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable_loop
    (36) variable_end_loop -> .
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    VAR             reduce using rule 36 (variable_end_loop -> .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_end_loop              shift and go to state 31
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 32

state 24

    (28) variable_id_loop -> variable_id_loop_coma COLON . tipo addType
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 33

state 25

    (25) variable_loop -> variable_id_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable_loop
    (36) variable_end_loop -> .
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    VAR             reduce using rule 36 (variable_end_loop -> .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_end_loop              shift and go to state 34
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 32

state 26

    (31) variable_arr_loop -> variable_arr_coma COLON . subtipo addType
    (16) subtipo -> . INTTYPE
    (17) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 35
    FLOATTYPE       shift and go to state 36

    subtipo                        shift and go to state 37

state 27

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39
    LBRACKET        shift and go to state 38


state 28

    (49) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    ID              shift and go to state 40


state 29

    (6) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 6 (programa_func_loop -> funcion programa_func_loop .)


state 30

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 41


state 31

    (26) variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)


state 32

    (35) variable_end_loop -> variable_loop .

    VAR             reduce using rule 35 (variable_end_loop -> variable_loop .)
    INTTYPE         reduce using rule 35 (variable_end_loop -> variable_loop .)
    FLOATTYPE       reduce using rule 35 (variable_end_loop -> variable_loop .)
    CHARTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    BOOLTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    VOIDTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    MAIN            reduce using rule 35 (variable_end_loop -> variable_loop .)


state 33

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 42

state 34

    (25) variable_loop -> variable_id_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)


state 35

    (16) subtipo -> INTTYPE .

    SEMICOLON       reduce using rule 16 (subtipo -> INTTYPE .)


state 36

    (17) subtipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 17 (subtipo -> FLOATTYPE .)


state 37

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 43

state 38

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET COMA variable_arr_coma

    RBRACKET        shift and go to state 44


state 39

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA . variable_id_loop_coma
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma

    ID              shift and go to state 45

    variable_id_loop_coma          shift and go to state 46

state 40

    (49) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    LPARENTHESIS    shift and go to state 47


state 41

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addMainProc -> .

    LPARENTHESIS    reduce using rule 3 (addMainProc -> .)

    addMainProc                    shift and go to state 48

state 42

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo addType .

    SEMICOLON       reduce using rule 28 (variable_id_loop -> variable_id_loop_coma COLON tipo addType .)


state 43

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo addType .

    SEMICOLON       reduce using rule 31 (variable_arr_loop -> variable_arr_coma COLON subtipo addType .)


state 44

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET . COMA variable_arr_coma

    COLON           reduce using rule 32 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .)
    COMA            shift and go to state 49


state 45

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 50

state 46

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .

    COLON           reduce using rule 30 (variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .)


state 47

    (49) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS addProcDirFunc bloque
    (51) funcion_option -> . argumentos
    (52) funcion_option -> .
    (53) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    RPARENTHESIS    reduce using rule 52 (funcion_option -> .)
    ID              shift and go to state 53

    funcion_option                 shift and go to state 51
    argumentos                     shift and go to state 52

state 48

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 54


state 49

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA . variable_arr_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 56

    variable_arr_coma              shift and go to state 55

state 50

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39


state 51

    (49) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS addProcDirFunc bloque

    RPARENTHESIS    shift and go to state 57


state 52

    (51) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 51 (funcion_option -> argumentos .)


state 53

    (53) argumentos -> ID . addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
    (56) addDirVarGlobalesFunc -> .

    COLON           reduce using rule 56 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 58

state 54

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 59


state 55

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .

    COLON           reduce using rule 33 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .)


state 56

    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 60

state 57

    (49) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . addProcDirFunc bloque
    (50) addProcDirFunc -> .

    LCURLY          reduce using rule 50 (addProcDirFunc -> .)

    addProcDirFunc                 shift and go to state 61

state 58

    (53) argumentos -> ID addDirVarGlobalesFunc . COLON tipo addTypeFunc argumentos_loop

    COLON           shift and go to state 62


state 59

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 64

state 60

    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    LBRACKET        shift and go to state 38


state 61

    (49) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 65

state 62

    (53) argumentos -> ID addDirVarGlobalesFunc COLON . tipo addTypeFunc argumentos_loop
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 66

state 63

    (8) bloque -> LCURLY . bloque_est_loop RCURLY
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (70) asignacion -> . ID asignacion_option
    (58) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
    (45) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (48) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 73
    IF              shift and go to state 74
    PRINT           shift and go to state 69
    RETURN          shift and go to state 67
    WHILE           shift and go to state 68

    regreso                        shift and go to state 75
    ciclo                          shift and go to state 70
    asignacion                     shift and go to state 76
    estatuto                       shift and go to state 71
    condicion                      shift and go to state 72
    bloque_est_loop                shift and go to state 77
    escritura                      shift and go to state 78

state 64

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 79


state 65

    (49) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .

    INTTYPE         reduce using rule 49 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    FLOATTYPE       reduce using rule 49 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    CHARTYPE        reduce using rule 49 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    BOOLTYPE        reduce using rule 49 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    VOIDTYPE        reduce using rule 49 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    MAIN            reduce using rule 49 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)


state 66

    (53) argumentos -> ID addDirVarGlobalesFunc COLON tipo . addTypeFunc argumentos_loop
    (57) addTypeFunc -> .

    COMA            reduce using rule 57 (addTypeFunc -> .)
    RPARENTHESIS    reduce using rule 57 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 80

state 67

    (23) regreso -> RETURN . exp SEMICOLON
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 92
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 68

    (48) ciclo -> WHILE . LPARENTHESIS expresion RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 95


state 69

    (45) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 96


state 70

    (22) estatuto -> ciclo .

    ID              reduce using rule 22 (estatuto -> ciclo .)
    IF              reduce using rule 22 (estatuto -> ciclo .)
    PRINT           reduce using rule 22 (estatuto -> ciclo .)
    RETURN          reduce using rule 22 (estatuto -> ciclo .)
    WHILE           reduce using rule 22 (estatuto -> ciclo .)
    RCURLY          reduce using rule 22 (estatuto -> ciclo .)


state 71

    (9) bloque_est_loop -> estatuto . bloque_est_loop
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (70) asignacion -> . ID asignacion_option
    (58) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
    (45) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (48) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 73
    IF              shift and go to state 74
    PRINT           shift and go to state 69
    RETURN          shift and go to state 67
    WHILE           shift and go to state 68

    regreso                        shift and go to state 75
    ciclo                          shift and go to state 70
    asignacion                     shift and go to state 76
    estatuto                       shift and go to state 71
    condicion                      shift and go to state 72
    bloque_est_loop                shift and go to state 97
    escritura                      shift and go to state 78

state 72

    (19) estatuto -> condicion .

    ID              reduce using rule 19 (estatuto -> condicion .)
    IF              reduce using rule 19 (estatuto -> condicion .)
    PRINT           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RCURLY          reduce using rule 19 (estatuto -> condicion .)


state 73

    (70) asignacion -> ID . asignacion_option
    (71) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (72) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 99
    LBRACKET        shift and go to state 100

    asignacion_option              shift and go to state 98

state 74

    (58) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS bloque condicion_option

    LPARENTHESIS    shift and go to state 101


state 75

    (21) estatuto -> regreso .

    ID              reduce using rule 21 (estatuto -> regreso .)
    IF              reduce using rule 21 (estatuto -> regreso .)
    PRINT           reduce using rule 21 (estatuto -> regreso .)
    RETURN          reduce using rule 21 (estatuto -> regreso .)
    WHILE           reduce using rule 21 (estatuto -> regreso .)
    RCURLY          reduce using rule 21 (estatuto -> regreso .)


state 76

    (18) estatuto -> asignacion .

    ID              reduce using rule 18 (estatuto -> asignacion .)
    IF              reduce using rule 18 (estatuto -> asignacion .)
    PRINT           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RCURLY          reduce using rule 18 (estatuto -> asignacion .)


state 77

    (8) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 102


state 78

    (20) estatuto -> escritura .

    ID              reduce using rule 20 (estatuto -> escritura .)
    IF              reduce using rule 20 (estatuto -> escritura .)
    PRINT           reduce using rule 20 (estatuto -> escritura .)
    RETURN          reduce using rule 20 (estatuto -> escritura .)
    WHILE           reduce using rule 20 (estatuto -> escritura .)
    RCURLY          reduce using rule 20 (estatuto -> escritura .)


state 79

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 80

    (53) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc . argumentos_loop
    (54) argumentos_loop -> . COMA argumentos
    (55) argumentos_loop -> .

    COMA            shift and go to state 104
    RPARENTHESIS    reduce using rule 55 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 103

state 81

    (105) varcte -> CTECHAR . nodoCteC
    (113) nodoCteC -> .

    MULTIPLICATION  reduce using rule 113 (nodoCteC -> .)
    DIVISION        reduce using rule 113 (nodoCteC -> .)
    ADDITION        reduce using rule 113 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 113 (nodoCteC -> .)
    SEMICOLON       reduce using rule 113 (nodoCteC -> .)
    LESS            reduce using rule 113 (nodoCteC -> .)
    GREATER         reduce using rule 113 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 113 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 113 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 113 (nodoCteC -> .)
    EQUAL           reduce using rule 113 (nodoCteC -> .)
    AND             reduce using rule 113 (nodoCteC -> .)
    OR              reduce using rule 113 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 113 (nodoCteC -> .)
    ID              reduce using rule 113 (nodoCteC -> .)
    CTEINT          reduce using rule 113 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 113 (nodoCteC -> .)
    CTECHAR         reduce using rule 113 (nodoCteC -> .)
    TRUE            reduce using rule 113 (nodoCteC -> .)
    FALSE           reduce using rule 113 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 113 (nodoCteC -> .)

    nodoCteC                       shift and go to state 105

state 82

    (108) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 108 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 108 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 108 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 108 (CTEBOOL -> TRUE .)
    AND             reduce using rule 108 (CTEBOOL -> TRUE .)
    OR              reduce using rule 108 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 108 (CTEBOOL -> TRUE .)
    ID              reduce using rule 108 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 108 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 108 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 108 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 108 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 108 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 108 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 108 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 108 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 108 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 108 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 108 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 108 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 108 (CTEBOOL -> TRUE .)


state 83

    (96) factor_var -> varcte . nodo1
    (98) nodo1 -> .

    MULTIPLICATION  reduce using rule 98 (nodo1 -> .)
    DIVISION        reduce using rule 98 (nodo1 -> .)
    ADDITION        reduce using rule 98 (nodo1 -> .)
    SUBTRACTION     reduce using rule 98 (nodo1 -> .)
    SEMICOLON       reduce using rule 98 (nodo1 -> .)
    LESS            reduce using rule 98 (nodo1 -> .)
    GREATER         reduce using rule 98 (nodo1 -> .)
    LESSEQUAL       reduce using rule 98 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 98 (nodo1 -> .)
    NOTEQUAL        reduce using rule 98 (nodo1 -> .)
    EQUAL           reduce using rule 98 (nodo1 -> .)
    AND             reduce using rule 98 (nodo1 -> .)
    OR              reduce using rule 98 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 98 (nodo1 -> .)
    ID              reduce using rule 98 (nodo1 -> .)
    CTEINT          reduce using rule 98 (nodo1 -> .)
    CTEFLOAT        reduce using rule 98 (nodo1 -> .)
    CTECHAR         reduce using rule 98 (nodo1 -> .)
    TRUE            reduce using rule 98 (nodo1 -> .)
    FALSE           reduce using rule 98 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 98 (nodo1 -> .)

    nodo1                          shift and go to state 106

state 84

    (103) varcte -> CTEFLOAT . nodoCteF
    (111) nodoCteF -> .

    MULTIPLICATION  reduce using rule 111 (nodoCteF -> .)
    DIVISION        reduce using rule 111 (nodoCteF -> .)
    ADDITION        reduce using rule 111 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 111 (nodoCteF -> .)
    SEMICOLON       reduce using rule 111 (nodoCteF -> .)
    LESS            reduce using rule 111 (nodoCteF -> .)
    GREATER         reduce using rule 111 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 111 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 111 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 111 (nodoCteF -> .)
    EQUAL           reduce using rule 111 (nodoCteF -> .)
    AND             reduce using rule 111 (nodoCteF -> .)
    OR              reduce using rule 111 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 111 (nodoCteF -> .)
    ID              reduce using rule 111 (nodoCteF -> .)
    CTEINT          reduce using rule 111 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 111 (nodoCteF -> .)
    CTECHAR         reduce using rule 111 (nodoCteF -> .)
    TRUE            reduce using rule 111 (nodoCteF -> .)
    FALSE           reduce using rule 111 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 111 (nodoCteF -> .)

    nodoCteF                       shift and go to state 107

state 85

    (86) termino -> factor . nodo4 termino_loop
    (93) nodo4 -> .

    MULTIPLICATION  reduce using rule 93 (nodo4 -> .)
    DIVISION        reduce using rule 93 (nodo4 -> .)
    ADDITION        reduce using rule 93 (nodo4 -> .)
    SUBTRACTION     reduce using rule 93 (nodo4 -> .)
    SEMICOLON       reduce using rule 93 (nodo4 -> .)
    LESS            reduce using rule 93 (nodo4 -> .)
    GREATER         reduce using rule 93 (nodo4 -> .)
    LESSEQUAL       reduce using rule 93 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 93 (nodo4 -> .)
    NOTEQUAL        reduce using rule 93 (nodo4 -> .)
    EQUAL           reduce using rule 93 (nodo4 -> .)
    AND             reduce using rule 93 (nodo4 -> .)
    OR              reduce using rule 93 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 93 (nodo4 -> .)
    ID              reduce using rule 93 (nodo4 -> .)
    CTEINT          reduce using rule 93 (nodo4 -> .)
    CTEFLOAT        reduce using rule 93 (nodo4 -> .)
    CTECHAR         reduce using rule 93 (nodo4 -> .)
    TRUE            reduce using rule 93 (nodo4 -> .)
    FALSE           reduce using rule 93 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 93 (nodo4 -> .)

    nodo4                          shift and go to state 108

state 86

    (95) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 95 (factor -> factor_exp .)
    DIVISION        reduce using rule 95 (factor -> factor_exp .)
    ADDITION        reduce using rule 95 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 95 (factor -> factor_exp .)
    AND             reduce using rule 95 (factor -> factor_exp .)
    OR              reduce using rule 95 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 95 (factor -> factor_exp .)
    ID              reduce using rule 95 (factor -> factor_exp .)
    CTEINT          reduce using rule 95 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 95 (factor -> factor_exp .)
    CTECHAR         reduce using rule 95 (factor -> factor_exp .)
    TRUE            reduce using rule 95 (factor -> factor_exp .)
    FALSE           reduce using rule 95 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 95 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 95 (factor -> factor_exp .)
    LESS            reduce using rule 95 (factor -> factor_exp .)
    GREATER         reduce using rule 95 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 95 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 95 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 95 (factor -> factor_exp .)
    EQUAL           reduce using rule 95 (factor -> factor_exp .)


state 87

    (102) varcte -> CTEINT . nodoCteE
    (110) nodoCteE -> .

    MULTIPLICATION  reduce using rule 110 (nodoCteE -> .)
    DIVISION        reduce using rule 110 (nodoCteE -> .)
    ADDITION        reduce using rule 110 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 110 (nodoCteE -> .)
    SEMICOLON       reduce using rule 110 (nodoCteE -> .)
    LESS            reduce using rule 110 (nodoCteE -> .)
    GREATER         reduce using rule 110 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 110 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 110 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 110 (nodoCteE -> .)
    EQUAL           reduce using rule 110 (nodoCteE -> .)
    AND             reduce using rule 110 (nodoCteE -> .)
    OR              reduce using rule 110 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 110 (nodoCteE -> .)
    ID              reduce using rule 110 (nodoCteE -> .)
    CTEINT          reduce using rule 110 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 110 (nodoCteE -> .)
    CTECHAR         reduce using rule 110 (nodoCteE -> .)
    TRUE            reduce using rule 110 (nodoCteE -> .)
    FALSE           reduce using rule 110 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 110 (nodoCteE -> .)

    nodoCteE                       shift and go to state 109

state 88

    (97) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (99) nodo6 -> .

    LPARENTHESIS    reduce using rule 99 (nodo6 -> .)
    ID              reduce using rule 99 (nodo6 -> .)
    CTEINT          reduce using rule 99 (nodo6 -> .)
    CTEFLOAT        reduce using rule 99 (nodo6 -> .)
    CTECHAR         reduce using rule 99 (nodo6 -> .)
    TRUE            reduce using rule 99 (nodo6 -> .)
    FALSE           reduce using rule 99 (nodo6 -> .)

    nodo6                          shift and go to state 110

state 89

    (101) varcte -> ID . varcte_arr
    (106) varcte_arr -> . LBRACKET RBRACKET
    (107) varcte_arr -> .

    LBRACKET        shift and go to state 111
    MULTIPLICATION  reduce using rule 107 (varcte_arr -> .)
    DIVISION        reduce using rule 107 (varcte_arr -> .)
    ADDITION        reduce using rule 107 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 107 (varcte_arr -> .)
    SEMICOLON       reduce using rule 107 (varcte_arr -> .)
    LESS            reduce using rule 107 (varcte_arr -> .)
    GREATER         reduce using rule 107 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 107 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 107 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 107 (varcte_arr -> .)
    EQUAL           reduce using rule 107 (varcte_arr -> .)
    AND             reduce using rule 107 (varcte_arr -> .)
    OR              reduce using rule 107 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 107 (varcte_arr -> .)
    ID              reduce using rule 107 (varcte_arr -> .)
    CTEINT          reduce using rule 107 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 107 (varcte_arr -> .)
    CTECHAR         reduce using rule 107 (varcte_arr -> .)
    TRUE            reduce using rule 107 (varcte_arr -> .)
    FALSE           reduce using rule 107 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 107 (varcte_arr -> .)

    varcte_arr                     shift and go to state 112

state 90

    (109) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 109 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 109 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 109 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 109 (CTEBOOL -> FALSE .)
    AND             reduce using rule 109 (CTEBOOL -> FALSE .)
    OR              reduce using rule 109 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 109 (CTEBOOL -> FALSE .)
    ID              reduce using rule 109 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 109 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 109 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 109 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 109 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 109 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 109 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 109 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 109 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 109 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 109 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 109 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 109 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 109 (CTEBOOL -> FALSE .)


state 91

    (104) varcte -> CTEBOOL . nodoCteB
    (112) nodoCteB -> .

    MULTIPLICATION  reduce using rule 112 (nodoCteB -> .)
    DIVISION        reduce using rule 112 (nodoCteB -> .)
    ADDITION        reduce using rule 112 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 112 (nodoCteB -> .)
    SEMICOLON       reduce using rule 112 (nodoCteB -> .)
    LESS            reduce using rule 112 (nodoCteB -> .)
    GREATER         reduce using rule 112 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 112 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 112 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 112 (nodoCteB -> .)
    EQUAL           reduce using rule 112 (nodoCteB -> .)
    AND             reduce using rule 112 (nodoCteB -> .)
    OR              reduce using rule 112 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 112 (nodoCteB -> .)
    ID              reduce using rule 112 (nodoCteB -> .)
    CTEINT          reduce using rule 112 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 112 (nodoCteB -> .)
    CTECHAR         reduce using rule 112 (nodoCteB -> .)
    TRUE            reduce using rule 112 (nodoCteB -> .)
    FALSE           reduce using rule 112 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 112 (nodoCteB -> .)

    nodoCteB                       shift and go to state 113

state 92

    (23) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 114


state 93

    (94) factor -> factor_var .

    MULTIPLICATION  reduce using rule 94 (factor -> factor_var .)
    DIVISION        reduce using rule 94 (factor -> factor_var .)
    ADDITION        reduce using rule 94 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 94 (factor -> factor_var .)
    AND             reduce using rule 94 (factor -> factor_var .)
    OR              reduce using rule 94 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 94 (factor -> factor_var .)
    ID              reduce using rule 94 (factor -> factor_var .)
    CTEINT          reduce using rule 94 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 94 (factor -> factor_var .)
    CTECHAR         reduce using rule 94 (factor -> factor_var .)
    TRUE            reduce using rule 94 (factor -> factor_var .)
    FALSE           reduce using rule 94 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 94 (factor -> factor_var .)
    SEMICOLON       reduce using rule 94 (factor -> factor_var .)
    LESS            reduce using rule 94 (factor -> factor_var .)
    GREATER         reduce using rule 94 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 94 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 94 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 94 (factor -> factor_var .)
    EQUAL           reduce using rule 94 (factor -> factor_var .)


state 94

    (78) exp -> termino . nodo5 exp_loop
    (85) nodo5 -> .

    ADDITION        reduce using rule 85 (nodo5 -> .)
    SUBTRACTION     reduce using rule 85 (nodo5 -> .)
    SEMICOLON       reduce using rule 85 (nodo5 -> .)
    LESS            reduce using rule 85 (nodo5 -> .)
    GREATER         reduce using rule 85 (nodo5 -> .)
    LESSEQUAL       reduce using rule 85 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 85 (nodo5 -> .)
    NOTEQUAL        reduce using rule 85 (nodo5 -> .)
    EQUAL           reduce using rule 85 (nodo5 -> .)
    AND             reduce using rule 85 (nodo5 -> .)
    OR              reduce using rule 85 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 85 (nodo5 -> .)
    ID              reduce using rule 85 (nodo5 -> .)
    CTEINT          reduce using rule 85 (nodo5 -> .)
    CTEFLOAT        reduce using rule 85 (nodo5 -> .)
    CTECHAR         reduce using rule 85 (nodo5 -> .)
    TRUE            reduce using rule 85 (nodo5 -> .)
    FALSE           reduce using rule 85 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 85 (nodo5 -> .)

    nodo5                          shift and go to state 115

state 95

    (48) ciclo -> WHILE LPARENTHESIS . expresion RPARENTHESIS bloque
    (61) expresion -> . nuevaexp expresion_option nodo9 expresion_loop
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 116
    expresion                      shift and go to state 117
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93
    termino                        shift and go to state 94

state 96

    (45) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (46) escritura_type -> . expresion
    (47) escritura_type -> . QUOTE CTECHAR QUOTE
    (61) expresion -> . nuevaexp expresion_option nodo9 expresion_loop
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 119
    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    escritura_type                 shift and go to state 120
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 116
    expresion                      shift and go to state 121
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93
    termino                        shift and go to state 94

state 97

    (9) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 9 (bloque_est_loop -> estatuto bloque_est_loop .)


state 98

    (70) asignacion -> ID asignacion_option .

    ID              reduce using rule 70 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 70 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 70 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 70 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 70 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 70 (asignacion -> ID asignacion_option .)


state 99

    (71) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (61) expresion -> . nuevaexp expresion_option nodo9 expresion_loop
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 116
    expresion                      shift and go to state 122
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93
    termino                        shift and go to state 94

state 100

    (72) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 123


state 101

    (58) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS bloque condicion_option
    (61) expresion -> . nuevaexp expresion_option nodo9 expresion_loop
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 116
    expresion                      shift and go to state 124
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93

state 102

    (8) bloque -> LCURLY bloque_est_loop RCURLY .

    END             reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 103

    (53) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 53 (argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .)


state 104

    (54) argumentos_loop -> COMA . argumentos
    (53) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    ID              shift and go to state 53

    argumentos                     shift and go to state 125

state 105

    (105) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 105 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 105 (varcte -> CTECHAR nodoCteC .)


state 106

    (96) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 96 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 96 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 96 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 96 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 96 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 96 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 96 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 96 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 96 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 96 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 96 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 96 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 96 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 96 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 96 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 96 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 96 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 96 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 96 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 96 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 96 (factor_var -> varcte nodo1 .)


state 107

    (103) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 103 (varcte -> CTEFLOAT nodoCteF .)


state 108

    (86) termino -> factor nodo4 . termino_loop
    (87) termino_loop -> . termino_type_loop
    (88) termino_loop -> .
    (89) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (90) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 88 (termino_loop -> .)
    SUBTRACTION     reduce using rule 88 (termino_loop -> .)
    SEMICOLON       reduce using rule 88 (termino_loop -> .)
    LESS            reduce using rule 88 (termino_loop -> .)
    GREATER         reduce using rule 88 (termino_loop -> .)
    LESSEQUAL       reduce using rule 88 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 88 (termino_loop -> .)
    NOTEQUAL        reduce using rule 88 (termino_loop -> .)
    EQUAL           reduce using rule 88 (termino_loop -> .)
    AND             reduce using rule 88 (termino_loop -> .)
    OR              reduce using rule 88 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 88 (termino_loop -> .)
    ID              reduce using rule 88 (termino_loop -> .)
    CTEINT          reduce using rule 88 (termino_loop -> .)
    CTEFLOAT        reduce using rule 88 (termino_loop -> .)
    CTECHAR         reduce using rule 88 (termino_loop -> .)
    TRUE            reduce using rule 88 (termino_loop -> .)
    FALSE           reduce using rule 88 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 88 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 128
    DIVISION        shift and go to state 126

    termino_type_loop              shift and go to state 127
    termino_loop                   shift and go to state 129

state 109

    (102) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 102 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 102 (varcte -> CTEINT nodoCteE .)


state 110

    (97) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (61) expresion -> . nuevaexp expresion_option nodo9 expresion_loop
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 116
    expresion                      shift and go to state 130
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93
    termino                        shift and go to state 94

state 111

    (106) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 131


state 112

    (101) varcte -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 101 (varcte -> ID varcte_arr .)
    DIVISION        reduce using rule 101 (varcte -> ID varcte_arr .)
    ADDITION        reduce using rule 101 (varcte -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 101 (varcte -> ID varcte_arr .)
    SEMICOLON       reduce using rule 101 (varcte -> ID varcte_arr .)
    LESS            reduce using rule 101 (varcte -> ID varcte_arr .)
    GREATER         reduce using rule 101 (varcte -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 101 (varcte -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 101 (varcte -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 101 (varcte -> ID varcte_arr .)
    EQUAL           reduce using rule 101 (varcte -> ID varcte_arr .)
    AND             reduce using rule 101 (varcte -> ID varcte_arr .)
    OR              reduce using rule 101 (varcte -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 101 (varcte -> ID varcte_arr .)
    ID              reduce using rule 101 (varcte -> ID varcte_arr .)
    CTEINT          reduce using rule 101 (varcte -> ID varcte_arr .)
    CTEFLOAT        reduce using rule 101 (varcte -> ID varcte_arr .)
    CTECHAR         reduce using rule 101 (varcte -> ID varcte_arr .)
    TRUE            reduce using rule 101 (varcte -> ID varcte_arr .)
    FALSE           reduce using rule 101 (varcte -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 101 (varcte -> ID varcte_arr .)


state 113

    (104) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 104 (varcte -> CTEBOOL nodoCteB .)


state 114

    (23) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)


state 115

    (78) exp -> termino nodo5 . exp_loop
    (79) exp_loop -> . exp_type_loop
    (80) exp_loop -> .
    (81) exp_type_loop -> . ADDITION nodo3_suma exp
    (82) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 80 (exp_loop -> .)
    LESS            reduce using rule 80 (exp_loop -> .)
    GREATER         reduce using rule 80 (exp_loop -> .)
    LESSEQUAL       reduce using rule 80 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 80 (exp_loop -> .)
    NOTEQUAL        reduce using rule 80 (exp_loop -> .)
    EQUAL           reduce using rule 80 (exp_loop -> .)
    AND             reduce using rule 80 (exp_loop -> .)
    OR              reduce using rule 80 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 80 (exp_loop -> .)
    ID              reduce using rule 80 (exp_loop -> .)
    CTEINT          reduce using rule 80 (exp_loop -> .)
    CTEFLOAT        reduce using rule 80 (exp_loop -> .)
    CTECHAR         reduce using rule 80 (exp_loop -> .)
    TRUE            reduce using rule 80 (exp_loop -> .)
    FALSE           reduce using rule 80 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 80 (exp_loop -> .)
    ADDITION        shift and go to state 132
    SUBTRACTION     shift and go to state 135

    exp_loop                       shift and go to state 133
    exp_type_loop                  shift and go to state 134

state 116

    (61) expresion -> nuevaexp . expresion_option nodo9 expresion_loop
    (62) expresion_option -> . AND nodo10_and nuevaexp
    (63) expresion_option -> . OR nodo10_or nuevaexp
    (64) expresion_option -> .

    AND             shift and go to state 136
    OR              shift and go to state 138
    LPARENTHESIS    reduce using rule 64 (expresion_option -> .)
    ID              reduce using rule 64 (expresion_option -> .)
    CTEINT          reduce using rule 64 (expresion_option -> .)
    CTEFLOAT        reduce using rule 64 (expresion_option -> .)
    CTECHAR         reduce using rule 64 (expresion_option -> .)
    TRUE            reduce using rule 64 (expresion_option -> .)
    FALSE           reduce using rule 64 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 64 (expresion_option -> .)
    SEMICOLON       reduce using rule 64 (expresion_option -> .)

    expresion_option               shift and go to state 137

state 117

    (48) ciclo -> WHILE LPARENTHESIS expresion . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 139


state 118

    (37) nuevaexp -> exp . nuevaexp_type
    (38) nuevaexp_type -> . LESS exp
    (39) nuevaexp_type -> . GREATER exp
    (40) nuevaexp_type -> . LESSEQUAL exp
    (41) nuevaexp_type -> . GREATEREQUAL exp
    (42) nuevaexp_type -> . NOTEQUAL exp
    (43) nuevaexp_type -> . EQUAL exp
    (44) nuevaexp_type -> .

    LESS            shift and go to state 143
    GREATER         shift and go to state 142
    LESSEQUAL       shift and go to state 146
    GREATEREQUAL    shift and go to state 141
    NOTEQUAL        shift and go to state 140
    EQUAL           shift and go to state 144
    AND             reduce using rule 44 (nuevaexp_type -> .)
    OR              reduce using rule 44 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 44 (nuevaexp_type -> .)
    ID              reduce using rule 44 (nuevaexp_type -> .)
    CTEINT          reduce using rule 44 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 44 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 44 (nuevaexp_type -> .)
    TRUE            reduce using rule 44 (nuevaexp_type -> .)
    FALSE           reduce using rule 44 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 44 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 44 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 145

state 119

    (47) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 147


state 120

    (45) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 148


state 121

    (46) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 46 (escritura_type -> expresion .)


state 122

    (71) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (77) nodo8 -> .

    SEMICOLON       reduce using rule 77 (nodo8 -> .)

    nodo8                          shift and go to state 149

state 123

    (72) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 150


state 124

    (58) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS bloque condicion_option

    RPARENTHESIS    shift and go to state 151


state 125

    (54) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 54 (argumentos_loop -> COMA argumentos .)


state 126

    (90) termino_type_loop -> DIVISION . nodo2_div termino
    (92) nodo2_div -> .

    LPARENTHESIS    reduce using rule 92 (nodo2_div -> .)
    ID              reduce using rule 92 (nodo2_div -> .)
    CTEINT          reduce using rule 92 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 92 (nodo2_div -> .)
    CTECHAR         reduce using rule 92 (nodo2_div -> .)
    TRUE            reduce using rule 92 (nodo2_div -> .)
    FALSE           reduce using rule 92 (nodo2_div -> .)

    nodo2_div                      shift and go to state 152

state 127

    (87) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 87 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 87 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 87 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 87 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 87 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 87 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 87 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 87 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 87 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 87 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 87 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 87 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 87 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 87 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 87 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 87 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 87 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 87 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 87 (termino_loop -> termino_type_loop .)


state 128

    (89) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (91) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 91 (nodo2_mult -> .)
    ID              reduce using rule 91 (nodo2_mult -> .)
    CTEINT          reduce using rule 91 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 91 (nodo2_mult -> .)
    CTECHAR         reduce using rule 91 (nodo2_mult -> .)
    TRUE            reduce using rule 91 (nodo2_mult -> .)
    FALSE           reduce using rule 91 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 153

state 129

    (86) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 86 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 86 (termino -> factor nodo4 termino_loop .)


state 130

    (97) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 154


state 131

    (106) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 106 (varcte_arr -> LBRACKET RBRACKET .)


state 132

    (81) exp_type_loop -> ADDITION . nodo3_suma exp
    (83) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 83 (nodo3_suma -> .)
    ID              reduce using rule 83 (nodo3_suma -> .)
    CTEINT          reduce using rule 83 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 83 (nodo3_suma -> .)
    CTECHAR         reduce using rule 83 (nodo3_suma -> .)
    TRUE            reduce using rule 83 (nodo3_suma -> .)
    FALSE           reduce using rule 83 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 155

state 133

    (78) exp -> termino nodo5 exp_loop .

    SEMICOLON       reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    LESS            reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 78 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 78 (exp -> termino nodo5 exp_loop .)


state 134

    (79) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 79 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 79 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 79 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 79 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 79 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 79 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 79 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 79 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 79 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 79 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 79 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 79 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 79 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 79 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 79 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 79 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 79 (exp_loop -> exp_type_loop .)


state 135

    (82) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (84) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 84 (nodo3_resta -> .)
    ID              reduce using rule 84 (nodo3_resta -> .)
    CTEINT          reduce using rule 84 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 84 (nodo3_resta -> .)
    CTECHAR         reduce using rule 84 (nodo3_resta -> .)
    TRUE            reduce using rule 84 (nodo3_resta -> .)
    FALSE           reduce using rule 84 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 156

state 136

    (62) expresion_option -> AND . nodo10_and nuevaexp
    (68) nodo10_and -> .

    LPARENTHESIS    reduce using rule 68 (nodo10_and -> .)
    ID              reduce using rule 68 (nodo10_and -> .)
    CTEINT          reduce using rule 68 (nodo10_and -> .)
    CTEFLOAT        reduce using rule 68 (nodo10_and -> .)
    CTECHAR         reduce using rule 68 (nodo10_and -> .)
    TRUE            reduce using rule 68 (nodo10_and -> .)
    FALSE           reduce using rule 68 (nodo10_and -> .)

    nodo10_and                     shift and go to state 157

state 137

    (61) expresion -> nuevaexp expresion_option . nodo9 expresion_loop
    (67) nodo9 -> .

    LPARENTHESIS    reduce using rule 67 (nodo9 -> .)
    ID              reduce using rule 67 (nodo9 -> .)
    CTEINT          reduce using rule 67 (nodo9 -> .)
    CTEFLOAT        reduce using rule 67 (nodo9 -> .)
    CTECHAR         reduce using rule 67 (nodo9 -> .)
    TRUE            reduce using rule 67 (nodo9 -> .)
    FALSE           reduce using rule 67 (nodo9 -> .)
    RPARENTHESIS    reduce using rule 67 (nodo9 -> .)
    SEMICOLON       reduce using rule 67 (nodo9 -> .)

    nodo9                          shift and go to state 158

state 138

    (63) expresion_option -> OR . nodo10_or nuevaexp
    (69) nodo10_or -> .

    LPARENTHESIS    reduce using rule 69 (nodo10_or -> .)
    ID              reduce using rule 69 (nodo10_or -> .)
    CTEINT          reduce using rule 69 (nodo10_or -> .)
    CTEFLOAT        reduce using rule 69 (nodo10_or -> .)
    CTECHAR         reduce using rule 69 (nodo10_or -> .)
    TRUE            reduce using rule 69 (nodo10_or -> .)
    FALSE           reduce using rule 69 (nodo10_or -> .)

    nodo10_or                      shift and go to state 159

state 139

    (48) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 160

state 140

    (42) nuevaexp_type -> NOTEQUAL . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 161
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 141

    (41) nuevaexp_type -> GREATEREQUAL . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 162
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 142

    (39) nuevaexp_type -> GREATER . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 163
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 143

    (38) nuevaexp_type -> LESS . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 164
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 144

    (43) nuevaexp_type -> EQUAL . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 165
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 145

    (37) nuevaexp -> exp nuevaexp_type .

    AND             reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    OR              reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    LPARENTHESIS    reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    ID              reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    CTEINT          reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    CTEFLOAT        reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    CTECHAR         reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    TRUE            reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    FALSE           reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    RPARENTHESIS    reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)
    SEMICOLON       reduce using rule 37 (nuevaexp -> exp nuevaexp_type .)


state 146

    (40) nuevaexp_type -> LESSEQUAL . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 166
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 147

    (47) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 167


state 148

    (45) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 168


state 149

    (71) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 169


state 150

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 170


state 151

    (58) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . bloque condicion_option
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 171

state 152

    (90) termino_type_loop -> DIVISION nodo2_div . termino
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 172
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 153

    (89) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 173
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 154

    (97) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (100) nodo7 -> .

    MULTIPLICATION  reduce using rule 100 (nodo7 -> .)
    DIVISION        reduce using rule 100 (nodo7 -> .)
    ADDITION        reduce using rule 100 (nodo7 -> .)
    SUBTRACTION     reduce using rule 100 (nodo7 -> .)
    SEMICOLON       reduce using rule 100 (nodo7 -> .)
    LESS            reduce using rule 100 (nodo7 -> .)
    GREATER         reduce using rule 100 (nodo7 -> .)
    LESSEQUAL       reduce using rule 100 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 100 (nodo7 -> .)
    NOTEQUAL        reduce using rule 100 (nodo7 -> .)
    EQUAL           reduce using rule 100 (nodo7 -> .)
    AND             reduce using rule 100 (nodo7 -> .)
    OR              reduce using rule 100 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 100 (nodo7 -> .)
    ID              reduce using rule 100 (nodo7 -> .)
    CTEINT          reduce using rule 100 (nodo7 -> .)
    CTEFLOAT        reduce using rule 100 (nodo7 -> .)
    CTECHAR         reduce using rule 100 (nodo7 -> .)
    TRUE            reduce using rule 100 (nodo7 -> .)
    FALSE           reduce using rule 100 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 100 (nodo7 -> .)

    nodo7                          shift and go to state 174

state 155

    (81) exp_type_loop -> ADDITION nodo3_suma . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 175
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 156

    (82) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 176
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 157

    (62) expresion_option -> AND nodo10_and . nuevaexp
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 177
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93

state 158

    (61) expresion -> nuevaexp expresion_option nodo9 . expresion_loop
    (65) expresion_loop -> . expresion
    (66) expresion_loop -> .
    (61) expresion -> . nuevaexp expresion_option nodo9 expresion_loop
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 66 (expresion_loop -> .)
    SEMICOLON       reduce using rule 66 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    expresion_loop                 shift and go to state 178
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 116
    expresion                      shift and go to state 179
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93
    termino                        shift and go to state 94

state 159

    (63) expresion_option -> OR nodo10_or . nuevaexp
    (37) nuevaexp -> . exp nuevaexp_type
    (78) exp -> . termino nodo5 exp_loop
    (86) termino -> . factor nodo4 termino_loop
    (94) factor -> . factor_var
    (95) factor -> . factor_exp
    (96) factor_var -> . varcte nodo1
    (97) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (101) varcte -> . ID varcte_arr
    (102) varcte -> . CTEINT nodoCteE
    (103) varcte -> . CTEFLOAT nodoCteF
    (104) varcte -> . CTEBOOL nodoCteB
    (105) varcte -> . CTECHAR nodoCteC
    (108) CTEBOOL -> . TRUE
    (109) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 180
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 118
    factor_var                     shift and go to state 93

state 160

    (48) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .

    ID              reduce using rule 48 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    IF              reduce using rule 48 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    PRINT           reduce using rule 48 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RETURN          reduce using rule 48 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    WHILE           reduce using rule 48 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RCURLY          reduce using rule 48 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)


state 161

    (42) nuevaexp_type -> NOTEQUAL exp .

    AND             reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    OR              reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    LPARENTHESIS    reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    ID              reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    CTEINT          reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    CTEFLOAT        reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    CTECHAR         reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    TRUE            reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    FALSE           reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    RPARENTHESIS    reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)
    SEMICOLON       reduce using rule 42 (nuevaexp_type -> NOTEQUAL exp .)


state 162

    (41) nuevaexp_type -> GREATEREQUAL exp .

    AND             reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    OR              reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    LPARENTHESIS    reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    ID              reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    CTEINT          reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    CTEFLOAT        reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    CTECHAR         reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    TRUE            reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    FALSE           reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    RPARENTHESIS    reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)
    SEMICOLON       reduce using rule 41 (nuevaexp_type -> GREATEREQUAL exp .)


state 163

    (39) nuevaexp_type -> GREATER exp .

    AND             reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    OR              reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    LPARENTHESIS    reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    ID              reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    CTEINT          reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    CTEFLOAT        reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    CTECHAR         reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    TRUE            reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    FALSE           reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    RPARENTHESIS    reduce using rule 39 (nuevaexp_type -> GREATER exp .)
    SEMICOLON       reduce using rule 39 (nuevaexp_type -> GREATER exp .)


state 164

    (38) nuevaexp_type -> LESS exp .

    AND             reduce using rule 38 (nuevaexp_type -> LESS exp .)
    OR              reduce using rule 38 (nuevaexp_type -> LESS exp .)
    LPARENTHESIS    reduce using rule 38 (nuevaexp_type -> LESS exp .)
    ID              reduce using rule 38 (nuevaexp_type -> LESS exp .)
    CTEINT          reduce using rule 38 (nuevaexp_type -> LESS exp .)
    CTEFLOAT        reduce using rule 38 (nuevaexp_type -> LESS exp .)
    CTECHAR         reduce using rule 38 (nuevaexp_type -> LESS exp .)
    TRUE            reduce using rule 38 (nuevaexp_type -> LESS exp .)
    FALSE           reduce using rule 38 (nuevaexp_type -> LESS exp .)
    RPARENTHESIS    reduce using rule 38 (nuevaexp_type -> LESS exp .)
    SEMICOLON       reduce using rule 38 (nuevaexp_type -> LESS exp .)


state 165

    (43) nuevaexp_type -> EQUAL exp .

    AND             reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    OR              reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    LPARENTHESIS    reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    ID              reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    CTEINT          reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    CTEFLOAT        reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    CTECHAR         reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    TRUE            reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    FALSE           reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    RPARENTHESIS    reduce using rule 43 (nuevaexp_type -> EQUAL exp .)
    SEMICOLON       reduce using rule 43 (nuevaexp_type -> EQUAL exp .)


state 166

    (40) nuevaexp_type -> LESSEQUAL exp .

    AND             reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    OR              reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    LPARENTHESIS    reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    ID              reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    CTEINT          reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    CTEFLOAT        reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    CTECHAR         reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    TRUE            reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    FALSE           reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    RPARENTHESIS    reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)
    SEMICOLON       reduce using rule 40 (nuevaexp_type -> LESSEQUAL exp .)


state 167

    (47) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 47 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 168

    (45) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 45 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 169

    (71) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 71 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 71 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 71 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 71 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 71 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 71 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 170

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (77) nodo8 -> .

    LBRACKET        reduce using rule 77 (nodo8 -> .)

    nodo8                          shift and go to state 181

state 171

    (58) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque . condicion_option
    (59) condicion_option -> . ELSE bloque
    (60) condicion_option -> .

    ELSE            shift and go to state 182
    ID              reduce using rule 60 (condicion_option -> .)
    IF              reduce using rule 60 (condicion_option -> .)
    PRINT           reduce using rule 60 (condicion_option -> .)
    RETURN          reduce using rule 60 (condicion_option -> .)
    WHILE           reduce using rule 60 (condicion_option -> .)
    RCURLY          reduce using rule 60 (condicion_option -> .)

    condicion_option               shift and go to state 183

state 172

    (90) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 90 (termino_type_loop -> DIVISION nodo2_div termino .)


state 173

    (89) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 89 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 174

    (97) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 97 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 175

    (81) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 81 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 176

    (82) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 82 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 177

    (62) expresion_option -> AND nodo10_and nuevaexp .

    LPARENTHESIS    reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    ID              reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    CTEINT          reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    CTEFLOAT        reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    CTECHAR         reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    TRUE            reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    FALSE           reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    RPARENTHESIS    reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)
    SEMICOLON       reduce using rule 62 (expresion_option -> AND nodo10_and nuevaexp .)


state 178

    (61) expresion -> nuevaexp expresion_option nodo9 expresion_loop .

    RPARENTHESIS    reduce using rule 61 (expresion -> nuevaexp expresion_option nodo9 expresion_loop .)
    SEMICOLON       reduce using rule 61 (expresion -> nuevaexp expresion_option nodo9 expresion_loop .)


state 179

    (65) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 65 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 65 (expresion_loop -> expresion .)


state 180

    (63) expresion_option -> OR nodo10_or nuevaexp .

    LPARENTHESIS    reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    ID              reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    CTEINT          reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    CTEFLOAT        reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    CTECHAR         reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    TRUE            reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    FALSE           reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    RPARENTHESIS    reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)
    SEMICOLON       reduce using rule 63 (expresion_option -> OR nodo10_or nuevaexp .)


state 181

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 184


state 182

    (59) condicion_option -> ELSE . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 185

state 183

    (58) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .

    ID              reduce using rule 58 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    IF              reduce using rule 58 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    PRINT           reduce using rule 58 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    RETURN          reduce using rule 58 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    WHILE           reduce using rule 58 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    RCURLY          reduce using rule 58 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)


state 184

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (73) asignacion_type -> . CTEINT
    (74) asignacion_type -> . CTEFLOAT
    (75) asignacion_type -> . CTEINT COMA asignacion_type
    (76) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 186
    CTEFLOAT        shift and go to state 187

    asignacion_type                shift and go to state 188

state 185

    (59) condicion_option -> ELSE bloque .

    ID              reduce using rule 59 (condicion_option -> ELSE bloque .)
    IF              reduce using rule 59 (condicion_option -> ELSE bloque .)
    PRINT           reduce using rule 59 (condicion_option -> ELSE bloque .)
    RETURN          reduce using rule 59 (condicion_option -> ELSE bloque .)
    WHILE           reduce using rule 59 (condicion_option -> ELSE bloque .)
    RCURLY          reduce using rule 59 (condicion_option -> ELSE bloque .)


state 186

    (73) asignacion_type -> CTEINT .
    (75) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 73 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 189


state 187

    (74) asignacion_type -> CTEFLOAT .
    (76) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 74 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 190


state 188

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 191


state 189

    (75) asignacion_type -> CTEINT COMA . asignacion_type
    (73) asignacion_type -> . CTEINT
    (74) asignacion_type -> . CTEFLOAT
    (75) asignacion_type -> . CTEINT COMA asignacion_type
    (76) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 186
    CTEFLOAT        shift and go to state 187

    asignacion_type                shift and go to state 192

state 190

    (76) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (73) asignacion_type -> . CTEINT
    (74) asignacion_type -> . CTEFLOAT
    (75) asignacion_type -> . CTEINT COMA asignacion_type
    (76) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 186
    CTEFLOAT        shift and go to state 187

    asignacion_type                shift and go to state 193

state 191

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 194


state 192

    (75) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 75 (asignacion_type -> CTEINT COMA asignacion_type .)


state 193

    (76) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 76 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 194

    (72) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 72 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 72 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 72 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 72 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 72 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 72 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)

