Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     addProcDir -> <empty>
Rule 3     addMainProc -> <empty>
Rule 4     programa_var_loop -> variable programa_var_loop
Rule 5     programa_var_loop -> <empty>
Rule 6     programa_func_loop -> funcion programa_func_loop
Rule 7     programa_func_loop -> <empty>
Rule 8     bloque -> LCURLY bloque_est_loop RCURLY
Rule 9     bloque_est_loop -> estatuto bloque_est_loop
Rule 10    bloque_est_loop -> <empty>
Rule 11    tipo -> INTTYPE
Rule 12    tipo -> FLOATTYPE
Rule 13    tipo -> CHARTYPE
Rule 14    tipo -> BOOLTYPE
Rule 15    tipo -> VOIDTYPE
Rule 16    subtipo -> INTTYPE
Rule 17    subtipo -> FLOATTYPE
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> escritura
Rule 21    estatuto -> regreso
Rule 22    estatuto -> ciclo
Rule 23    regreso -> RETURN exp SEMICOLON
Rule 24    variable -> VAR variable_loop
Rule 25    variable_loop -> variable_id_loop SEMICOLON variable_end_loop
Rule 26    variable_loop -> variable_arr_loop SEMICOLON variable_end_loop
Rule 27    addType -> <empty>
Rule 28    variable_id_loop -> variable_id_loop_coma COLON tipo addType
Rule 29    variable_id_loop_coma -> ID addDirVarGlobales
Rule 30    variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma
Rule 31    variable_arr_loop -> variable_arr_coma COLON subtipo addType
Rule 32    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET
Rule 33    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
Rule 34    addDirVarGlobales -> <empty>
Rule 35    variable_end_loop -> variable_loop
Rule 36    variable_end_loop -> <empty>
Rule 37    expresion -> nuevaexp expresion_option expresion_loop
Rule 38    expresion_option -> AND nuevaexp
Rule 39    expresion_option -> OR nuevaexp
Rule 40    expresion_option -> <empty>
Rule 41    expresion_loop -> expresion
Rule 42    expresion_loop -> <empty>
Rule 43    nuevaexp -> exp nuevaexp_type
Rule 44    nuevaexp_type -> LESS exp
Rule 45    nuevaexp_type -> GREATER exp
Rule 46    nuevaexp_type -> LESSEQUAL exp
Rule 47    nuevaexp_type -> GREATEREQUAL exp
Rule 48    nuevaexp_type -> NOTEQUAL exp
Rule 49    nuevaexp_type -> EQUAL exp
Rule 50    nuevaexp_type -> <empty>
Rule 51    condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
Rule 52    condicion_option -> ELSE bloque
Rule 53    condicion_option -> <empty>
Rule 54    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 55    escritura_type -> expresion
Rule 56    escritura_type -> QUOTE CTECHAR QUOTE
Rule 57    ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque
Rule 58    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
Rule 59    addProcDirFunc -> <empty>
Rule 60    funcion_option -> argumentos
Rule 61    funcion_option -> <empty>
Rule 62    argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
Rule 63    argumentos_loop -> COMA argumentos
Rule 64    argumentos_loop -> <empty>
Rule 65    addDirVarGlobalesFunc -> <empty>
Rule 66    addTypeFunc -> <empty>
Rule 67    asignacion -> ID asignacion_option
Rule 68    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 69    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 70    asignacion_type -> CTEINT
Rule 71    asignacion_type -> CTEFLOAT
Rule 72    asignacion_type -> CTEINT COMA asignacion_type
Rule 73    asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 74    nodo8 -> <empty>
Rule 75    exp -> termino nodo5 exp_loop
Rule 76    exp_loop -> exp_type_loop
Rule 77    exp_loop -> <empty>
Rule 78    exp_type_loop -> ADDITION nodo3_suma exp
Rule 79    exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 80    nodo3_suma -> <empty>
Rule 81    nodo3_resta -> <empty>
Rule 82    nodo5 -> <empty>
Rule 83    termino -> factor nodo4 termino_loop
Rule 84    termino_loop -> termino_type_loop
Rule 85    termino_loop -> <empty>
Rule 86    termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 87    termino_type_loop -> DIVISION nodo2_div termino
Rule 88    nodo2_mult -> <empty>
Rule 89    nodo2_div -> <empty>
Rule 90    nodo4 -> <empty>
Rule 91    factor -> factor_var
Rule 92    factor -> factor_exp
Rule 93    factor_var -> varcte nodo1
Rule 94    factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 95    nodo1 -> <empty>
Rule 96    nodo6 -> <empty>
Rule 97    nodo7 -> <empty>
Rule 98    varcte -> ID varcte_arr
Rule 99    varcte -> CTEINT nodoCteE
Rule 100   varcte -> CTEFLOAT nodoCteF
Rule 101   varcte -> CTEBOOL nodoCteB
Rule 102   varcte -> CTECHAR nodoCteC
Rule 103   varcte_arr -> LBRACKET RBRACKET
Rule 104   varcte_arr -> <empty>
Rule 105   nodoCteE -> <empty>
Rule 106   nodoCteF -> <empty>
Rule 107   nodoCteB -> <empty>
Rule 108   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 78
AND                  : 38
ASSIGN               : 68 69
BOOLTYPE             : 14
CHARTYPE             : 13
COLON                : 28 31 62
COMA                 : 30 33 63 72 73
CTEBOOL              : 101
CTECHAR              : 56 102
CTEFLOAT             : 71 73 100
CTEINT               : 69 70 72 99
DIVISION             : 87
ELSE                 : 52
END                  : 1
EQUAL                : 49
FLOATTYPE            : 12 17
FUNC                 : 58
GREATER              : 45
GREATEREQUAL         : 47
ID                   : 1 29 30 32 33 58 62 67 98
IF                   : 51
INTTYPE              : 11 16
LBRACKET             : 32 33 69 69 103
LCURLY               : 8
LESS                 : 44
LESSEQUAL            : 46
LPARENTHESIS         : 1 51 54 57 58 94
MAIN                 : 1
MULTIPLICATION       : 86
NOTEQUAL             : 48
OR                   : 39
PRINT                : 54
PROGRAM              : 1
QUOTE                : 56 56
RBRACKET             : 32 33 69 69 103
RCURLY               : 8
RETURN               : 23
RPARENTHESIS         : 1 51 54 57 58 94
SEMICOLON            : 1 23 25 26 54 68 69
SUBTRACTION          : 79
VAR                  : 24
VOIDTYPE             : 15
WHILE                : 57
error                : 

Nonterminals, with rules where they appear

addDirVarGlobales    : 29 30 32 33
addDirVarGlobalesFunc : 62
addMainProc          : 1
addProcDir           : 1
addProcDirFunc       : 58
addType              : 28 31
addTypeFunc          : 62
argumentos           : 60 63
argumentos_loop      : 62
asignacion           : 18
asignacion_option    : 67
asignacion_type      : 69 72 73
bloque               : 1 51 52 57 58
bloque_est_loop      : 8 9
ciclo                : 22
condicion            : 19
condicion_option     : 51
escritura            : 20
escritura_type       : 54
estatuto             : 9
exp                  : 23 43 44 45 46 47 48 49 78 79
exp_loop             : 75
exp_type_loop        : 76
expresion            : 41 51 55 57 68 94
expresion_loop       : 37
expresion_option     : 37
factor               : 83
factor_exp           : 92
factor_var           : 91
funcion              : 6
funcion_option       : 58
nodo1                : 93
nodo2_div            : 87
nodo2_mult           : 86
nodo3_resta          : 79
nodo3_suma           : 78
nodo4                : 83
nodo5                : 75
nodo6                : 94
nodo7                : 94
nodo8                : 68 69
nodoCteB             : 101
nodoCteC             : 102
nodoCteE             : 99
nodoCteF             : 100
nuevaexp             : 37 38 39
nuevaexp_type        : 43
programa             : 0
programa_func_loop   : 1 6
programa_var_loop    : 1 4
regreso              : 21
subtipo              : 31
termino              : 75 86 87
termino_loop         : 83
termino_type_loop    : 84
tipo                 : 28 58 62
varcte               : 93
varcte_arr           : 98
variable             : 4
variable_arr_coma    : 31 33
variable_arr_loop    : 26
variable_end_loop    : 25 26
variable_id_loop     : 25
variable_id_loop_coma : 28 30
variable_loop        : 24 35

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    programa_var_loop              shift and go to state 6
    variable                       shift and go to state 7

state 5

    (24) variable -> VAR . variable_loop
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 12

state 6

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop . programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (58) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 18
    funcion                        shift and go to state 15

state 7

    (4) programa_var_loop -> variable . programa_var_loop
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    variable                       shift and go to state 7
    programa_var_loop              shift and go to state 22

state 8

    (26) variable_loop -> variable_arr_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 23


state 9

    (28) variable_id_loop -> variable_id_loop_coma . COLON tipo addType

    COLON           shift and go to state 24


state 10

    (25) variable_loop -> variable_id_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 25


state 11

    (31) variable_arr_loop -> variable_arr_coma . COLON subtipo addType

    COLON           shift and go to state 26


state 12

    (24) variable -> VAR variable_loop .

    VAR             reduce using rule 24 (variable -> VAR variable_loop .)
    INTTYPE         reduce using rule 24 (variable -> VAR variable_loop .)
    FLOATTYPE       reduce using rule 24 (variable -> VAR variable_loop .)
    CHARTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    BOOLTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    VOIDTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    MAIN            reduce using rule 24 (variable -> VAR variable_loop .)


state 13

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 27

state 14

    (58) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    FUNC            shift and go to state 28


state 15

    (6) programa_func_loop -> funcion . programa_func_loop
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (58) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 29
    funcion                        shift and go to state 15

state 16

    (14) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 14 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 14 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 14 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> BOOLTYPE .)


state 17

    (12) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 12 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 12 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 12 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> FLOATTYPE .)


state 18

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop . addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) addProcDir -> .

    MAIN            reduce using rule 2 (addProcDir -> .)

    addProcDir                     shift and go to state 30

state 19

    (11) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 11 (tipo -> INTTYPE .)
    FUNC            reduce using rule 11 (tipo -> INTTYPE .)
    COMA            reduce using rule 11 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 11 (tipo -> INTTYPE .)


state 20

    (15) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 15 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 15 (tipo -> VOIDTYPE .)
    COMA            reduce using rule 15 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> VOIDTYPE .)


state 21

    (13) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 13 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 13 (tipo -> CHARTYPE .)
    COMA            reduce using rule 13 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> CHARTYPE .)


state 22

    (4) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)


state 23

    (26) variable_loop -> variable_arr_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable_loop
    (36) variable_end_loop -> .
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    VAR             reduce using rule 36 (variable_end_loop -> .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_end_loop              shift and go to state 31
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 32

state 24

    (28) variable_id_loop -> variable_id_loop_coma COLON . tipo addType
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 33

state 25

    (25) variable_loop -> variable_id_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable_loop
    (36) variable_end_loop -> .
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    VAR             reduce using rule 36 (variable_end_loop -> .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_end_loop              shift and go to state 34
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 32

state 26

    (31) variable_arr_loop -> variable_arr_coma COLON . subtipo addType
    (16) subtipo -> . INTTYPE
    (17) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 35
    FLOATTYPE       shift and go to state 36

    subtipo                        shift and go to state 37

state 27

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39
    LBRACKET        shift and go to state 38


state 28

    (58) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    ID              shift and go to state 40


state 29

    (6) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 6 (programa_func_loop -> funcion programa_func_loop .)


state 30

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 41


state 31

    (26) variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)


state 32

    (35) variable_end_loop -> variable_loop .

    VAR             reduce using rule 35 (variable_end_loop -> variable_loop .)
    INTTYPE         reduce using rule 35 (variable_end_loop -> variable_loop .)
    FLOATTYPE       reduce using rule 35 (variable_end_loop -> variable_loop .)
    CHARTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    BOOLTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    VOIDTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    MAIN            reduce using rule 35 (variable_end_loop -> variable_loop .)


state 33

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 42

state 34

    (25) variable_loop -> variable_id_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)


state 35

    (16) subtipo -> INTTYPE .

    SEMICOLON       reduce using rule 16 (subtipo -> INTTYPE .)


state 36

    (17) subtipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 17 (subtipo -> FLOATTYPE .)


state 37

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 43

state 38

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET COMA variable_arr_coma

    RBRACKET        shift and go to state 44


state 39

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA . variable_id_loop_coma
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma

    ID              shift and go to state 45

    variable_id_loop_coma          shift and go to state 46

state 40

    (58) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    LPARENTHESIS    shift and go to state 47


state 41

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addMainProc -> .

    LPARENTHESIS    reduce using rule 3 (addMainProc -> .)

    addMainProc                    shift and go to state 48

state 42

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo addType .

    SEMICOLON       reduce using rule 28 (variable_id_loop -> variable_id_loop_coma COLON tipo addType .)


state 43

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo addType .

    SEMICOLON       reduce using rule 31 (variable_arr_loop -> variable_arr_coma COLON subtipo addType .)


state 44

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET . COMA variable_arr_coma

    COLON           reduce using rule 32 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .)
    COMA            shift and go to state 49


state 45

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 50

state 46

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .

    COLON           reduce using rule 30 (variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .)


state 47

    (58) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS addProcDirFunc bloque
    (60) funcion_option -> . argumentos
    (61) funcion_option -> .
    (62) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    RPARENTHESIS    reduce using rule 61 (funcion_option -> .)
    ID              shift and go to state 53

    funcion_option                 shift and go to state 51
    argumentos                     shift and go to state 52

state 48

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 54


state 49

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA . variable_arr_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 56

    variable_arr_coma              shift and go to state 55

state 50

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39


state 51

    (58) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS addProcDirFunc bloque

    RPARENTHESIS    shift and go to state 57


state 52

    (60) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 60 (funcion_option -> argumentos .)


state 53

    (62) argumentos -> ID . addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
    (65) addDirVarGlobalesFunc -> .

    COLON           reduce using rule 65 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 58

state 54

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 59


state 55

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .

    COLON           reduce using rule 33 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .)


state 56

    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 60

state 57

    (58) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . addProcDirFunc bloque
    (59) addProcDirFunc -> .

    LCURLY          reduce using rule 59 (addProcDirFunc -> .)

    addProcDirFunc                 shift and go to state 61

state 58

    (62) argumentos -> ID addDirVarGlobalesFunc . COLON tipo addTypeFunc argumentos_loop

    COLON           shift and go to state 62


state 59

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 64

state 60

    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    LBRACKET        shift and go to state 38


state 61

    (58) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 65

state 62

    (62) argumentos -> ID addDirVarGlobalesFunc COLON . tipo addTypeFunc argumentos_loop
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 66

state 63

    (8) bloque -> LCURLY . bloque_est_loop RCURLY
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (67) asignacion -> . ID asignacion_option
    (51) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
    (54) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (57) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 73
    IF              shift and go to state 74
    PRINT           shift and go to state 69
    RETURN          shift and go to state 67
    WHILE           shift and go to state 68

    regreso                        shift and go to state 75
    ciclo                          shift and go to state 70
    asignacion                     shift and go to state 76
    estatuto                       shift and go to state 71
    condicion                      shift and go to state 72
    bloque_est_loop                shift and go to state 77
    escritura                      shift and go to state 78

state 64

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 79


state 65

    (58) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .

    INTTYPE         reduce using rule 58 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    FLOATTYPE       reduce using rule 58 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    CHARTYPE        reduce using rule 58 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    BOOLTYPE        reduce using rule 58 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    VOIDTYPE        reduce using rule 58 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    MAIN            reduce using rule 58 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)


state 66

    (62) argumentos -> ID addDirVarGlobalesFunc COLON tipo . addTypeFunc argumentos_loop
    (66) addTypeFunc -> .

    COMA            reduce using rule 66 (addTypeFunc -> .)
    RPARENTHESIS    reduce using rule 66 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 80

state 67

    (23) regreso -> RETURN . exp SEMICOLON
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 90
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 68

    (57) ciclo -> WHILE . LPARENTHESIS expresion RPARENTHESIS bloque

    LPARENTHESIS    shift and go to state 93


state 69

    (54) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 94


state 70

    (22) estatuto -> ciclo .

    ID              reduce using rule 22 (estatuto -> ciclo .)
    IF              reduce using rule 22 (estatuto -> ciclo .)
    PRINT           reduce using rule 22 (estatuto -> ciclo .)
    RETURN          reduce using rule 22 (estatuto -> ciclo .)
    WHILE           reduce using rule 22 (estatuto -> ciclo .)
    RCURLY          reduce using rule 22 (estatuto -> ciclo .)


state 71

    (9) bloque_est_loop -> estatuto . bloque_est_loop
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (67) asignacion -> . ID asignacion_option
    (51) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option
    (54) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (57) ciclo -> . WHILE LPARENTHESIS expresion RPARENTHESIS bloque

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 73
    IF              shift and go to state 74
    PRINT           shift and go to state 69
    RETURN          shift and go to state 67
    WHILE           shift and go to state 68

    regreso                        shift and go to state 75
    ciclo                          shift and go to state 70
    asignacion                     shift and go to state 76
    estatuto                       shift and go to state 71
    condicion                      shift and go to state 72
    bloque_est_loop                shift and go to state 95
    escritura                      shift and go to state 78

state 72

    (19) estatuto -> condicion .

    ID              reduce using rule 19 (estatuto -> condicion .)
    IF              reduce using rule 19 (estatuto -> condicion .)
    PRINT           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RCURLY          reduce using rule 19 (estatuto -> condicion .)


state 73

    (67) asignacion -> ID . asignacion_option
    (68) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (69) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 97
    LBRACKET        shift and go to state 98

    asignacion_option              shift and go to state 96

state 74

    (51) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS bloque condicion_option

    LPARENTHESIS    shift and go to state 99


state 75

    (21) estatuto -> regreso .

    ID              reduce using rule 21 (estatuto -> regreso .)
    IF              reduce using rule 21 (estatuto -> regreso .)
    PRINT           reduce using rule 21 (estatuto -> regreso .)
    RETURN          reduce using rule 21 (estatuto -> regreso .)
    WHILE           reduce using rule 21 (estatuto -> regreso .)
    RCURLY          reduce using rule 21 (estatuto -> regreso .)


state 76

    (18) estatuto -> asignacion .

    ID              reduce using rule 18 (estatuto -> asignacion .)
    IF              reduce using rule 18 (estatuto -> asignacion .)
    PRINT           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RCURLY          reduce using rule 18 (estatuto -> asignacion .)


state 77

    (8) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 100


state 78

    (20) estatuto -> escritura .

    ID              reduce using rule 20 (estatuto -> escritura .)
    IF              reduce using rule 20 (estatuto -> escritura .)
    PRINT           reduce using rule 20 (estatuto -> escritura .)
    RETURN          reduce using rule 20 (estatuto -> escritura .)
    WHILE           reduce using rule 20 (estatuto -> escritura .)
    RCURLY          reduce using rule 20 (estatuto -> escritura .)


state 79

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 80

    (62) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc . argumentos_loop
    (63) argumentos_loop -> . COMA argumentos
    (64) argumentos_loop -> .

    COMA            shift and go to state 102
    RPARENTHESIS    reduce using rule 64 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 101

state 81

    (102) varcte -> CTECHAR . nodoCteC
    (108) nodoCteC -> .

    MULTIPLICATION  reduce using rule 108 (nodoCteC -> .)
    DIVISION        reduce using rule 108 (nodoCteC -> .)
    ADDITION        reduce using rule 108 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 108 (nodoCteC -> .)
    SEMICOLON       reduce using rule 108 (nodoCteC -> .)
    LESS            reduce using rule 108 (nodoCteC -> .)
    GREATER         reduce using rule 108 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 108 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 108 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 108 (nodoCteC -> .)
    EQUAL           reduce using rule 108 (nodoCteC -> .)
    AND             reduce using rule 108 (nodoCteC -> .)
    OR              reduce using rule 108 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 108 (nodoCteC -> .)
    ID              reduce using rule 108 (nodoCteC -> .)
    CTEINT          reduce using rule 108 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 108 (nodoCteC -> .)
    CTEBOOL         reduce using rule 108 (nodoCteC -> .)
    CTECHAR         reduce using rule 108 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 108 (nodoCteC -> .)

    nodoCteC                       shift and go to state 103

state 82

    (93) factor_var -> varcte . nodo1
    (95) nodo1 -> .

    MULTIPLICATION  reduce using rule 95 (nodo1 -> .)
    DIVISION        reduce using rule 95 (nodo1 -> .)
    ADDITION        reduce using rule 95 (nodo1 -> .)
    SUBTRACTION     reduce using rule 95 (nodo1 -> .)
    SEMICOLON       reduce using rule 95 (nodo1 -> .)
    LESS            reduce using rule 95 (nodo1 -> .)
    GREATER         reduce using rule 95 (nodo1 -> .)
    LESSEQUAL       reduce using rule 95 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 95 (nodo1 -> .)
    NOTEQUAL        reduce using rule 95 (nodo1 -> .)
    EQUAL           reduce using rule 95 (nodo1 -> .)
    AND             reduce using rule 95 (nodo1 -> .)
    OR              reduce using rule 95 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 95 (nodo1 -> .)
    ID              reduce using rule 95 (nodo1 -> .)
    CTEINT          reduce using rule 95 (nodo1 -> .)
    CTEFLOAT        reduce using rule 95 (nodo1 -> .)
    CTEBOOL         reduce using rule 95 (nodo1 -> .)
    CTECHAR         reduce using rule 95 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 95 (nodo1 -> .)

    nodo1                          shift and go to state 104

state 83

    (100) varcte -> CTEFLOAT . nodoCteF
    (106) nodoCteF -> .

    MULTIPLICATION  reduce using rule 106 (nodoCteF -> .)
    DIVISION        reduce using rule 106 (nodoCteF -> .)
    ADDITION        reduce using rule 106 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 106 (nodoCteF -> .)
    SEMICOLON       reduce using rule 106 (nodoCteF -> .)
    LESS            reduce using rule 106 (nodoCteF -> .)
    GREATER         reduce using rule 106 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 106 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 106 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 106 (nodoCteF -> .)
    EQUAL           reduce using rule 106 (nodoCteF -> .)
    AND             reduce using rule 106 (nodoCteF -> .)
    OR              reduce using rule 106 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 106 (nodoCteF -> .)
    ID              reduce using rule 106 (nodoCteF -> .)
    CTEINT          reduce using rule 106 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 106 (nodoCteF -> .)
    CTEBOOL         reduce using rule 106 (nodoCteF -> .)
    CTECHAR         reduce using rule 106 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 106 (nodoCteF -> .)

    nodoCteF                       shift and go to state 105

state 84

    (83) termino -> factor . nodo4 termino_loop
    (90) nodo4 -> .

    MULTIPLICATION  reduce using rule 90 (nodo4 -> .)
    DIVISION        reduce using rule 90 (nodo4 -> .)
    ADDITION        reduce using rule 90 (nodo4 -> .)
    SUBTRACTION     reduce using rule 90 (nodo4 -> .)
    SEMICOLON       reduce using rule 90 (nodo4 -> .)
    LESS            reduce using rule 90 (nodo4 -> .)
    GREATER         reduce using rule 90 (nodo4 -> .)
    LESSEQUAL       reduce using rule 90 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 90 (nodo4 -> .)
    NOTEQUAL        reduce using rule 90 (nodo4 -> .)
    EQUAL           reduce using rule 90 (nodo4 -> .)
    AND             reduce using rule 90 (nodo4 -> .)
    OR              reduce using rule 90 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 90 (nodo4 -> .)
    ID              reduce using rule 90 (nodo4 -> .)
    CTEINT          reduce using rule 90 (nodo4 -> .)
    CTEFLOAT        reduce using rule 90 (nodo4 -> .)
    CTEBOOL         reduce using rule 90 (nodo4 -> .)
    CTECHAR         reduce using rule 90 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 90 (nodo4 -> .)

    nodo4                          shift and go to state 106

state 85

    (92) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 92 (factor -> factor_exp .)
    DIVISION        reduce using rule 92 (factor -> factor_exp .)
    ADDITION        reduce using rule 92 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 92 (factor -> factor_exp .)
    AND             reduce using rule 92 (factor -> factor_exp .)
    OR              reduce using rule 92 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 92 (factor -> factor_exp .)
    ID              reduce using rule 92 (factor -> factor_exp .)
    CTEINT          reduce using rule 92 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 92 (factor -> factor_exp .)
    CTEBOOL         reduce using rule 92 (factor -> factor_exp .)
    CTECHAR         reduce using rule 92 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 92 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 92 (factor -> factor_exp .)
    LESS            reduce using rule 92 (factor -> factor_exp .)
    GREATER         reduce using rule 92 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 92 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 92 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 92 (factor -> factor_exp .)
    EQUAL           reduce using rule 92 (factor -> factor_exp .)


state 86

    (99) varcte -> CTEINT . nodoCteE
    (105) nodoCteE -> .

    MULTIPLICATION  reduce using rule 105 (nodoCteE -> .)
    DIVISION        reduce using rule 105 (nodoCteE -> .)
    ADDITION        reduce using rule 105 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 105 (nodoCteE -> .)
    SEMICOLON       reduce using rule 105 (nodoCteE -> .)
    LESS            reduce using rule 105 (nodoCteE -> .)
    GREATER         reduce using rule 105 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 105 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 105 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 105 (nodoCteE -> .)
    EQUAL           reduce using rule 105 (nodoCteE -> .)
    AND             reduce using rule 105 (nodoCteE -> .)
    OR              reduce using rule 105 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 105 (nodoCteE -> .)
    ID              reduce using rule 105 (nodoCteE -> .)
    CTEINT          reduce using rule 105 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 105 (nodoCteE -> .)
    CTEBOOL         reduce using rule 105 (nodoCteE -> .)
    CTECHAR         reduce using rule 105 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 105 (nodoCteE -> .)

    nodoCteE                       shift and go to state 107

state 87

    (94) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (96) nodo6 -> .

    LPARENTHESIS    reduce using rule 96 (nodo6 -> .)
    ID              reduce using rule 96 (nodo6 -> .)
    CTEINT          reduce using rule 96 (nodo6 -> .)
    CTEFLOAT        reduce using rule 96 (nodo6 -> .)
    CTEBOOL         reduce using rule 96 (nodo6 -> .)
    CTECHAR         reduce using rule 96 (nodo6 -> .)

    nodo6                          shift and go to state 108

state 88

    (98) varcte -> ID . varcte_arr
    (103) varcte_arr -> . LBRACKET RBRACKET
    (104) varcte_arr -> .

    LBRACKET        shift and go to state 109
    MULTIPLICATION  reduce using rule 104 (varcte_arr -> .)
    DIVISION        reduce using rule 104 (varcte_arr -> .)
    ADDITION        reduce using rule 104 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 104 (varcte_arr -> .)
    SEMICOLON       reduce using rule 104 (varcte_arr -> .)
    LESS            reduce using rule 104 (varcte_arr -> .)
    GREATER         reduce using rule 104 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 104 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 104 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 104 (varcte_arr -> .)
    EQUAL           reduce using rule 104 (varcte_arr -> .)
    AND             reduce using rule 104 (varcte_arr -> .)
    OR              reduce using rule 104 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 104 (varcte_arr -> .)
    ID              reduce using rule 104 (varcte_arr -> .)
    CTEINT          reduce using rule 104 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 104 (varcte_arr -> .)
    CTEBOOL         reduce using rule 104 (varcte_arr -> .)
    CTECHAR         reduce using rule 104 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 104 (varcte_arr -> .)

    varcte_arr                     shift and go to state 110

state 89

    (101) varcte -> CTEBOOL . nodoCteB
    (107) nodoCteB -> .

    MULTIPLICATION  reduce using rule 107 (nodoCteB -> .)
    DIVISION        reduce using rule 107 (nodoCteB -> .)
    ADDITION        reduce using rule 107 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 107 (nodoCteB -> .)
    SEMICOLON       reduce using rule 107 (nodoCteB -> .)
    LESS            reduce using rule 107 (nodoCteB -> .)
    GREATER         reduce using rule 107 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 107 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 107 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 107 (nodoCteB -> .)
    EQUAL           reduce using rule 107 (nodoCteB -> .)
    AND             reduce using rule 107 (nodoCteB -> .)
    OR              reduce using rule 107 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 107 (nodoCteB -> .)
    ID              reduce using rule 107 (nodoCteB -> .)
    CTEINT          reduce using rule 107 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 107 (nodoCteB -> .)
    CTEBOOL         reduce using rule 107 (nodoCteB -> .)
    CTECHAR         reduce using rule 107 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 107 (nodoCteB -> .)

    nodoCteB                       shift and go to state 111

state 90

    (23) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 112


state 91

    (91) factor -> factor_var .

    MULTIPLICATION  reduce using rule 91 (factor -> factor_var .)
    DIVISION        reduce using rule 91 (factor -> factor_var .)
    ADDITION        reduce using rule 91 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 91 (factor -> factor_var .)
    AND             reduce using rule 91 (factor -> factor_var .)
    OR              reduce using rule 91 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 91 (factor -> factor_var .)
    ID              reduce using rule 91 (factor -> factor_var .)
    CTEINT          reduce using rule 91 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 91 (factor -> factor_var .)
    CTEBOOL         reduce using rule 91 (factor -> factor_var .)
    CTECHAR         reduce using rule 91 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 91 (factor -> factor_var .)
    SEMICOLON       reduce using rule 91 (factor -> factor_var .)
    LESS            reduce using rule 91 (factor -> factor_var .)
    GREATER         reduce using rule 91 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 91 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 91 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 91 (factor -> factor_var .)
    EQUAL           reduce using rule 91 (factor -> factor_var .)


state 92

    (75) exp -> termino . nodo5 exp_loop
    (82) nodo5 -> .

    ADDITION        reduce using rule 82 (nodo5 -> .)
    SUBTRACTION     reduce using rule 82 (nodo5 -> .)
    SEMICOLON       reduce using rule 82 (nodo5 -> .)
    LESS            reduce using rule 82 (nodo5 -> .)
    GREATER         reduce using rule 82 (nodo5 -> .)
    LESSEQUAL       reduce using rule 82 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 82 (nodo5 -> .)
    NOTEQUAL        reduce using rule 82 (nodo5 -> .)
    EQUAL           reduce using rule 82 (nodo5 -> .)
    AND             reduce using rule 82 (nodo5 -> .)
    OR              reduce using rule 82 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 82 (nodo5 -> .)
    ID              reduce using rule 82 (nodo5 -> .)
    CTEINT          reduce using rule 82 (nodo5 -> .)
    CTEFLOAT        reduce using rule 82 (nodo5 -> .)
    CTEBOOL         reduce using rule 82 (nodo5 -> .)
    CTECHAR         reduce using rule 82 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 82 (nodo5 -> .)

    nodo5                          shift and go to state 113

state 93

    (57) ciclo -> WHILE LPARENTHESIS . expresion RPARENTHESIS bloque
    (37) expresion -> . nuevaexp expresion_option expresion_loop
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    termino                        shift and go to state 92
    varcte                         shift and go to state 82
    factor                         shift and go to state 84
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 114
    expresion                      shift and go to state 115
    exp                            shift and go to state 116
    factor_var                     shift and go to state 91

state 94

    (54) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (55) escritura_type -> . expresion
    (56) escritura_type -> . QUOTE CTECHAR QUOTE
    (37) expresion -> . nuevaexp expresion_option expresion_loop
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    QUOTE           shift and go to state 117
    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    termino                        shift and go to state 92
    varcte                         shift and go to state 82
    factor                         shift and go to state 84
    escritura_type                 shift and go to state 118
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 114
    expresion                      shift and go to state 119
    exp                            shift and go to state 116
    factor_var                     shift and go to state 91

state 95

    (9) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 9 (bloque_est_loop -> estatuto bloque_est_loop .)


state 96

    (67) asignacion -> ID asignacion_option .

    ID              reduce using rule 67 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 67 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 67 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 67 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 67 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 67 (asignacion -> ID asignacion_option .)


state 97

    (68) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (37) expresion -> . nuevaexp expresion_option expresion_loop
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    termino                        shift and go to state 92
    varcte                         shift and go to state 82
    factor                         shift and go to state 84
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 114
    expresion                      shift and go to state 120
    exp                            shift and go to state 116
    factor_var                     shift and go to state 91

state 98

    (69) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 121


state 99

    (51) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS bloque condicion_option
    (37) expresion -> . nuevaexp expresion_option expresion_loop
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    termino                        shift and go to state 92
    varcte                         shift and go to state 82
    factor                         shift and go to state 84
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 114
    expresion                      shift and go to state 122
    exp                            shift and go to state 116
    factor_var                     shift and go to state 91

state 100

    (8) bloque -> LCURLY bloque_est_loop RCURLY .

    ID              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    END             reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 101

    (62) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 62 (argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .)


state 102

    (63) argumentos_loop -> COMA . argumentos
    (62) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    ID              shift and go to state 53

    argumentos                     shift and go to state 123

state 103

    (102) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    CTEBOOL         reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 102 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 102 (varcte -> CTECHAR nodoCteC .)


state 104

    (93) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 93 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 93 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 93 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 93 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 93 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 93 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 93 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 93 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 93 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 93 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 93 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 93 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 93 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 93 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 93 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 93 (factor_var -> varcte nodo1 .)
    CTEBOOL         reduce using rule 93 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 93 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 93 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 93 (factor_var -> varcte nodo1 .)


state 105

    (100) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    CTEBOOL         reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 100 (varcte -> CTEFLOAT nodoCteF .)


state 106

    (83) termino -> factor nodo4 . termino_loop
    (84) termino_loop -> . termino_type_loop
    (85) termino_loop -> .
    (86) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (87) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 85 (termino_loop -> .)
    SUBTRACTION     reduce using rule 85 (termino_loop -> .)
    SEMICOLON       reduce using rule 85 (termino_loop -> .)
    LESS            reduce using rule 85 (termino_loop -> .)
    GREATER         reduce using rule 85 (termino_loop -> .)
    LESSEQUAL       reduce using rule 85 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 85 (termino_loop -> .)
    NOTEQUAL        reduce using rule 85 (termino_loop -> .)
    EQUAL           reduce using rule 85 (termino_loop -> .)
    AND             reduce using rule 85 (termino_loop -> .)
    OR              reduce using rule 85 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 85 (termino_loop -> .)
    ID              reduce using rule 85 (termino_loop -> .)
    CTEINT          reduce using rule 85 (termino_loop -> .)
    CTEFLOAT        reduce using rule 85 (termino_loop -> .)
    CTEBOOL         reduce using rule 85 (termino_loop -> .)
    CTECHAR         reduce using rule 85 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 85 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 126
    DIVISION        shift and go to state 124

    termino_type_loop              shift and go to state 125
    termino_loop                   shift and go to state 127

state 107

    (99) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    CTEBOOL         reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 99 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 99 (varcte -> CTEINT nodoCteE .)


state 108

    (94) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (37) expresion -> . nuevaexp expresion_option expresion_loop
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    termino                        shift and go to state 92
    varcte                         shift and go to state 82
    factor                         shift and go to state 84
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 114
    expresion                      shift and go to state 128
    exp                            shift and go to state 116
    factor_var                     shift and go to state 91

state 109

    (103) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 129


state 110

    (98) varcte -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 98 (varcte -> ID varcte_arr .)
    DIVISION        reduce using rule 98 (varcte -> ID varcte_arr .)
    ADDITION        reduce using rule 98 (varcte -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 98 (varcte -> ID varcte_arr .)
    LESS            reduce using rule 98 (varcte -> ID varcte_arr .)
    GREATER         reduce using rule 98 (varcte -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 98 (varcte -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 98 (varcte -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 98 (varcte -> ID varcte_arr .)
    EQUAL           reduce using rule 98 (varcte -> ID varcte_arr .)
    AND             reduce using rule 98 (varcte -> ID varcte_arr .)
    OR              reduce using rule 98 (varcte -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 98 (varcte -> ID varcte_arr .)
    ID              reduce using rule 98 (varcte -> ID varcte_arr .)
    CTEINT          reduce using rule 98 (varcte -> ID varcte_arr .)
    CTEFLOAT        reduce using rule 98 (varcte -> ID varcte_arr .)
    CTEBOOL         reduce using rule 98 (varcte -> ID varcte_arr .)
    CTECHAR         reduce using rule 98 (varcte -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 98 (varcte -> ID varcte_arr .)
    SEMICOLON       reduce using rule 98 (varcte -> ID varcte_arr .)


state 111

    (101) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    CTEBOOL         reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 101 (varcte -> CTEBOOL nodoCteB .)


state 112

    (23) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)


state 113

    (75) exp -> termino nodo5 . exp_loop
    (76) exp_loop -> . exp_type_loop
    (77) exp_loop -> .
    (78) exp_type_loop -> . ADDITION nodo3_suma exp
    (79) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 77 (exp_loop -> .)
    LESS            reduce using rule 77 (exp_loop -> .)
    GREATER         reduce using rule 77 (exp_loop -> .)
    LESSEQUAL       reduce using rule 77 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 77 (exp_loop -> .)
    NOTEQUAL        reduce using rule 77 (exp_loop -> .)
    EQUAL           reduce using rule 77 (exp_loop -> .)
    AND             reduce using rule 77 (exp_loop -> .)
    OR              reduce using rule 77 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 77 (exp_loop -> .)
    ID              reduce using rule 77 (exp_loop -> .)
    CTEINT          reduce using rule 77 (exp_loop -> .)
    CTEFLOAT        reduce using rule 77 (exp_loop -> .)
    CTEBOOL         reduce using rule 77 (exp_loop -> .)
    CTECHAR         reduce using rule 77 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 77 (exp_loop -> .)
    ADDITION        shift and go to state 130
    SUBTRACTION     shift and go to state 133

    exp_loop                       shift and go to state 131
    exp_type_loop                  shift and go to state 132

state 114

    (37) expresion -> nuevaexp . expresion_option expresion_loop
    (38) expresion_option -> . AND nuevaexp
    (39) expresion_option -> . OR nuevaexp
    (40) expresion_option -> .

    AND             shift and go to state 134
    OR              shift and go to state 135
    LPARENTHESIS    reduce using rule 40 (expresion_option -> .)
    ID              reduce using rule 40 (expresion_option -> .)
    CTEINT          reduce using rule 40 (expresion_option -> .)
    CTEFLOAT        reduce using rule 40 (expresion_option -> .)
    CTEBOOL         reduce using rule 40 (expresion_option -> .)
    CTECHAR         reduce using rule 40 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 40 (expresion_option -> .)
    SEMICOLON       reduce using rule 40 (expresion_option -> .)

    expresion_option               shift and go to state 136

state 115

    (57) ciclo -> WHILE LPARENTHESIS expresion . RPARENTHESIS bloque

    RPARENTHESIS    shift and go to state 137


state 116

    (43) nuevaexp -> exp . nuevaexp_type
    (44) nuevaexp_type -> . LESS exp
    (45) nuevaexp_type -> . GREATER exp
    (46) nuevaexp_type -> . LESSEQUAL exp
    (47) nuevaexp_type -> . GREATEREQUAL exp
    (48) nuevaexp_type -> . NOTEQUAL exp
    (49) nuevaexp_type -> . EQUAL exp
    (50) nuevaexp_type -> .

    LESS            shift and go to state 141
    GREATER         shift and go to state 140
    LESSEQUAL       shift and go to state 144
    GREATEREQUAL    shift and go to state 139
    NOTEQUAL        shift and go to state 138
    EQUAL           shift and go to state 142
    AND             reduce using rule 50 (nuevaexp_type -> .)
    OR              reduce using rule 50 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 50 (nuevaexp_type -> .)
    ID              reduce using rule 50 (nuevaexp_type -> .)
    CTEINT          reduce using rule 50 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 50 (nuevaexp_type -> .)
    CTEBOOL         reduce using rule 50 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 50 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 50 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 50 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 143

state 117

    (56) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 145


state 118

    (54) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 146


state 119

    (55) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 55 (escritura_type -> expresion .)


state 120

    (68) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (74) nodo8 -> .

    SEMICOLON       reduce using rule 74 (nodo8 -> .)

    nodo8                          shift and go to state 147

state 121

    (69) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 148


state 122

    (51) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS bloque condicion_option

    RPARENTHESIS    shift and go to state 149


state 123

    (63) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 63 (argumentos_loop -> COMA argumentos .)


state 124

    (87) termino_type_loop -> DIVISION . nodo2_div termino
    (89) nodo2_div -> .

    LPARENTHESIS    reduce using rule 89 (nodo2_div -> .)
    ID              reduce using rule 89 (nodo2_div -> .)
    CTEINT          reduce using rule 89 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 89 (nodo2_div -> .)
    CTEBOOL         reduce using rule 89 (nodo2_div -> .)
    CTECHAR         reduce using rule 89 (nodo2_div -> .)

    nodo2_div                      shift and go to state 150

state 125

    (84) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 84 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 84 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 84 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 84 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 84 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 84 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 84 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 84 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 84 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 84 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 84 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 84 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 84 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 84 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 84 (termino_loop -> termino_type_loop .)
    CTEBOOL         reduce using rule 84 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 84 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 84 (termino_loop -> termino_type_loop .)


state 126

    (86) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (88) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 88 (nodo2_mult -> .)
    ID              reduce using rule 88 (nodo2_mult -> .)
    CTEINT          reduce using rule 88 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 88 (nodo2_mult -> .)
    CTEBOOL         reduce using rule 88 (nodo2_mult -> .)
    CTECHAR         reduce using rule 88 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 151

state 127

    (83) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    CTEBOOL         reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 83 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 83 (termino -> factor nodo4 termino_loop .)


state 128

    (94) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 152


state 129

    (103) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    CTEBOOL         reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 103 (varcte_arr -> LBRACKET RBRACKET .)


state 130

    (78) exp_type_loop -> ADDITION . nodo3_suma exp
    (80) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 80 (nodo3_suma -> .)
    ID              reduce using rule 80 (nodo3_suma -> .)
    CTEINT          reduce using rule 80 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 80 (nodo3_suma -> .)
    CTEBOOL         reduce using rule 80 (nodo3_suma -> .)
    CTECHAR         reduce using rule 80 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 153

state 131

    (75) exp -> termino nodo5 exp_loop .

    LESS            reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    CTEBOOL         reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 75 (exp -> termino nodo5 exp_loop .)
    SEMICOLON       reduce using rule 75 (exp -> termino nodo5 exp_loop .)


state 132

    (76) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 76 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 76 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 76 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 76 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 76 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 76 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 76 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 76 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 76 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 76 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 76 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 76 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 76 (exp_loop -> exp_type_loop .)
    CTEBOOL         reduce using rule 76 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 76 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 76 (exp_loop -> exp_type_loop .)


state 133

    (79) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (81) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 81 (nodo3_resta -> .)
    ID              reduce using rule 81 (nodo3_resta -> .)
    CTEINT          reduce using rule 81 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 81 (nodo3_resta -> .)
    CTEBOOL         reduce using rule 81 (nodo3_resta -> .)
    CTECHAR         reduce using rule 81 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 154

state 134

    (38) expresion_option -> AND . nuevaexp
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 155
    termino                        shift and go to state 92
    exp                            shift and go to state 116
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 135

    (39) expresion_option -> OR . nuevaexp
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 156
    termino                        shift and go to state 92
    exp                            shift and go to state 116
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 136

    (37) expresion -> nuevaexp expresion_option . expresion_loop
    (41) expresion_loop -> . expresion
    (42) expresion_loop -> .
    (37) expresion -> . nuevaexp expresion_option expresion_loop
    (43) nuevaexp -> . exp nuevaexp_type
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    RPARENTHESIS    reduce using rule 42 (expresion_loop -> .)
    SEMICOLON       reduce using rule 42 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    expresion_loop                 shift and go to state 157
    termino                        shift and go to state 92
    varcte                         shift and go to state 82
    factor                         shift and go to state 84
    factor_exp                     shift and go to state 85
    nuevaexp                       shift and go to state 114
    expresion                      shift and go to state 158
    exp                            shift and go to state 116
    factor_var                     shift and go to state 91

state 137

    (57) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 159

state 138

    (48) nuevaexp_type -> NOTEQUAL . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 160
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 139

    (47) nuevaexp_type -> GREATEREQUAL . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 161
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 140

    (45) nuevaexp_type -> GREATER . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 162
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 141

    (44) nuevaexp_type -> LESS . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 163
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 142

    (49) nuevaexp_type -> EQUAL . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 164
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 143

    (43) nuevaexp -> exp nuevaexp_type .

    LPARENTHESIS    reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    ID              reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    CTEINT          reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    CTEFLOAT        reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    CTEBOOL         reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    CTECHAR         reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    RPARENTHESIS    reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    SEMICOLON       reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    AND             reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)
    OR              reduce using rule 43 (nuevaexp -> exp nuevaexp_type .)


state 144

    (46) nuevaexp_type -> LESSEQUAL . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 165
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 145

    (56) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 166


state 146

    (54) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 167


state 147

    (68) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 168


state 148

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 169


state 149

    (51) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . bloque condicion_option
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 170

state 150

    (87) termino_type_loop -> DIVISION nodo2_div . termino
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 171
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 151

    (86) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 172
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 152

    (94) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (97) nodo7 -> .

    MULTIPLICATION  reduce using rule 97 (nodo7 -> .)
    DIVISION        reduce using rule 97 (nodo7 -> .)
    ADDITION        reduce using rule 97 (nodo7 -> .)
    SUBTRACTION     reduce using rule 97 (nodo7 -> .)
    SEMICOLON       reduce using rule 97 (nodo7 -> .)
    LESS            reduce using rule 97 (nodo7 -> .)
    GREATER         reduce using rule 97 (nodo7 -> .)
    LESSEQUAL       reduce using rule 97 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 97 (nodo7 -> .)
    NOTEQUAL        reduce using rule 97 (nodo7 -> .)
    EQUAL           reduce using rule 97 (nodo7 -> .)
    AND             reduce using rule 97 (nodo7 -> .)
    OR              reduce using rule 97 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 97 (nodo7 -> .)
    ID              reduce using rule 97 (nodo7 -> .)
    CTEINT          reduce using rule 97 (nodo7 -> .)
    CTEFLOAT        reduce using rule 97 (nodo7 -> .)
    CTEBOOL         reduce using rule 97 (nodo7 -> .)
    CTECHAR         reduce using rule 97 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 97 (nodo7 -> .)

    nodo7                          shift and go to state 173

state 153

    (78) exp_type_loop -> ADDITION nodo3_suma . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 174
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 154

    (79) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (75) exp -> . termino nodo5 exp_loop
    (83) termino -> . factor nodo4 termino_loop
    (91) factor -> . factor_var
    (92) factor -> . factor_exp
    (93) factor_var -> . varcte nodo1
    (94) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (98) varcte -> . ID varcte_arr
    (99) varcte -> . CTEINT nodoCteE
    (100) varcte -> . CTEFLOAT nodoCteF
    (101) varcte -> . CTEBOOL nodoCteB
    (102) varcte -> . CTECHAR nodoCteC

    LPARENTHESIS    shift and go to state 87
    ID              shift and go to state 88
    CTEINT          shift and go to state 86
    CTEFLOAT        shift and go to state 83
    CTEBOOL         shift and go to state 89
    CTECHAR         shift and go to state 81

    varcte                         shift and go to state 82
    factor_exp                     shift and go to state 85
    termino                        shift and go to state 92
    exp                            shift and go to state 175
    factor                         shift and go to state 84
    factor_var                     shift and go to state 91

state 155

    (38) expresion_option -> AND nuevaexp .

    LPARENTHESIS    reduce using rule 38 (expresion_option -> AND nuevaexp .)
    ID              reduce using rule 38 (expresion_option -> AND nuevaexp .)
    CTEINT          reduce using rule 38 (expresion_option -> AND nuevaexp .)
    CTEFLOAT        reduce using rule 38 (expresion_option -> AND nuevaexp .)
    CTEBOOL         reduce using rule 38 (expresion_option -> AND nuevaexp .)
    CTECHAR         reduce using rule 38 (expresion_option -> AND nuevaexp .)
    RPARENTHESIS    reduce using rule 38 (expresion_option -> AND nuevaexp .)
    SEMICOLON       reduce using rule 38 (expresion_option -> AND nuevaexp .)


state 156

    (39) expresion_option -> OR nuevaexp .

    LPARENTHESIS    reduce using rule 39 (expresion_option -> OR nuevaexp .)
    ID              reduce using rule 39 (expresion_option -> OR nuevaexp .)
    CTEINT          reduce using rule 39 (expresion_option -> OR nuevaexp .)
    CTEFLOAT        reduce using rule 39 (expresion_option -> OR nuevaexp .)
    CTEBOOL         reduce using rule 39 (expresion_option -> OR nuevaexp .)
    CTECHAR         reduce using rule 39 (expresion_option -> OR nuevaexp .)
    RPARENTHESIS    reduce using rule 39 (expresion_option -> OR nuevaexp .)
    SEMICOLON       reduce using rule 39 (expresion_option -> OR nuevaexp .)


state 157

    (37) expresion -> nuevaexp expresion_option expresion_loop .

    RPARENTHESIS    reduce using rule 37 (expresion -> nuevaexp expresion_option expresion_loop .)
    SEMICOLON       reduce using rule 37 (expresion -> nuevaexp expresion_option expresion_loop .)


state 158

    (41) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 41 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 41 (expresion_loop -> expresion .)


state 159

    (57) ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .

    ID              reduce using rule 57 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    IF              reduce using rule 57 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    PRINT           reduce using rule 57 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RETURN          reduce using rule 57 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    WHILE           reduce using rule 57 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)
    RCURLY          reduce using rule 57 (ciclo -> WHILE LPARENTHESIS expresion RPARENTHESIS bloque .)


state 160

    (48) nuevaexp_type -> NOTEQUAL exp .

    AND             reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    OR              reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    LPARENTHESIS    reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    ID              reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    CTEINT          reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    CTEFLOAT        reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    CTEBOOL         reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    CTECHAR         reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    RPARENTHESIS    reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)
    SEMICOLON       reduce using rule 48 (nuevaexp_type -> NOTEQUAL exp .)


state 161

    (47) nuevaexp_type -> GREATEREQUAL exp .

    AND             reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    OR              reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    LPARENTHESIS    reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    ID              reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    CTEINT          reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    CTEFLOAT        reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    CTEBOOL         reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    CTECHAR         reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    RPARENTHESIS    reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)
    SEMICOLON       reduce using rule 47 (nuevaexp_type -> GREATEREQUAL exp .)


state 162

    (45) nuevaexp_type -> GREATER exp .

    AND             reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    OR              reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    LPARENTHESIS    reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    ID              reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    CTEINT          reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    CTEFLOAT        reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    CTEBOOL         reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    CTECHAR         reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    RPARENTHESIS    reduce using rule 45 (nuevaexp_type -> GREATER exp .)
    SEMICOLON       reduce using rule 45 (nuevaexp_type -> GREATER exp .)


state 163

    (44) nuevaexp_type -> LESS exp .

    AND             reduce using rule 44 (nuevaexp_type -> LESS exp .)
    OR              reduce using rule 44 (nuevaexp_type -> LESS exp .)
    LPARENTHESIS    reduce using rule 44 (nuevaexp_type -> LESS exp .)
    ID              reduce using rule 44 (nuevaexp_type -> LESS exp .)
    CTEINT          reduce using rule 44 (nuevaexp_type -> LESS exp .)
    CTEFLOAT        reduce using rule 44 (nuevaexp_type -> LESS exp .)
    CTEBOOL         reduce using rule 44 (nuevaexp_type -> LESS exp .)
    CTECHAR         reduce using rule 44 (nuevaexp_type -> LESS exp .)
    RPARENTHESIS    reduce using rule 44 (nuevaexp_type -> LESS exp .)
    SEMICOLON       reduce using rule 44 (nuevaexp_type -> LESS exp .)


state 164

    (49) nuevaexp_type -> EQUAL exp .

    AND             reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    OR              reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    LPARENTHESIS    reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    ID              reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    CTEINT          reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    CTEFLOAT        reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    CTEBOOL         reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    CTECHAR         reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    RPARENTHESIS    reduce using rule 49 (nuevaexp_type -> EQUAL exp .)
    SEMICOLON       reduce using rule 49 (nuevaexp_type -> EQUAL exp .)


state 165

    (46) nuevaexp_type -> LESSEQUAL exp .

    AND             reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    OR              reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    LPARENTHESIS    reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    ID              reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    CTEINT          reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    CTEFLOAT        reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    CTEBOOL         reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    CTECHAR         reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    RPARENTHESIS    reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)
    SEMICOLON       reduce using rule 46 (nuevaexp_type -> LESSEQUAL exp .)


state 166

    (56) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 56 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 167

    (54) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 54 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 168

    (68) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 68 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 68 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 68 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 68 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 68 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 68 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 169

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (74) nodo8 -> .

    LBRACKET        reduce using rule 74 (nodo8 -> .)

    nodo8                          shift and go to state 176

state 170

    (51) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque . condicion_option
    (52) condicion_option -> . ELSE bloque
    (53) condicion_option -> .

    ELSE            shift and go to state 177
    ID              reduce using rule 53 (condicion_option -> .)
    IF              reduce using rule 53 (condicion_option -> .)
    PRINT           reduce using rule 53 (condicion_option -> .)
    RETURN          reduce using rule 53 (condicion_option -> .)
    WHILE           reduce using rule 53 (condicion_option -> .)
    RCURLY          reduce using rule 53 (condicion_option -> .)

    condicion_option               shift and go to state 178

state 171

    (87) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEBOOL         reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 87 (termino_type_loop -> DIVISION nodo2_div termino .)


state 172

    (86) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEBOOL         reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 86 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 173

    (94) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEBOOL         reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 94 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 174

    (78) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEBOOL         reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 78 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 175

    (79) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEBOOL         reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 79 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 176

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 179


state 177

    (52) condicion_option -> ELSE . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 180

state 178

    (51) condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .

    ID              reduce using rule 51 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    IF              reduce using rule 51 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    PRINT           reduce using rule 51 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    RETURN          reduce using rule 51 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    WHILE           reduce using rule 51 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)
    RCURLY          reduce using rule 51 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS bloque condicion_option .)


state 179

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (70) asignacion_type -> . CTEINT
    (71) asignacion_type -> . CTEFLOAT
    (72) asignacion_type -> . CTEINT COMA asignacion_type
    (73) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 181
    CTEFLOAT        shift and go to state 182

    asignacion_type                shift and go to state 183

state 180

    (52) condicion_option -> ELSE bloque .

    ID              reduce using rule 52 (condicion_option -> ELSE bloque .)
    IF              reduce using rule 52 (condicion_option -> ELSE bloque .)
    PRINT           reduce using rule 52 (condicion_option -> ELSE bloque .)
    RETURN          reduce using rule 52 (condicion_option -> ELSE bloque .)
    WHILE           reduce using rule 52 (condicion_option -> ELSE bloque .)
    RCURLY          reduce using rule 52 (condicion_option -> ELSE bloque .)


state 181

    (70) asignacion_type -> CTEINT .
    (72) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 70 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 184


state 182

    (71) asignacion_type -> CTEFLOAT .
    (73) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 71 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 185


state 183

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 186


state 184

    (72) asignacion_type -> CTEINT COMA . asignacion_type
    (70) asignacion_type -> . CTEINT
    (71) asignacion_type -> . CTEFLOAT
    (72) asignacion_type -> . CTEINT COMA asignacion_type
    (73) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 181
    CTEFLOAT        shift and go to state 182

    asignacion_type                shift and go to state 187

state 185

    (73) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (70) asignacion_type -> . CTEINT
    (71) asignacion_type -> . CTEFLOAT
    (72) asignacion_type -> . CTEINT COMA asignacion_type
    (73) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 181
    CTEFLOAT        shift and go to state 182

    asignacion_type                shift and go to state 188

state 186

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 189


state 187

    (72) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 72 (asignacion_type -> CTEINT COMA asignacion_type .)


state 188

    (73) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 73 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 189

    (69) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 69 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 69 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 69 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 69 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 69 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 69 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)

