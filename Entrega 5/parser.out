Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
Rule 2     addProcDir -> <empty>
Rule 3     addMainProc -> <empty>
Rule 4     programa_var_loop -> variable programa_var_loop
Rule 5     programa_var_loop -> <empty>
Rule 6     programa_func_loop -> funcion programa_func_loop
Rule 7     programa_func_loop -> <empty>
Rule 8     bloque -> LCURLY bloque_est_loop RCURLY
Rule 9     bloque_est_loop -> estatuto bloque_est_loop
Rule 10    bloque_est_loop -> <empty>
Rule 11    tipo -> INTTYPE
Rule 12    tipo -> FLOATTYPE
Rule 13    tipo -> CHARTYPE
Rule 14    tipo -> BOOLTYPE
Rule 15    tipo -> VOIDTYPE
Rule 16    subtipo -> INTTYPE
Rule 17    subtipo -> FLOATTYPE
Rule 18    estatuto -> asignacion
Rule 19    estatuto -> condicion
Rule 20    estatuto -> escritura
Rule 21    estatuto -> regreso
Rule 22    estatuto -> ciclo
Rule 23    regreso -> RETURN exp SEMICOLON
Rule 24    variable -> VAR variable_loop
Rule 25    variable_loop -> variable_id_loop SEMICOLON variable_end_loop
Rule 26    variable_loop -> variable_arr_loop SEMICOLON variable_end_loop
Rule 27    addType -> <empty>
Rule 28    variable_id_loop -> variable_id_loop_coma COLON tipo addType
Rule 29    variable_id_loop_coma -> ID addDirVarGlobales
Rule 30    variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma
Rule 31    variable_arr_loop -> variable_arr_coma COLON subtipo addType
Rule 32    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET
Rule 33    variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
Rule 34    addDirVarGlobales -> <empty>
Rule 35    variable_end_loop -> variable_loop
Rule 36    variable_end_loop -> <empty>
Rule 37    escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
Rule 38    escritura_type -> expresion
Rule 39    escritura_type -> QUOTE CTECHAR QUOTE
Rule 40    funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
Rule 41    addProcDirFunc -> <empty>
Rule 42    funcion_option -> argumentos
Rule 43    funcion_option -> <empty>
Rule 44    argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
Rule 45    argumentos_loop -> COMA argumentos
Rule 46    argumentos_loop -> <empty>
Rule 47    addDirVarGlobalesFunc -> <empty>
Rule 48    addTypeFunc -> <empty>
Rule 49    ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
Rule 50    nodo16 -> <empty>
Rule 51    nodo17 -> <empty>
Rule 52    condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
Rule 53    condicion_option -> ELSE nodo14 bloque
Rule 54    condicion_option -> <empty>
Rule 55    nodo15 -> <empty>
Rule 56    nodo14 -> <empty>
Rule 57    nodo13 -> <empty>
Rule 58    expresion -> nuevaexp expresion_option nodo11 expresion_loop
Rule 59    expresion_option -> AND nodo12_and nuevaexp
Rule 60    expresion_option -> OR nodo12_or nuevaexp
Rule 61    expresion_option -> <empty>
Rule 62    expresion_loop -> expresion
Rule 63    expresion_loop -> <empty>
Rule 64    nodo12_and -> <empty>
Rule 65    nodo12_or -> <empty>
Rule 66    nodo11 -> <empty>
Rule 67    nuevaexp -> exp nuevaexp_type nodo10
Rule 68    nuevaexp_type -> LESS nodo9_menor exp
Rule 69    nuevaexp_type -> GREATER nodo9_mayor exp
Rule 70    nuevaexp_type -> LESSEQUAL nodo9_menorig exp
Rule 71    nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp
Rule 72    nuevaexp_type -> NOTEQUAL nodo9_dif exp
Rule 73    nuevaexp_type -> EQUAL nodo9_igual exp
Rule 74    nuevaexp_type -> <empty>
Rule 75    nodo10 -> <empty>
Rule 76    nodo9_menor -> <empty>
Rule 77    nodo9_mayor -> <empty>
Rule 78    nodo9_menorig -> <empty>
Rule 79    nodo9_mayorig -> <empty>
Rule 80    nodo9_dif -> <empty>
Rule 81    nodo9_igual -> <empty>
Rule 82    asignacion -> ID asignacion_option
Rule 83    asignacion_option -> ASSIGN expresion nodo8 SEMICOLON
Rule 84    asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
Rule 85    asignacion_type -> CTEINT
Rule 86    asignacion_type -> CTEFLOAT
Rule 87    asignacion_type -> CTEINT COMA asignacion_type
Rule 88    asignacion_type -> CTEFLOAT COMA asignacion_type
Rule 89    nodo8 -> <empty>
Rule 90    exp -> termino nodo5 exp_loop
Rule 91    exp_loop -> exp_type_loop
Rule 92    exp_loop -> <empty>
Rule 93    exp_type_loop -> ADDITION nodo3_suma exp
Rule 94    exp_type_loop -> SUBTRACTION nodo3_resta exp
Rule 95    nodo3_suma -> <empty>
Rule 96    nodo3_resta -> <empty>
Rule 97    nodo5 -> <empty>
Rule 98    termino -> factor nodo4 termino_loop
Rule 99    termino_loop -> termino_type_loop
Rule 100   termino_loop -> <empty>
Rule 101   termino_type_loop -> MULTIPLICATION nodo2_mult termino
Rule 102   termino_type_loop -> DIVISION nodo2_div termino
Rule 103   nodo2_mult -> <empty>
Rule 104   nodo2_div -> <empty>
Rule 105   nodo4 -> <empty>
Rule 106   factor -> factor_var
Rule 107   factor -> factor_exp
Rule 108   factor_var -> varcte nodo1
Rule 109   factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
Rule 110   nodo1 -> <empty>
Rule 111   nodo6 -> <empty>
Rule 112   nodo7 -> <empty>
Rule 113   varcte -> ID varcte_arr
Rule 114   varcte -> CTEINT nodoCteE
Rule 115   varcte -> CTEFLOAT nodoCteF
Rule 116   varcte -> CTEBOOL nodoCteB
Rule 117   varcte -> CTECHAR nodoCteC
Rule 118   varcte_arr -> LBRACKET RBRACKET
Rule 119   varcte_arr -> <empty>
Rule 120   CTEBOOL -> TRUE
Rule 121   CTEBOOL -> FALSE
Rule 122   nodoCteE -> <empty>
Rule 123   nodoCteF -> <empty>
Rule 124   nodoCteB -> <empty>
Rule 125   nodoCteC -> <empty>

Terminals, with rules where they appear

ADDITION             : 93
AND                  : 59
ASSIGN               : 83 84
BOOLTYPE             : 14
CHARTYPE             : 13
COLON                : 28 31 44
COMA                 : 30 33 45 87 88
CTECHAR              : 39 117
CTEFLOAT             : 86 88 115
CTEINT               : 84 85 87 114
DIVISION             : 102
ELSE                 : 53
END                  : 1
EQUAL                : 73
FALSE                : 121
FLOATTYPE            : 12 17
FUNC                 : 40
GREATER              : 69
GREATEREQUAL         : 71
ID                   : 1 29 30 32 33 40 44 82 113
IF                   : 52
INTTYPE              : 11 16
LBRACKET             : 32 33 84 84 118
LCURLY               : 8
LESS                 : 68
LESSEQUAL            : 70
LPARENTHESIS         : 1 37 40 49 52 109
MAIN                 : 1
MULTIPLICATION       : 101
NOTEQUAL             : 72
OR                   : 60
PRINT                : 37
PROGRAM              : 1
QUOTE                : 39 39
RBRACKET             : 32 33 84 84 118
RCURLY               : 8
RETURN               : 23
RPARENTHESIS         : 1 37 40 49 52 109
SEMICOLON            : 1 23 25 26 37 83 84
SUBTRACTION          : 94
TRUE                 : 120
VAR                  : 24
VOIDTYPE             : 15
WHILE                : 49
error                : 

Nonterminals, with rules where they appear

CTEBOOL              : 116
addDirVarGlobales    : 29 30 32 33
addDirVarGlobalesFunc : 44
addMainProc          : 1
addProcDir           : 1
addProcDirFunc       : 40
addType              : 28 31
addTypeFunc          : 44
argumentos           : 42 45
argumentos_loop      : 44
asignacion           : 18
asignacion_option    : 82
asignacion_type      : 84 87 88
bloque               : 1 40 49 52 53
bloque_est_loop      : 8 9
ciclo                : 22
condicion            : 19
condicion_option     : 52
escritura            : 20
escritura_type       : 37
estatuto             : 9
exp                  : 23 67 68 69 70 71 72 73 93 94
exp_loop             : 90
exp_type_loop        : 91
expresion            : 38 49 52 62 83 109
expresion_loop       : 58
expresion_option     : 58
factor               : 98
factor_exp           : 107
factor_var           : 106
funcion              : 6
funcion_option       : 40
nodo1                : 108
nodo10               : 67
nodo11               : 58
nodo12_and           : 59
nodo12_or            : 60
nodo13               : 49 52
nodo14               : 53
nodo15               : 52
nodo16               : 49
nodo17               : 49
nodo2_div            : 102
nodo2_mult           : 101
nodo3_resta          : 94
nodo3_suma           : 93
nodo4                : 98
nodo5                : 90
nodo6                : 109
nodo7                : 109
nodo8                : 83 84
nodo9_dif            : 72
nodo9_igual          : 73
nodo9_mayor          : 69
nodo9_mayorig        : 71
nodo9_menor          : 68
nodo9_menorig        : 70
nodoCteB             : 116
nodoCteC             : 117
nodoCteE             : 114
nodoCteF             : 115
nuevaexp             : 58 59 60
nuevaexp_type        : 67
programa             : 0
programa_func_loop   : 1 6
programa_var_loop    : 1 4
regreso              : 21
subtipo              : 31
termino              : 90 101 102
termino_loop         : 98
termino_type_loop    : 99
tipo                 : 28 40 44
varcte               : 108
varcte_arr           : 113
variable             : 4
variable_arr_coma    : 31 33
variable_arr_loop    : 26
variable_end_loop    : 25 26
variable_id_loop     : 25
variable_id_loop_coma : 28 30
variable_loop        : 24 35

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMICOLON . programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    programa_var_loop              shift and go to state 6
    variable                       shift and go to state 7

state 5

    (24) variable -> VAR . variable_loop
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 12

state 6

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop . programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (40) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 18
    funcion                        shift and go to state 15

state 7

    (4) programa_var_loop -> variable . programa_var_loop
    (4) programa_var_loop -> . variable programa_var_loop
    (5) programa_var_loop -> .
    (24) variable -> . VAR variable_loop

    INTTYPE         reduce using rule 5 (programa_var_loop -> .)
    FLOATTYPE       reduce using rule 5 (programa_var_loop -> .)
    CHARTYPE        reduce using rule 5 (programa_var_loop -> .)
    BOOLTYPE        reduce using rule 5 (programa_var_loop -> .)
    VOIDTYPE        reduce using rule 5 (programa_var_loop -> .)
    MAIN            reduce using rule 5 (programa_var_loop -> .)
    VAR             shift and go to state 5

    variable                       shift and go to state 7
    programa_var_loop              shift and go to state 22

state 8

    (26) variable_loop -> variable_arr_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 23


state 9

    (28) variable_id_loop -> variable_id_loop_coma . COLON tipo addType

    COLON           shift and go to state 24


state 10

    (25) variable_loop -> variable_id_loop . SEMICOLON variable_end_loop

    SEMICOLON       shift and go to state 25


state 11

    (31) variable_arr_loop -> variable_arr_coma . COLON subtipo addType

    COLON           shift and go to state 26


state 12

    (24) variable -> VAR variable_loop .

    VAR             reduce using rule 24 (variable -> VAR variable_loop .)
    INTTYPE         reduce using rule 24 (variable -> VAR variable_loop .)
    FLOATTYPE       reduce using rule 24 (variable -> VAR variable_loop .)
    CHARTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    BOOLTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    VOIDTYPE        reduce using rule 24 (variable -> VAR variable_loop .)
    MAIN            reduce using rule 24 (variable -> VAR variable_loop .)


state 13

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 27

state 14

    (40) funcion -> tipo . FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    FUNC            shift and go to state 28


state 15

    (6) programa_func_loop -> funcion . programa_func_loop
    (6) programa_func_loop -> . funcion programa_func_loop
    (7) programa_func_loop -> .
    (40) funcion -> . tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    MAIN            reduce using rule 7 (programa_func_loop -> .)
    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 14
    programa_func_loop             shift and go to state 29
    funcion                        shift and go to state 15

state 16

    (14) tipo -> BOOLTYPE .

    SEMICOLON       reduce using rule 14 (tipo -> BOOLTYPE .)
    FUNC            reduce using rule 14 (tipo -> BOOLTYPE .)
    COMA            reduce using rule 14 (tipo -> BOOLTYPE .)
    RPARENTHESIS    reduce using rule 14 (tipo -> BOOLTYPE .)


state 17

    (12) tipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 12 (tipo -> FLOATTYPE .)
    FUNC            reduce using rule 12 (tipo -> FLOATTYPE .)
    COMA            reduce using rule 12 (tipo -> FLOATTYPE .)
    RPARENTHESIS    reduce using rule 12 (tipo -> FLOATTYPE .)


state 18

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop . addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (2) addProcDir -> .

    MAIN            reduce using rule 2 (addProcDir -> .)

    addProcDir                     shift and go to state 30

state 19

    (11) tipo -> INTTYPE .

    SEMICOLON       reduce using rule 11 (tipo -> INTTYPE .)
    FUNC            reduce using rule 11 (tipo -> INTTYPE .)
    COMA            reduce using rule 11 (tipo -> INTTYPE .)
    RPARENTHESIS    reduce using rule 11 (tipo -> INTTYPE .)


state 20

    (15) tipo -> VOIDTYPE .

    SEMICOLON       reduce using rule 15 (tipo -> VOIDTYPE .)
    FUNC            reduce using rule 15 (tipo -> VOIDTYPE .)
    COMA            reduce using rule 15 (tipo -> VOIDTYPE .)
    RPARENTHESIS    reduce using rule 15 (tipo -> VOIDTYPE .)


state 21

    (13) tipo -> CHARTYPE .

    SEMICOLON       reduce using rule 13 (tipo -> CHARTYPE .)
    FUNC            reduce using rule 13 (tipo -> CHARTYPE .)
    COMA            reduce using rule 13 (tipo -> CHARTYPE .)
    RPARENTHESIS    reduce using rule 13 (tipo -> CHARTYPE .)


state 22

    (4) programa_var_loop -> variable programa_var_loop .

    INTTYPE         reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    FLOATTYPE       reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    CHARTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    BOOLTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    VOIDTYPE        reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)
    MAIN            reduce using rule 4 (programa_var_loop -> variable programa_var_loop .)


state 23

    (26) variable_loop -> variable_arr_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable_loop
    (36) variable_end_loop -> .
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    VAR             reduce using rule 36 (variable_end_loop -> .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_end_loop              shift and go to state 31
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 32

state 24

    (28) variable_id_loop -> variable_id_loop_coma COLON . tipo addType
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 33

state 25

    (25) variable_loop -> variable_id_loop SEMICOLON . variable_end_loop
    (35) variable_end_loop -> . variable_loop
    (36) variable_end_loop -> .
    (25) variable_loop -> . variable_id_loop SEMICOLON variable_end_loop
    (26) variable_loop -> . variable_arr_loop SEMICOLON variable_end_loop
    (28) variable_id_loop -> . variable_id_loop_coma COLON tipo addType
    (31) variable_arr_loop -> . variable_arr_coma COLON subtipo addType
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    VAR             reduce using rule 36 (variable_end_loop -> .)
    INTTYPE         reduce using rule 36 (variable_end_loop -> .)
    FLOATTYPE       reduce using rule 36 (variable_end_loop -> .)
    CHARTYPE        reduce using rule 36 (variable_end_loop -> .)
    BOOLTYPE        reduce using rule 36 (variable_end_loop -> .)
    VOIDTYPE        reduce using rule 36 (variable_end_loop -> .)
    MAIN            reduce using rule 36 (variable_end_loop -> .)
    ID              shift and go to state 13

    variable_arr_loop              shift and go to state 8
    variable_id_loop_coma          shift and go to state 9
    variable_id_loop               shift and go to state 10
    variable_end_loop              shift and go to state 34
    variable_arr_coma              shift and go to state 11
    variable_loop                  shift and go to state 32

state 26

    (31) variable_arr_loop -> variable_arr_coma COLON . subtipo addType
    (16) subtipo -> . INTTYPE
    (17) subtipo -> . FLOATTYPE

    INTTYPE         shift and go to state 35
    FLOATTYPE       shift and go to state 36

    subtipo                        shift and go to state 37

state 27

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma
    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39
    LBRACKET        shift and go to state 38


state 28

    (40) funcion -> tipo FUNC . ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    ID              shift and go to state 40


state 29

    (6) programa_func_loop -> funcion programa_func_loop .

    MAIN            reduce using rule 6 (programa_func_loop -> funcion programa_func_loop .)


state 30

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir . MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END

    MAIN            shift and go to state 41


state 31

    (26) variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 26 (variable_loop -> variable_arr_loop SEMICOLON variable_end_loop .)


state 32

    (35) variable_end_loop -> variable_loop .

    VAR             reduce using rule 35 (variable_end_loop -> variable_loop .)
    INTTYPE         reduce using rule 35 (variable_end_loop -> variable_loop .)
    FLOATTYPE       reduce using rule 35 (variable_end_loop -> variable_loop .)
    CHARTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    BOOLTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    VOIDTYPE        reduce using rule 35 (variable_end_loop -> variable_loop .)
    MAIN            reduce using rule 35 (variable_end_loop -> variable_loop .)


state 33

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 42

state 34

    (25) variable_loop -> variable_id_loop SEMICOLON variable_end_loop .

    VAR             reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    INTTYPE         reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    FLOATTYPE       reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    CHARTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    BOOLTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    VOIDTYPE        reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)
    MAIN            reduce using rule 25 (variable_loop -> variable_id_loop SEMICOLON variable_end_loop .)


state 35

    (16) subtipo -> INTTYPE .

    SEMICOLON       reduce using rule 16 (subtipo -> INTTYPE .)


state 36

    (17) subtipo -> FLOATTYPE .

    SEMICOLON       reduce using rule 17 (subtipo -> FLOATTYPE .)


state 37

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo . addType
    (27) addType -> .

    SEMICOLON       reduce using rule 27 (addType -> .)

    addType                        shift and go to state 43

state 38

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET . RBRACKET COMA variable_arr_coma

    RBRACKET        shift and go to state 44


state 39

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA . variable_id_loop_coma
    (29) variable_id_loop_coma -> . ID addDirVarGlobales
    (30) variable_id_loop_coma -> . ID addDirVarGlobales COMA variable_id_loop_coma

    ID              shift and go to state 45

    variable_id_loop_coma          shift and go to state 46

state 40

    (40) funcion -> tipo FUNC ID . LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque

    LPARENTHESIS    shift and go to state 47


state 41

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN . addMainProc LPARENTHESIS RPARENTHESIS bloque END
    (3) addMainProc -> .

    LPARENTHESIS    reduce using rule 3 (addMainProc -> .)

    addMainProc                    shift and go to state 48

state 42

    (28) variable_id_loop -> variable_id_loop_coma COLON tipo addType .

    SEMICOLON       reduce using rule 28 (variable_id_loop -> variable_id_loop_coma COLON tipo addType .)


state 43

    (31) variable_arr_loop -> variable_arr_coma COLON subtipo addType .

    SEMICOLON       reduce using rule 31 (variable_arr_loop -> variable_arr_coma COLON subtipo addType .)


state 44

    (32) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .
    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET . COMA variable_arr_coma

    COLON           reduce using rule 32 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET .)
    COMA            shift and go to state 49


state 45

    (29) variable_id_loop_coma -> ID . addDirVarGlobales
    (30) variable_id_loop_coma -> ID . addDirVarGlobales COMA variable_id_loop_coma
    (34) addDirVarGlobales -> .

    COMA            reduce using rule 34 (addDirVarGlobales -> .)
    COLON           reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 50

state 46

    (30) variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .

    COLON           reduce using rule 30 (variable_id_loop_coma -> ID addDirVarGlobales COMA variable_id_loop_coma .)


state 47

    (40) funcion -> tipo FUNC ID LPARENTHESIS . funcion_option RPARENTHESIS addProcDirFunc bloque
    (42) funcion_option -> . argumentos
    (43) funcion_option -> .
    (44) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    RPARENTHESIS    reduce using rule 43 (funcion_option -> .)
    ID              shift and go to state 53

    funcion_option                 shift and go to state 51
    argumentos                     shift and go to state 52

state 48

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc . LPARENTHESIS RPARENTHESIS bloque END

    LPARENTHESIS    shift and go to state 54


state 49

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA . variable_arr_coma
    (32) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> . ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma

    ID              shift and go to state 56

    variable_arr_coma              shift and go to state 55

state 50

    (29) variable_id_loop_coma -> ID addDirVarGlobales .
    (30) variable_id_loop_coma -> ID addDirVarGlobales . COMA variable_id_loop_coma

    COLON           reduce using rule 29 (variable_id_loop_coma -> ID addDirVarGlobales .)
    COMA            shift and go to state 39


state 51

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option . RPARENTHESIS addProcDirFunc bloque

    RPARENTHESIS    shift and go to state 57


state 52

    (42) funcion_option -> argumentos .

    RPARENTHESIS    reduce using rule 42 (funcion_option -> argumentos .)


state 53

    (44) argumentos -> ID . addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop
    (47) addDirVarGlobalesFunc -> .

    COLON           reduce using rule 47 (addDirVarGlobalesFunc -> .)

    addDirVarGlobalesFunc          shift and go to state 58

state 54

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS . RPARENTHESIS bloque END

    RPARENTHESIS    shift and go to state 59


state 55

    (33) variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .

    COLON           reduce using rule 33 (variable_arr_coma -> ID addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma .)


state 56

    (32) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET
    (33) variable_arr_coma -> ID . addDirVarGlobales LBRACKET RBRACKET COMA variable_arr_coma
    (34) addDirVarGlobales -> .

    LBRACKET        reduce using rule 34 (addDirVarGlobales -> .)

    addDirVarGlobales              shift and go to state 60

state 57

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS . addProcDirFunc bloque
    (41) addProcDirFunc -> .

    LCURLY          reduce using rule 41 (addProcDirFunc -> .)

    addProcDirFunc                 shift and go to state 61

state 58

    (44) argumentos -> ID addDirVarGlobalesFunc . COLON tipo addTypeFunc argumentos_loop

    COLON           shift and go to state 62


state 59

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS . bloque END
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 64

state 60

    (32) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET
    (33) variable_arr_coma -> ID addDirVarGlobales . LBRACKET RBRACKET COMA variable_arr_coma

    LBRACKET        shift and go to state 38


state 61

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 65

state 62

    (44) argumentos -> ID addDirVarGlobalesFunc COLON . tipo addTypeFunc argumentos_loop
    (11) tipo -> . INTTYPE
    (12) tipo -> . FLOATTYPE
    (13) tipo -> . CHARTYPE
    (14) tipo -> . BOOLTYPE
    (15) tipo -> . VOIDTYPE

    INTTYPE         shift and go to state 19
    FLOATTYPE       shift and go to state 17
    CHARTYPE        shift and go to state 21
    BOOLTYPE        shift and go to state 16
    VOIDTYPE        shift and go to state 20

    tipo                           shift and go to state 66

state 63

    (8) bloque -> LCURLY . bloque_est_loop RCURLY
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (82) asignacion -> . ID asignacion_option
    (52) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (37) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (49) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 73
    IF              shift and go to state 74
    PRINT           shift and go to state 69
    RETURN          shift and go to state 67
    WHILE           shift and go to state 68

    regreso                        shift and go to state 75
    ciclo                          shift and go to state 70
    asignacion                     shift and go to state 76
    estatuto                       shift and go to state 71
    condicion                      shift and go to state 72
    bloque_est_loop                shift and go to state 77
    escritura                      shift and go to state 78

state 64

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque . END

    END             shift and go to state 79


state 65

    (40) funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .

    INTTYPE         reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    FLOATTYPE       reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    CHARTYPE        reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    BOOLTYPE        reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    VOIDTYPE        reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)
    MAIN            reduce using rule 40 (funcion -> tipo FUNC ID LPARENTHESIS funcion_option RPARENTHESIS addProcDirFunc bloque .)


state 66

    (44) argumentos -> ID addDirVarGlobalesFunc COLON tipo . addTypeFunc argumentos_loop
    (48) addTypeFunc -> .

    COMA            reduce using rule 48 (addTypeFunc -> .)
    RPARENTHESIS    reduce using rule 48 (addTypeFunc -> .)

    addTypeFunc                    shift and go to state 80

state 67

    (23) regreso -> RETURN . exp SEMICOLON
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 92
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 68

    (49) ciclo -> WHILE . LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    LPARENTHESIS    shift and go to state 95


state 69

    (37) escritura -> PRINT . LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON

    LPARENTHESIS    shift and go to state 96


state 70

    (22) estatuto -> ciclo .

    ID              reduce using rule 22 (estatuto -> ciclo .)
    IF              reduce using rule 22 (estatuto -> ciclo .)
    PRINT           reduce using rule 22 (estatuto -> ciclo .)
    RETURN          reduce using rule 22 (estatuto -> ciclo .)
    WHILE           reduce using rule 22 (estatuto -> ciclo .)
    RCURLY          reduce using rule 22 (estatuto -> ciclo .)


state 71

    (9) bloque_est_loop -> estatuto . bloque_est_loop
    (9) bloque_est_loop -> . estatuto bloque_est_loop
    (10) bloque_est_loop -> .
    (18) estatuto -> . asignacion
    (19) estatuto -> . condicion
    (20) estatuto -> . escritura
    (21) estatuto -> . regreso
    (22) estatuto -> . ciclo
    (82) asignacion -> . ID asignacion_option
    (52) condicion -> . IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (37) escritura -> . PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON
    (23) regreso -> . RETURN exp SEMICOLON
    (49) ciclo -> . WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17

    RCURLY          reduce using rule 10 (bloque_est_loop -> .)
    ID              shift and go to state 73
    IF              shift and go to state 74
    PRINT           shift and go to state 69
    RETURN          shift and go to state 67
    WHILE           shift and go to state 68

    regreso                        shift and go to state 75
    ciclo                          shift and go to state 70
    asignacion                     shift and go to state 76
    estatuto                       shift and go to state 71
    condicion                      shift and go to state 72
    bloque_est_loop                shift and go to state 97
    escritura                      shift and go to state 78

state 72

    (19) estatuto -> condicion .

    ID              reduce using rule 19 (estatuto -> condicion .)
    IF              reduce using rule 19 (estatuto -> condicion .)
    PRINT           reduce using rule 19 (estatuto -> condicion .)
    RETURN          reduce using rule 19 (estatuto -> condicion .)
    WHILE           reduce using rule 19 (estatuto -> condicion .)
    RCURLY          reduce using rule 19 (estatuto -> condicion .)


state 73

    (82) asignacion -> ID . asignacion_option
    (83) asignacion_option -> . ASSIGN expresion nodo8 SEMICOLON
    (84) asignacion_option -> . LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 99
    LBRACKET        shift and go to state 100

    asignacion_option              shift and go to state 98

state 74

    (52) condicion -> IF . LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15

    LPARENTHESIS    shift and go to state 101


state 75

    (21) estatuto -> regreso .

    ID              reduce using rule 21 (estatuto -> regreso .)
    IF              reduce using rule 21 (estatuto -> regreso .)
    PRINT           reduce using rule 21 (estatuto -> regreso .)
    RETURN          reduce using rule 21 (estatuto -> regreso .)
    WHILE           reduce using rule 21 (estatuto -> regreso .)
    RCURLY          reduce using rule 21 (estatuto -> regreso .)


state 76

    (18) estatuto -> asignacion .

    ID              reduce using rule 18 (estatuto -> asignacion .)
    IF              reduce using rule 18 (estatuto -> asignacion .)
    PRINT           reduce using rule 18 (estatuto -> asignacion .)
    RETURN          reduce using rule 18 (estatuto -> asignacion .)
    WHILE           reduce using rule 18 (estatuto -> asignacion .)
    RCURLY          reduce using rule 18 (estatuto -> asignacion .)


state 77

    (8) bloque -> LCURLY bloque_est_loop . RCURLY

    RCURLY          shift and go to state 102


state 78

    (20) estatuto -> escritura .

    ID              reduce using rule 20 (estatuto -> escritura .)
    IF              reduce using rule 20 (estatuto -> escritura .)
    PRINT           reduce using rule 20 (estatuto -> escritura .)
    RETURN          reduce using rule 20 (estatuto -> escritura .)
    WHILE           reduce using rule 20 (estatuto -> escritura .)
    RCURLY          reduce using rule 20 (estatuto -> escritura .)


state 79

    (1) programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMICOLON programa_var_loop programa_func_loop addProcDir MAIN addMainProc LPARENTHESIS RPARENTHESIS bloque END .)


state 80

    (44) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc . argumentos_loop
    (45) argumentos_loop -> . COMA argumentos
    (46) argumentos_loop -> .

    COMA            shift and go to state 104
    RPARENTHESIS    reduce using rule 46 (argumentos_loop -> .)

    argumentos_loop                shift and go to state 103

state 81

    (117) varcte -> CTECHAR . nodoCteC
    (125) nodoCteC -> .

    MULTIPLICATION  reduce using rule 125 (nodoCteC -> .)
    DIVISION        reduce using rule 125 (nodoCteC -> .)
    ADDITION        reduce using rule 125 (nodoCteC -> .)
    SUBTRACTION     reduce using rule 125 (nodoCteC -> .)
    SEMICOLON       reduce using rule 125 (nodoCteC -> .)
    LESS            reduce using rule 125 (nodoCteC -> .)
    GREATER         reduce using rule 125 (nodoCteC -> .)
    LESSEQUAL       reduce using rule 125 (nodoCteC -> .)
    GREATEREQUAL    reduce using rule 125 (nodoCteC -> .)
    NOTEQUAL        reduce using rule 125 (nodoCteC -> .)
    EQUAL           reduce using rule 125 (nodoCteC -> .)
    AND             reduce using rule 125 (nodoCteC -> .)
    OR              reduce using rule 125 (nodoCteC -> .)
    LPARENTHESIS    reduce using rule 125 (nodoCteC -> .)
    ID              reduce using rule 125 (nodoCteC -> .)
    CTEINT          reduce using rule 125 (nodoCteC -> .)
    CTEFLOAT        reduce using rule 125 (nodoCteC -> .)
    CTECHAR         reduce using rule 125 (nodoCteC -> .)
    TRUE            reduce using rule 125 (nodoCteC -> .)
    FALSE           reduce using rule 125 (nodoCteC -> .)
    RPARENTHESIS    reduce using rule 125 (nodoCteC -> .)

    nodoCteC                       shift and go to state 105

state 82

    (120) CTEBOOL -> TRUE .

    MULTIPLICATION  reduce using rule 120 (CTEBOOL -> TRUE .)
    DIVISION        reduce using rule 120 (CTEBOOL -> TRUE .)
    ADDITION        reduce using rule 120 (CTEBOOL -> TRUE .)
    SUBTRACTION     reduce using rule 120 (CTEBOOL -> TRUE .)
    AND             reduce using rule 120 (CTEBOOL -> TRUE .)
    OR              reduce using rule 120 (CTEBOOL -> TRUE .)
    LPARENTHESIS    reduce using rule 120 (CTEBOOL -> TRUE .)
    ID              reduce using rule 120 (CTEBOOL -> TRUE .)
    CTEINT          reduce using rule 120 (CTEBOOL -> TRUE .)
    CTEFLOAT        reduce using rule 120 (CTEBOOL -> TRUE .)
    CTECHAR         reduce using rule 120 (CTEBOOL -> TRUE .)
    TRUE            reduce using rule 120 (CTEBOOL -> TRUE .)
    FALSE           reduce using rule 120 (CTEBOOL -> TRUE .)
    RPARENTHESIS    reduce using rule 120 (CTEBOOL -> TRUE .)
    SEMICOLON       reduce using rule 120 (CTEBOOL -> TRUE .)
    LESS            reduce using rule 120 (CTEBOOL -> TRUE .)
    GREATER         reduce using rule 120 (CTEBOOL -> TRUE .)
    LESSEQUAL       reduce using rule 120 (CTEBOOL -> TRUE .)
    GREATEREQUAL    reduce using rule 120 (CTEBOOL -> TRUE .)
    NOTEQUAL        reduce using rule 120 (CTEBOOL -> TRUE .)
    EQUAL           reduce using rule 120 (CTEBOOL -> TRUE .)


state 83

    (108) factor_var -> varcte . nodo1
    (110) nodo1 -> .

    MULTIPLICATION  reduce using rule 110 (nodo1 -> .)
    DIVISION        reduce using rule 110 (nodo1 -> .)
    ADDITION        reduce using rule 110 (nodo1 -> .)
    SUBTRACTION     reduce using rule 110 (nodo1 -> .)
    SEMICOLON       reduce using rule 110 (nodo1 -> .)
    LESS            reduce using rule 110 (nodo1 -> .)
    GREATER         reduce using rule 110 (nodo1 -> .)
    LESSEQUAL       reduce using rule 110 (nodo1 -> .)
    GREATEREQUAL    reduce using rule 110 (nodo1 -> .)
    NOTEQUAL        reduce using rule 110 (nodo1 -> .)
    EQUAL           reduce using rule 110 (nodo1 -> .)
    AND             reduce using rule 110 (nodo1 -> .)
    OR              reduce using rule 110 (nodo1 -> .)
    LPARENTHESIS    reduce using rule 110 (nodo1 -> .)
    ID              reduce using rule 110 (nodo1 -> .)
    CTEINT          reduce using rule 110 (nodo1 -> .)
    CTEFLOAT        reduce using rule 110 (nodo1 -> .)
    CTECHAR         reduce using rule 110 (nodo1 -> .)
    TRUE            reduce using rule 110 (nodo1 -> .)
    FALSE           reduce using rule 110 (nodo1 -> .)
    RPARENTHESIS    reduce using rule 110 (nodo1 -> .)

    nodo1                          shift and go to state 106

state 84

    (115) varcte -> CTEFLOAT . nodoCteF
    (123) nodoCteF -> .

    MULTIPLICATION  reduce using rule 123 (nodoCteF -> .)
    DIVISION        reduce using rule 123 (nodoCteF -> .)
    ADDITION        reduce using rule 123 (nodoCteF -> .)
    SUBTRACTION     reduce using rule 123 (nodoCteF -> .)
    SEMICOLON       reduce using rule 123 (nodoCteF -> .)
    LESS            reduce using rule 123 (nodoCteF -> .)
    GREATER         reduce using rule 123 (nodoCteF -> .)
    LESSEQUAL       reduce using rule 123 (nodoCteF -> .)
    GREATEREQUAL    reduce using rule 123 (nodoCteF -> .)
    NOTEQUAL        reduce using rule 123 (nodoCteF -> .)
    EQUAL           reduce using rule 123 (nodoCteF -> .)
    AND             reduce using rule 123 (nodoCteF -> .)
    OR              reduce using rule 123 (nodoCteF -> .)
    LPARENTHESIS    reduce using rule 123 (nodoCteF -> .)
    ID              reduce using rule 123 (nodoCteF -> .)
    CTEINT          reduce using rule 123 (nodoCteF -> .)
    CTEFLOAT        reduce using rule 123 (nodoCteF -> .)
    CTECHAR         reduce using rule 123 (nodoCteF -> .)
    TRUE            reduce using rule 123 (nodoCteF -> .)
    FALSE           reduce using rule 123 (nodoCteF -> .)
    RPARENTHESIS    reduce using rule 123 (nodoCteF -> .)

    nodoCteF                       shift and go to state 107

state 85

    (98) termino -> factor . nodo4 termino_loop
    (105) nodo4 -> .

    MULTIPLICATION  reduce using rule 105 (nodo4 -> .)
    DIVISION        reduce using rule 105 (nodo4 -> .)
    ADDITION        reduce using rule 105 (nodo4 -> .)
    SUBTRACTION     reduce using rule 105 (nodo4 -> .)
    SEMICOLON       reduce using rule 105 (nodo4 -> .)
    LESS            reduce using rule 105 (nodo4 -> .)
    GREATER         reduce using rule 105 (nodo4 -> .)
    LESSEQUAL       reduce using rule 105 (nodo4 -> .)
    GREATEREQUAL    reduce using rule 105 (nodo4 -> .)
    NOTEQUAL        reduce using rule 105 (nodo4 -> .)
    EQUAL           reduce using rule 105 (nodo4 -> .)
    AND             reduce using rule 105 (nodo4 -> .)
    OR              reduce using rule 105 (nodo4 -> .)
    LPARENTHESIS    reduce using rule 105 (nodo4 -> .)
    ID              reduce using rule 105 (nodo4 -> .)
    CTEINT          reduce using rule 105 (nodo4 -> .)
    CTEFLOAT        reduce using rule 105 (nodo4 -> .)
    CTECHAR         reduce using rule 105 (nodo4 -> .)
    TRUE            reduce using rule 105 (nodo4 -> .)
    FALSE           reduce using rule 105 (nodo4 -> .)
    RPARENTHESIS    reduce using rule 105 (nodo4 -> .)

    nodo4                          shift and go to state 108

state 86

    (107) factor -> factor_exp .

    MULTIPLICATION  reduce using rule 107 (factor -> factor_exp .)
    DIVISION        reduce using rule 107 (factor -> factor_exp .)
    ADDITION        reduce using rule 107 (factor -> factor_exp .)
    SUBTRACTION     reduce using rule 107 (factor -> factor_exp .)
    LESS            reduce using rule 107 (factor -> factor_exp .)
    GREATER         reduce using rule 107 (factor -> factor_exp .)
    LESSEQUAL       reduce using rule 107 (factor -> factor_exp .)
    GREATEREQUAL    reduce using rule 107 (factor -> factor_exp .)
    NOTEQUAL        reduce using rule 107 (factor -> factor_exp .)
    EQUAL           reduce using rule 107 (factor -> factor_exp .)
    AND             reduce using rule 107 (factor -> factor_exp .)
    OR              reduce using rule 107 (factor -> factor_exp .)
    LPARENTHESIS    reduce using rule 107 (factor -> factor_exp .)
    ID              reduce using rule 107 (factor -> factor_exp .)
    CTEINT          reduce using rule 107 (factor -> factor_exp .)
    CTEFLOAT        reduce using rule 107 (factor -> factor_exp .)
    CTECHAR         reduce using rule 107 (factor -> factor_exp .)
    TRUE            reduce using rule 107 (factor -> factor_exp .)
    FALSE           reduce using rule 107 (factor -> factor_exp .)
    RPARENTHESIS    reduce using rule 107 (factor -> factor_exp .)
    SEMICOLON       reduce using rule 107 (factor -> factor_exp .)


state 87

    (114) varcte -> CTEINT . nodoCteE
    (122) nodoCteE -> .

    MULTIPLICATION  reduce using rule 122 (nodoCteE -> .)
    DIVISION        reduce using rule 122 (nodoCteE -> .)
    ADDITION        reduce using rule 122 (nodoCteE -> .)
    SUBTRACTION     reduce using rule 122 (nodoCteE -> .)
    SEMICOLON       reduce using rule 122 (nodoCteE -> .)
    LESS            reduce using rule 122 (nodoCteE -> .)
    GREATER         reduce using rule 122 (nodoCteE -> .)
    LESSEQUAL       reduce using rule 122 (nodoCteE -> .)
    GREATEREQUAL    reduce using rule 122 (nodoCteE -> .)
    NOTEQUAL        reduce using rule 122 (nodoCteE -> .)
    EQUAL           reduce using rule 122 (nodoCteE -> .)
    AND             reduce using rule 122 (nodoCteE -> .)
    OR              reduce using rule 122 (nodoCteE -> .)
    LPARENTHESIS    reduce using rule 122 (nodoCteE -> .)
    ID              reduce using rule 122 (nodoCteE -> .)
    CTEINT          reduce using rule 122 (nodoCteE -> .)
    CTEFLOAT        reduce using rule 122 (nodoCteE -> .)
    CTECHAR         reduce using rule 122 (nodoCteE -> .)
    TRUE            reduce using rule 122 (nodoCteE -> .)
    FALSE           reduce using rule 122 (nodoCteE -> .)
    RPARENTHESIS    reduce using rule 122 (nodoCteE -> .)

    nodoCteE                       shift and go to state 109

state 88

    (109) factor_exp -> LPARENTHESIS . nodo6 expresion RPARENTHESIS nodo7
    (111) nodo6 -> .

    LPARENTHESIS    reduce using rule 111 (nodo6 -> .)
    ID              reduce using rule 111 (nodo6 -> .)
    CTEINT          reduce using rule 111 (nodo6 -> .)
    CTEFLOAT        reduce using rule 111 (nodo6 -> .)
    CTECHAR         reduce using rule 111 (nodo6 -> .)
    TRUE            reduce using rule 111 (nodo6 -> .)
    FALSE           reduce using rule 111 (nodo6 -> .)

    nodo6                          shift and go to state 110

state 89

    (113) varcte -> ID . varcte_arr
    (118) varcte_arr -> . LBRACKET RBRACKET
    (119) varcte_arr -> .

    LBRACKET        shift and go to state 111
    MULTIPLICATION  reduce using rule 119 (varcte_arr -> .)
    DIVISION        reduce using rule 119 (varcte_arr -> .)
    ADDITION        reduce using rule 119 (varcte_arr -> .)
    SUBTRACTION     reduce using rule 119 (varcte_arr -> .)
    SEMICOLON       reduce using rule 119 (varcte_arr -> .)
    LESS            reduce using rule 119 (varcte_arr -> .)
    GREATER         reduce using rule 119 (varcte_arr -> .)
    LESSEQUAL       reduce using rule 119 (varcte_arr -> .)
    GREATEREQUAL    reduce using rule 119 (varcte_arr -> .)
    NOTEQUAL        reduce using rule 119 (varcte_arr -> .)
    EQUAL           reduce using rule 119 (varcte_arr -> .)
    AND             reduce using rule 119 (varcte_arr -> .)
    OR              reduce using rule 119 (varcte_arr -> .)
    LPARENTHESIS    reduce using rule 119 (varcte_arr -> .)
    ID              reduce using rule 119 (varcte_arr -> .)
    CTEINT          reduce using rule 119 (varcte_arr -> .)
    CTEFLOAT        reduce using rule 119 (varcte_arr -> .)
    CTECHAR         reduce using rule 119 (varcte_arr -> .)
    TRUE            reduce using rule 119 (varcte_arr -> .)
    FALSE           reduce using rule 119 (varcte_arr -> .)
    RPARENTHESIS    reduce using rule 119 (varcte_arr -> .)

    varcte_arr                     shift and go to state 112

state 90

    (121) CTEBOOL -> FALSE .

    MULTIPLICATION  reduce using rule 121 (CTEBOOL -> FALSE .)
    DIVISION        reduce using rule 121 (CTEBOOL -> FALSE .)
    ADDITION        reduce using rule 121 (CTEBOOL -> FALSE .)
    SUBTRACTION     reduce using rule 121 (CTEBOOL -> FALSE .)
    AND             reduce using rule 121 (CTEBOOL -> FALSE .)
    OR              reduce using rule 121 (CTEBOOL -> FALSE .)
    LPARENTHESIS    reduce using rule 121 (CTEBOOL -> FALSE .)
    ID              reduce using rule 121 (CTEBOOL -> FALSE .)
    CTEINT          reduce using rule 121 (CTEBOOL -> FALSE .)
    CTEFLOAT        reduce using rule 121 (CTEBOOL -> FALSE .)
    CTECHAR         reduce using rule 121 (CTEBOOL -> FALSE .)
    TRUE            reduce using rule 121 (CTEBOOL -> FALSE .)
    FALSE           reduce using rule 121 (CTEBOOL -> FALSE .)
    RPARENTHESIS    reduce using rule 121 (CTEBOOL -> FALSE .)
    SEMICOLON       reduce using rule 121 (CTEBOOL -> FALSE .)
    LESS            reduce using rule 121 (CTEBOOL -> FALSE .)
    GREATER         reduce using rule 121 (CTEBOOL -> FALSE .)
    LESSEQUAL       reduce using rule 121 (CTEBOOL -> FALSE .)
    GREATEREQUAL    reduce using rule 121 (CTEBOOL -> FALSE .)
    NOTEQUAL        reduce using rule 121 (CTEBOOL -> FALSE .)
    EQUAL           reduce using rule 121 (CTEBOOL -> FALSE .)


state 91

    (116) varcte -> CTEBOOL . nodoCteB
    (124) nodoCteB -> .

    MULTIPLICATION  reduce using rule 124 (nodoCteB -> .)
    DIVISION        reduce using rule 124 (nodoCteB -> .)
    ADDITION        reduce using rule 124 (nodoCteB -> .)
    SUBTRACTION     reduce using rule 124 (nodoCteB -> .)
    SEMICOLON       reduce using rule 124 (nodoCteB -> .)
    LESS            reduce using rule 124 (nodoCteB -> .)
    GREATER         reduce using rule 124 (nodoCteB -> .)
    LESSEQUAL       reduce using rule 124 (nodoCteB -> .)
    GREATEREQUAL    reduce using rule 124 (nodoCteB -> .)
    NOTEQUAL        reduce using rule 124 (nodoCteB -> .)
    EQUAL           reduce using rule 124 (nodoCteB -> .)
    AND             reduce using rule 124 (nodoCteB -> .)
    OR              reduce using rule 124 (nodoCteB -> .)
    LPARENTHESIS    reduce using rule 124 (nodoCteB -> .)
    ID              reduce using rule 124 (nodoCteB -> .)
    CTEINT          reduce using rule 124 (nodoCteB -> .)
    CTEFLOAT        reduce using rule 124 (nodoCteB -> .)
    CTECHAR         reduce using rule 124 (nodoCteB -> .)
    TRUE            reduce using rule 124 (nodoCteB -> .)
    FALSE           reduce using rule 124 (nodoCteB -> .)
    RPARENTHESIS    reduce using rule 124 (nodoCteB -> .)

    nodoCteB                       shift and go to state 113

state 92

    (23) regreso -> RETURN exp . SEMICOLON

    SEMICOLON       shift and go to state 114


state 93

    (106) factor -> factor_var .

    MULTIPLICATION  reduce using rule 106 (factor -> factor_var .)
    DIVISION        reduce using rule 106 (factor -> factor_var .)
    ADDITION        reduce using rule 106 (factor -> factor_var .)
    SUBTRACTION     reduce using rule 106 (factor -> factor_var .)
    LESS            reduce using rule 106 (factor -> factor_var .)
    GREATER         reduce using rule 106 (factor -> factor_var .)
    LESSEQUAL       reduce using rule 106 (factor -> factor_var .)
    GREATEREQUAL    reduce using rule 106 (factor -> factor_var .)
    NOTEQUAL        reduce using rule 106 (factor -> factor_var .)
    EQUAL           reduce using rule 106 (factor -> factor_var .)
    AND             reduce using rule 106 (factor -> factor_var .)
    OR              reduce using rule 106 (factor -> factor_var .)
    LPARENTHESIS    reduce using rule 106 (factor -> factor_var .)
    ID              reduce using rule 106 (factor -> factor_var .)
    CTEINT          reduce using rule 106 (factor -> factor_var .)
    CTEFLOAT        reduce using rule 106 (factor -> factor_var .)
    CTECHAR         reduce using rule 106 (factor -> factor_var .)
    TRUE            reduce using rule 106 (factor -> factor_var .)
    FALSE           reduce using rule 106 (factor -> factor_var .)
    RPARENTHESIS    reduce using rule 106 (factor -> factor_var .)
    SEMICOLON       reduce using rule 106 (factor -> factor_var .)


state 94

    (90) exp -> termino . nodo5 exp_loop
    (97) nodo5 -> .

    ADDITION        reduce using rule 97 (nodo5 -> .)
    SUBTRACTION     reduce using rule 97 (nodo5 -> .)
    SEMICOLON       reduce using rule 97 (nodo5 -> .)
    LESS            reduce using rule 97 (nodo5 -> .)
    GREATER         reduce using rule 97 (nodo5 -> .)
    LESSEQUAL       reduce using rule 97 (nodo5 -> .)
    GREATEREQUAL    reduce using rule 97 (nodo5 -> .)
    NOTEQUAL        reduce using rule 97 (nodo5 -> .)
    EQUAL           reduce using rule 97 (nodo5 -> .)
    AND             reduce using rule 97 (nodo5 -> .)
    OR              reduce using rule 97 (nodo5 -> .)
    LPARENTHESIS    reduce using rule 97 (nodo5 -> .)
    ID              reduce using rule 97 (nodo5 -> .)
    CTEINT          reduce using rule 97 (nodo5 -> .)
    CTEFLOAT        reduce using rule 97 (nodo5 -> .)
    CTECHAR         reduce using rule 97 (nodo5 -> .)
    TRUE            reduce using rule 97 (nodo5 -> .)
    FALSE           reduce using rule 97 (nodo5 -> .)
    RPARENTHESIS    reduce using rule 97 (nodo5 -> .)

    nodo5                          shift and go to state 115

state 95

    (49) ciclo -> WHILE LPARENTHESIS . nodo16 expresion RPARENTHESIS nodo13 bloque nodo17
    (50) nodo16 -> .

    LPARENTHESIS    reduce using rule 50 (nodo16 -> .)
    ID              reduce using rule 50 (nodo16 -> .)
    CTEINT          reduce using rule 50 (nodo16 -> .)
    CTEFLOAT        reduce using rule 50 (nodo16 -> .)
    CTECHAR         reduce using rule 50 (nodo16 -> .)
    TRUE            reduce using rule 50 (nodo16 -> .)
    FALSE           reduce using rule 50 (nodo16 -> .)

    nodo16                         shift and go to state 116

state 96

    (37) escritura -> PRINT LPARENTHESIS . escritura_type RPARENTHESIS SEMICOLON
    (38) escritura_type -> . expresion
    (39) escritura_type -> . QUOTE CTECHAR QUOTE
    (58) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    QUOTE           shift and go to state 117
    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    escritura_type                 shift and go to state 118
    nuevaexp                       shift and go to state 119
    expresion                      shift and go to state 120
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 97

    (9) bloque_est_loop -> estatuto bloque_est_loop .

    RCURLY          reduce using rule 9 (bloque_est_loop -> estatuto bloque_est_loop .)


state 98

    (82) asignacion -> ID asignacion_option .

    ID              reduce using rule 82 (asignacion -> ID asignacion_option .)
    IF              reduce using rule 82 (asignacion -> ID asignacion_option .)
    PRINT           reduce using rule 82 (asignacion -> ID asignacion_option .)
    RETURN          reduce using rule 82 (asignacion -> ID asignacion_option .)
    WHILE           reduce using rule 82 (asignacion -> ID asignacion_option .)
    RCURLY          reduce using rule 82 (asignacion -> ID asignacion_option .)


state 99

    (83) asignacion_option -> ASSIGN . expresion nodo8 SEMICOLON
    (58) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 119
    expresion                      shift and go to state 122
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 100

    (84) asignacion_option -> LBRACKET . CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    CTEINT          shift and go to state 123


state 101

    (52) condicion -> IF LPARENTHESIS . expresion RPARENTHESIS nodo13 bloque condicion_option nodo15
    (58) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 119
    expresion                      shift and go to state 124
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 102

    (8) bloque -> LCURLY bloque_est_loop RCURLY .

    END             reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ID              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    IF              reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    PRINT           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RETURN          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    WHILE           reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    RCURLY          reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    ELSE            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    INTTYPE         reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    FLOATTYPE       reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    CHARTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    BOOLTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    VOIDTYPE        reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)
    MAIN            reduce using rule 8 (bloque -> LCURLY bloque_est_loop RCURLY .)


state 103

    (44) argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .

    RPARENTHESIS    reduce using rule 44 (argumentos -> ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop .)


state 104

    (45) argumentos_loop -> COMA . argumentos
    (44) argumentos -> . ID addDirVarGlobalesFunc COLON tipo addTypeFunc argumentos_loop

    ID              shift and go to state 53

    argumentos                     shift and go to state 125

state 105

    (117) varcte -> CTECHAR nodoCteC .

    MULTIPLICATION  reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    DIVISION        reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    ADDITION        reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    SUBTRACTION     reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    SEMICOLON       reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    LESS            reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    GREATER         reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    LESSEQUAL       reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    GREATEREQUAL    reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    NOTEQUAL        reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    EQUAL           reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    AND             reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    OR              reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    LPARENTHESIS    reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    ID              reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    CTEINT          reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    CTEFLOAT        reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    CTECHAR         reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    TRUE            reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    FALSE           reduce using rule 117 (varcte -> CTECHAR nodoCteC .)
    RPARENTHESIS    reduce using rule 117 (varcte -> CTECHAR nodoCteC .)


state 106

    (108) factor_var -> varcte nodo1 .

    MULTIPLICATION  reduce using rule 108 (factor_var -> varcte nodo1 .)
    DIVISION        reduce using rule 108 (factor_var -> varcte nodo1 .)
    ADDITION        reduce using rule 108 (factor_var -> varcte nodo1 .)
    SUBTRACTION     reduce using rule 108 (factor_var -> varcte nodo1 .)
    LESS            reduce using rule 108 (factor_var -> varcte nodo1 .)
    GREATER         reduce using rule 108 (factor_var -> varcte nodo1 .)
    LESSEQUAL       reduce using rule 108 (factor_var -> varcte nodo1 .)
    GREATEREQUAL    reduce using rule 108 (factor_var -> varcte nodo1 .)
    NOTEQUAL        reduce using rule 108 (factor_var -> varcte nodo1 .)
    EQUAL           reduce using rule 108 (factor_var -> varcte nodo1 .)
    LPARENTHESIS    reduce using rule 108 (factor_var -> varcte nodo1 .)
    ID              reduce using rule 108 (factor_var -> varcte nodo1 .)
    CTEINT          reduce using rule 108 (factor_var -> varcte nodo1 .)
    CTEFLOAT        reduce using rule 108 (factor_var -> varcte nodo1 .)
    CTECHAR         reduce using rule 108 (factor_var -> varcte nodo1 .)
    TRUE            reduce using rule 108 (factor_var -> varcte nodo1 .)
    FALSE           reduce using rule 108 (factor_var -> varcte nodo1 .)
    RPARENTHESIS    reduce using rule 108 (factor_var -> varcte nodo1 .)
    SEMICOLON       reduce using rule 108 (factor_var -> varcte nodo1 .)
    AND             reduce using rule 108 (factor_var -> varcte nodo1 .)
    OR              reduce using rule 108 (factor_var -> varcte nodo1 .)


state 107

    (115) varcte -> CTEFLOAT nodoCteF .

    MULTIPLICATION  reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    DIVISION        reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    ADDITION        reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    SUBTRACTION     reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    SEMICOLON       reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    LESS            reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    GREATER         reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    LESSEQUAL       reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    GREATEREQUAL    reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    NOTEQUAL        reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    EQUAL           reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    AND             reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    OR              reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    LPARENTHESIS    reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    ID              reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    CTEINT          reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    CTEFLOAT        reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    CTECHAR         reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    TRUE            reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    FALSE           reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)
    RPARENTHESIS    reduce using rule 115 (varcte -> CTEFLOAT nodoCteF .)


state 108

    (98) termino -> factor nodo4 . termino_loop
    (99) termino_loop -> . termino_type_loop
    (100) termino_loop -> .
    (101) termino_type_loop -> . MULTIPLICATION nodo2_mult termino
    (102) termino_type_loop -> . DIVISION nodo2_div termino

    ADDITION        reduce using rule 100 (termino_loop -> .)
    SUBTRACTION     reduce using rule 100 (termino_loop -> .)
    SEMICOLON       reduce using rule 100 (termino_loop -> .)
    LESS            reduce using rule 100 (termino_loop -> .)
    GREATER         reduce using rule 100 (termino_loop -> .)
    LESSEQUAL       reduce using rule 100 (termino_loop -> .)
    GREATEREQUAL    reduce using rule 100 (termino_loop -> .)
    NOTEQUAL        reduce using rule 100 (termino_loop -> .)
    EQUAL           reduce using rule 100 (termino_loop -> .)
    AND             reduce using rule 100 (termino_loop -> .)
    OR              reduce using rule 100 (termino_loop -> .)
    LPARENTHESIS    reduce using rule 100 (termino_loop -> .)
    ID              reduce using rule 100 (termino_loop -> .)
    CTEINT          reduce using rule 100 (termino_loop -> .)
    CTEFLOAT        reduce using rule 100 (termino_loop -> .)
    CTECHAR         reduce using rule 100 (termino_loop -> .)
    TRUE            reduce using rule 100 (termino_loop -> .)
    FALSE           reduce using rule 100 (termino_loop -> .)
    RPARENTHESIS    reduce using rule 100 (termino_loop -> .)
    MULTIPLICATION  shift and go to state 128
    DIVISION        shift and go to state 126

    termino_type_loop              shift and go to state 127
    termino_loop                   shift and go to state 129

state 109

    (114) varcte -> CTEINT nodoCteE .

    MULTIPLICATION  reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    DIVISION        reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    ADDITION        reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    SUBTRACTION     reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    SEMICOLON       reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    LESS            reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    GREATER         reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    LESSEQUAL       reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    GREATEREQUAL    reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    NOTEQUAL        reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    EQUAL           reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    AND             reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    OR              reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    LPARENTHESIS    reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    ID              reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    CTEINT          reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    CTEFLOAT        reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    CTECHAR         reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    TRUE            reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    FALSE           reduce using rule 114 (varcte -> CTEINT nodoCteE .)
    RPARENTHESIS    reduce using rule 114 (varcte -> CTEINT nodoCteE .)


state 110

    (109) factor_exp -> LPARENTHESIS nodo6 . expresion RPARENTHESIS nodo7
    (58) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 119
    expresion                      shift and go to state 130
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 111

    (118) varcte_arr -> LBRACKET . RBRACKET

    RBRACKET        shift and go to state 131


state 112

    (113) varcte -> ID varcte_arr .

    MULTIPLICATION  reduce using rule 113 (varcte -> ID varcte_arr .)
    DIVISION        reduce using rule 113 (varcte -> ID varcte_arr .)
    ADDITION        reduce using rule 113 (varcte -> ID varcte_arr .)
    SUBTRACTION     reduce using rule 113 (varcte -> ID varcte_arr .)
    SEMICOLON       reduce using rule 113 (varcte -> ID varcte_arr .)
    LESS            reduce using rule 113 (varcte -> ID varcte_arr .)
    GREATER         reduce using rule 113 (varcte -> ID varcte_arr .)
    LESSEQUAL       reduce using rule 113 (varcte -> ID varcte_arr .)
    GREATEREQUAL    reduce using rule 113 (varcte -> ID varcte_arr .)
    NOTEQUAL        reduce using rule 113 (varcte -> ID varcte_arr .)
    EQUAL           reduce using rule 113 (varcte -> ID varcte_arr .)
    AND             reduce using rule 113 (varcte -> ID varcte_arr .)
    OR              reduce using rule 113 (varcte -> ID varcte_arr .)
    LPARENTHESIS    reduce using rule 113 (varcte -> ID varcte_arr .)
    ID              reduce using rule 113 (varcte -> ID varcte_arr .)
    CTEINT          reduce using rule 113 (varcte -> ID varcte_arr .)
    CTEFLOAT        reduce using rule 113 (varcte -> ID varcte_arr .)
    CTECHAR         reduce using rule 113 (varcte -> ID varcte_arr .)
    TRUE            reduce using rule 113 (varcte -> ID varcte_arr .)
    FALSE           reduce using rule 113 (varcte -> ID varcte_arr .)
    RPARENTHESIS    reduce using rule 113 (varcte -> ID varcte_arr .)


state 113

    (116) varcte -> CTEBOOL nodoCteB .

    MULTIPLICATION  reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    DIVISION        reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    ADDITION        reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    SUBTRACTION     reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    SEMICOLON       reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    LESS            reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    GREATER         reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    LESSEQUAL       reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    GREATEREQUAL    reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    NOTEQUAL        reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    EQUAL           reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    AND             reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    OR              reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    LPARENTHESIS    reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    ID              reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    CTEINT          reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    CTEFLOAT        reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    CTECHAR         reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    TRUE            reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    FALSE           reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)
    RPARENTHESIS    reduce using rule 116 (varcte -> CTEBOOL nodoCteB .)


state 114

    (23) regreso -> RETURN exp SEMICOLON .

    ID              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    IF              reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    PRINT           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RETURN          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    WHILE           reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)
    RCURLY          reduce using rule 23 (regreso -> RETURN exp SEMICOLON .)


state 115

    (90) exp -> termino nodo5 . exp_loop
    (91) exp_loop -> . exp_type_loop
    (92) exp_loop -> .
    (93) exp_type_loop -> . ADDITION nodo3_suma exp
    (94) exp_type_loop -> . SUBTRACTION nodo3_resta exp

    SEMICOLON       reduce using rule 92 (exp_loop -> .)
    LESS            reduce using rule 92 (exp_loop -> .)
    GREATER         reduce using rule 92 (exp_loop -> .)
    LESSEQUAL       reduce using rule 92 (exp_loop -> .)
    GREATEREQUAL    reduce using rule 92 (exp_loop -> .)
    NOTEQUAL        reduce using rule 92 (exp_loop -> .)
    EQUAL           reduce using rule 92 (exp_loop -> .)
    AND             reduce using rule 92 (exp_loop -> .)
    OR              reduce using rule 92 (exp_loop -> .)
    LPARENTHESIS    reduce using rule 92 (exp_loop -> .)
    ID              reduce using rule 92 (exp_loop -> .)
    CTEINT          reduce using rule 92 (exp_loop -> .)
    CTEFLOAT        reduce using rule 92 (exp_loop -> .)
    CTECHAR         reduce using rule 92 (exp_loop -> .)
    TRUE            reduce using rule 92 (exp_loop -> .)
    FALSE           reduce using rule 92 (exp_loop -> .)
    RPARENTHESIS    reduce using rule 92 (exp_loop -> .)
    ADDITION        shift and go to state 132
    SUBTRACTION     shift and go to state 135

    exp_loop                       shift and go to state 133
    exp_type_loop                  shift and go to state 134

state 116

    (49) ciclo -> WHILE LPARENTHESIS nodo16 . expresion RPARENTHESIS nodo13 bloque nodo17
    (58) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 119
    expresion                      shift and go to state 136
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 117

    (39) escritura_type -> QUOTE . CTECHAR QUOTE

    CTECHAR         shift and go to state 137


state 118

    (37) escritura -> PRINT LPARENTHESIS escritura_type . RPARENTHESIS SEMICOLON

    RPARENTHESIS    shift and go to state 138


state 119

    (58) expresion -> nuevaexp . expresion_option nodo11 expresion_loop
    (59) expresion_option -> . AND nodo12_and nuevaexp
    (60) expresion_option -> . OR nodo12_or nuevaexp
    (61) expresion_option -> .

    AND             shift and go to state 139
    OR              shift and go to state 141
    LPARENTHESIS    reduce using rule 61 (expresion_option -> .)
    ID              reduce using rule 61 (expresion_option -> .)
    CTEINT          reduce using rule 61 (expresion_option -> .)
    CTEFLOAT        reduce using rule 61 (expresion_option -> .)
    CTECHAR         reduce using rule 61 (expresion_option -> .)
    TRUE            reduce using rule 61 (expresion_option -> .)
    FALSE           reduce using rule 61 (expresion_option -> .)
    RPARENTHESIS    reduce using rule 61 (expresion_option -> .)
    SEMICOLON       reduce using rule 61 (expresion_option -> .)

    expresion_option               shift and go to state 140

state 120

    (38) escritura_type -> expresion .

    RPARENTHESIS    reduce using rule 38 (escritura_type -> expresion .)


state 121

    (67) nuevaexp -> exp . nuevaexp_type nodo10
    (68) nuevaexp_type -> . LESS nodo9_menor exp
    (69) nuevaexp_type -> . GREATER nodo9_mayor exp
    (70) nuevaexp_type -> . LESSEQUAL nodo9_menorig exp
    (71) nuevaexp_type -> . GREATEREQUAL nodo9_mayorig exp
    (72) nuevaexp_type -> . NOTEQUAL nodo9_dif exp
    (73) nuevaexp_type -> . EQUAL nodo9_igual exp
    (74) nuevaexp_type -> .

    LESS            shift and go to state 144
    GREATER         shift and go to state 143
    LESSEQUAL       shift and go to state 148
    GREATEREQUAL    shift and go to state 142
    NOTEQUAL        shift and go to state 146
    EQUAL           shift and go to state 145
    AND             reduce using rule 74 (nuevaexp_type -> .)
    OR              reduce using rule 74 (nuevaexp_type -> .)
    LPARENTHESIS    reduce using rule 74 (nuevaexp_type -> .)
    ID              reduce using rule 74 (nuevaexp_type -> .)
    CTEINT          reduce using rule 74 (nuevaexp_type -> .)
    CTEFLOAT        reduce using rule 74 (nuevaexp_type -> .)
    CTECHAR         reduce using rule 74 (nuevaexp_type -> .)
    TRUE            reduce using rule 74 (nuevaexp_type -> .)
    FALSE           reduce using rule 74 (nuevaexp_type -> .)
    RPARENTHESIS    reduce using rule 74 (nuevaexp_type -> .)
    SEMICOLON       reduce using rule 74 (nuevaexp_type -> .)

    nuevaexp_type                  shift and go to state 147

state 122

    (83) asignacion_option -> ASSIGN expresion . nodo8 SEMICOLON
    (89) nodo8 -> .

    SEMICOLON       reduce using rule 89 (nodo8 -> .)

    nodo8                          shift and go to state 149

state 123

    (84) asignacion_option -> LBRACKET CTEINT . RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    RBRACKET        shift and go to state 150


state 124

    (52) condicion -> IF LPARENTHESIS expresion . RPARENTHESIS nodo13 bloque condicion_option nodo15

    RPARENTHESIS    shift and go to state 151


state 125

    (45) argumentos_loop -> COMA argumentos .

    RPARENTHESIS    reduce using rule 45 (argumentos_loop -> COMA argumentos .)


state 126

    (102) termino_type_loop -> DIVISION . nodo2_div termino
    (104) nodo2_div -> .

    LPARENTHESIS    reduce using rule 104 (nodo2_div -> .)
    ID              reduce using rule 104 (nodo2_div -> .)
    CTEINT          reduce using rule 104 (nodo2_div -> .)
    CTEFLOAT        reduce using rule 104 (nodo2_div -> .)
    CTECHAR         reduce using rule 104 (nodo2_div -> .)
    TRUE            reduce using rule 104 (nodo2_div -> .)
    FALSE           reduce using rule 104 (nodo2_div -> .)

    nodo2_div                      shift and go to state 152

state 127

    (99) termino_loop -> termino_type_loop .

    ADDITION        reduce using rule 99 (termino_loop -> termino_type_loop .)
    SUBTRACTION     reduce using rule 99 (termino_loop -> termino_type_loop .)
    SEMICOLON       reduce using rule 99 (termino_loop -> termino_type_loop .)
    LESS            reduce using rule 99 (termino_loop -> termino_type_loop .)
    GREATER         reduce using rule 99 (termino_loop -> termino_type_loop .)
    LESSEQUAL       reduce using rule 99 (termino_loop -> termino_type_loop .)
    GREATEREQUAL    reduce using rule 99 (termino_loop -> termino_type_loop .)
    NOTEQUAL        reduce using rule 99 (termino_loop -> termino_type_loop .)
    EQUAL           reduce using rule 99 (termino_loop -> termino_type_loop .)
    AND             reduce using rule 99 (termino_loop -> termino_type_loop .)
    OR              reduce using rule 99 (termino_loop -> termino_type_loop .)
    LPARENTHESIS    reduce using rule 99 (termino_loop -> termino_type_loop .)
    ID              reduce using rule 99 (termino_loop -> termino_type_loop .)
    CTEINT          reduce using rule 99 (termino_loop -> termino_type_loop .)
    CTEFLOAT        reduce using rule 99 (termino_loop -> termino_type_loop .)
    CTECHAR         reduce using rule 99 (termino_loop -> termino_type_loop .)
    TRUE            reduce using rule 99 (termino_loop -> termino_type_loop .)
    FALSE           reduce using rule 99 (termino_loop -> termino_type_loop .)
    RPARENTHESIS    reduce using rule 99 (termino_loop -> termino_type_loop .)


state 128

    (101) termino_type_loop -> MULTIPLICATION . nodo2_mult termino
    (103) nodo2_mult -> .

    LPARENTHESIS    reduce using rule 103 (nodo2_mult -> .)
    ID              reduce using rule 103 (nodo2_mult -> .)
    CTEINT          reduce using rule 103 (nodo2_mult -> .)
    CTEFLOAT        reduce using rule 103 (nodo2_mult -> .)
    CTECHAR         reduce using rule 103 (nodo2_mult -> .)
    TRUE            reduce using rule 103 (nodo2_mult -> .)
    FALSE           reduce using rule 103 (nodo2_mult -> .)

    nodo2_mult                     shift and go to state 153

state 129

    (98) termino -> factor nodo4 termino_loop .

    ADDITION        reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    SUBTRACTION     reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    SEMICOLON       reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    LESS            reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    GREATER         reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    LESSEQUAL       reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    GREATEREQUAL    reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    NOTEQUAL        reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    EQUAL           reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    AND             reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    OR              reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    LPARENTHESIS    reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    ID              reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    CTEINT          reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    CTEFLOAT        reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    CTECHAR         reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    TRUE            reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    FALSE           reduce using rule 98 (termino -> factor nodo4 termino_loop .)
    RPARENTHESIS    reduce using rule 98 (termino -> factor nodo4 termino_loop .)


state 130

    (109) factor_exp -> LPARENTHESIS nodo6 expresion . RPARENTHESIS nodo7

    RPARENTHESIS    shift and go to state 154


state 131

    (118) varcte_arr -> LBRACKET RBRACKET .

    MULTIPLICATION  reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    DIVISION        reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    ADDITION        reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    SUBTRACTION     reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    LESS            reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    LESSEQUAL       reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    GREATEREQUAL    reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    AND             reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    OR              reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    LPARENTHESIS    reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    ID              reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    CTEINT          reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    CTEFLOAT        reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    CTECHAR         reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    TRUE            reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    FALSE           reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)
    RPARENTHESIS    reduce using rule 118 (varcte_arr -> LBRACKET RBRACKET .)


state 132

    (93) exp_type_loop -> ADDITION . nodo3_suma exp
    (95) nodo3_suma -> .

    LPARENTHESIS    reduce using rule 95 (nodo3_suma -> .)
    ID              reduce using rule 95 (nodo3_suma -> .)
    CTEINT          reduce using rule 95 (nodo3_suma -> .)
    CTEFLOAT        reduce using rule 95 (nodo3_suma -> .)
    CTECHAR         reduce using rule 95 (nodo3_suma -> .)
    TRUE            reduce using rule 95 (nodo3_suma -> .)
    FALSE           reduce using rule 95 (nodo3_suma -> .)

    nodo3_suma                     shift and go to state 155

state 133

    (90) exp -> termino nodo5 exp_loop .

    SEMICOLON       reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    LESS            reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    GREATER         reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    LESSEQUAL       reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    GREATEREQUAL    reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    NOTEQUAL        reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    EQUAL           reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    AND             reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    OR              reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    LPARENTHESIS    reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    ID              reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    CTEINT          reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    CTEFLOAT        reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    CTECHAR         reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    TRUE            reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    FALSE           reduce using rule 90 (exp -> termino nodo5 exp_loop .)
    RPARENTHESIS    reduce using rule 90 (exp -> termino nodo5 exp_loop .)


state 134

    (91) exp_loop -> exp_type_loop .

    SEMICOLON       reduce using rule 91 (exp_loop -> exp_type_loop .)
    LESS            reduce using rule 91 (exp_loop -> exp_type_loop .)
    GREATER         reduce using rule 91 (exp_loop -> exp_type_loop .)
    LESSEQUAL       reduce using rule 91 (exp_loop -> exp_type_loop .)
    GREATEREQUAL    reduce using rule 91 (exp_loop -> exp_type_loop .)
    NOTEQUAL        reduce using rule 91 (exp_loop -> exp_type_loop .)
    EQUAL           reduce using rule 91 (exp_loop -> exp_type_loop .)
    AND             reduce using rule 91 (exp_loop -> exp_type_loop .)
    OR              reduce using rule 91 (exp_loop -> exp_type_loop .)
    LPARENTHESIS    reduce using rule 91 (exp_loop -> exp_type_loop .)
    ID              reduce using rule 91 (exp_loop -> exp_type_loop .)
    CTEINT          reduce using rule 91 (exp_loop -> exp_type_loop .)
    CTEFLOAT        reduce using rule 91 (exp_loop -> exp_type_loop .)
    CTECHAR         reduce using rule 91 (exp_loop -> exp_type_loop .)
    TRUE            reduce using rule 91 (exp_loop -> exp_type_loop .)
    FALSE           reduce using rule 91 (exp_loop -> exp_type_loop .)
    RPARENTHESIS    reduce using rule 91 (exp_loop -> exp_type_loop .)


state 135

    (94) exp_type_loop -> SUBTRACTION . nodo3_resta exp
    (96) nodo3_resta -> .

    LPARENTHESIS    reduce using rule 96 (nodo3_resta -> .)
    ID              reduce using rule 96 (nodo3_resta -> .)
    CTEINT          reduce using rule 96 (nodo3_resta -> .)
    CTEFLOAT        reduce using rule 96 (nodo3_resta -> .)
    CTECHAR         reduce using rule 96 (nodo3_resta -> .)
    TRUE            reduce using rule 96 (nodo3_resta -> .)
    FALSE           reduce using rule 96 (nodo3_resta -> .)

    nodo3_resta                    shift and go to state 156

state 136

    (49) ciclo -> WHILE LPARENTHESIS nodo16 expresion . RPARENTHESIS nodo13 bloque nodo17

    RPARENTHESIS    shift and go to state 157


state 137

    (39) escritura_type -> QUOTE CTECHAR . QUOTE

    QUOTE           shift and go to state 158


state 138

    (37) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 159


state 139

    (59) expresion_option -> AND . nodo12_and nuevaexp
    (64) nodo12_and -> .

    LPARENTHESIS    reduce using rule 64 (nodo12_and -> .)
    ID              reduce using rule 64 (nodo12_and -> .)
    CTEINT          reduce using rule 64 (nodo12_and -> .)
    CTEFLOAT        reduce using rule 64 (nodo12_and -> .)
    CTECHAR         reduce using rule 64 (nodo12_and -> .)
    TRUE            reduce using rule 64 (nodo12_and -> .)
    FALSE           reduce using rule 64 (nodo12_and -> .)

    nodo12_and                     shift and go to state 160

state 140

    (58) expresion -> nuevaexp expresion_option . nodo11 expresion_loop
    (66) nodo11 -> .

    LPARENTHESIS    reduce using rule 66 (nodo11 -> .)
    ID              reduce using rule 66 (nodo11 -> .)
    CTEINT          reduce using rule 66 (nodo11 -> .)
    CTEFLOAT        reduce using rule 66 (nodo11 -> .)
    CTECHAR         reduce using rule 66 (nodo11 -> .)
    TRUE            reduce using rule 66 (nodo11 -> .)
    FALSE           reduce using rule 66 (nodo11 -> .)
    RPARENTHESIS    reduce using rule 66 (nodo11 -> .)
    SEMICOLON       reduce using rule 66 (nodo11 -> .)

    nodo11                         shift and go to state 161

state 141

    (60) expresion_option -> OR . nodo12_or nuevaexp
    (65) nodo12_or -> .

    LPARENTHESIS    reduce using rule 65 (nodo12_or -> .)
    ID              reduce using rule 65 (nodo12_or -> .)
    CTEINT          reduce using rule 65 (nodo12_or -> .)
    CTEFLOAT        reduce using rule 65 (nodo12_or -> .)
    CTECHAR         reduce using rule 65 (nodo12_or -> .)
    TRUE            reduce using rule 65 (nodo12_or -> .)
    FALSE           reduce using rule 65 (nodo12_or -> .)

    nodo12_or                      shift and go to state 162

state 142

    (71) nuevaexp_type -> GREATEREQUAL . nodo9_mayorig exp
    (79) nodo9_mayorig -> .

    LPARENTHESIS    reduce using rule 79 (nodo9_mayorig -> .)
    ID              reduce using rule 79 (nodo9_mayorig -> .)
    CTEINT          reduce using rule 79 (nodo9_mayorig -> .)
    CTEFLOAT        reduce using rule 79 (nodo9_mayorig -> .)
    CTECHAR         reduce using rule 79 (nodo9_mayorig -> .)
    TRUE            reduce using rule 79 (nodo9_mayorig -> .)
    FALSE           reduce using rule 79 (nodo9_mayorig -> .)

    nodo9_mayorig                  shift and go to state 163

state 143

    (69) nuevaexp_type -> GREATER . nodo9_mayor exp
    (77) nodo9_mayor -> .

    LPARENTHESIS    reduce using rule 77 (nodo9_mayor -> .)
    ID              reduce using rule 77 (nodo9_mayor -> .)
    CTEINT          reduce using rule 77 (nodo9_mayor -> .)
    CTEFLOAT        reduce using rule 77 (nodo9_mayor -> .)
    CTECHAR         reduce using rule 77 (nodo9_mayor -> .)
    TRUE            reduce using rule 77 (nodo9_mayor -> .)
    FALSE           reduce using rule 77 (nodo9_mayor -> .)

    nodo9_mayor                    shift and go to state 164

state 144

    (68) nuevaexp_type -> LESS . nodo9_menor exp
    (76) nodo9_menor -> .

    LPARENTHESIS    reduce using rule 76 (nodo9_menor -> .)
    ID              reduce using rule 76 (nodo9_menor -> .)
    CTEINT          reduce using rule 76 (nodo9_menor -> .)
    CTEFLOAT        reduce using rule 76 (nodo9_menor -> .)
    CTECHAR         reduce using rule 76 (nodo9_menor -> .)
    TRUE            reduce using rule 76 (nodo9_menor -> .)
    FALSE           reduce using rule 76 (nodo9_menor -> .)

    nodo9_menor                    shift and go to state 165

state 145

    (73) nuevaexp_type -> EQUAL . nodo9_igual exp
    (81) nodo9_igual -> .

    LPARENTHESIS    reduce using rule 81 (nodo9_igual -> .)
    ID              reduce using rule 81 (nodo9_igual -> .)
    CTEINT          reduce using rule 81 (nodo9_igual -> .)
    CTEFLOAT        reduce using rule 81 (nodo9_igual -> .)
    CTECHAR         reduce using rule 81 (nodo9_igual -> .)
    TRUE            reduce using rule 81 (nodo9_igual -> .)
    FALSE           reduce using rule 81 (nodo9_igual -> .)

    nodo9_igual                    shift and go to state 166

state 146

    (72) nuevaexp_type -> NOTEQUAL . nodo9_dif exp
    (80) nodo9_dif -> .

    LPARENTHESIS    reduce using rule 80 (nodo9_dif -> .)
    ID              reduce using rule 80 (nodo9_dif -> .)
    CTEINT          reduce using rule 80 (nodo9_dif -> .)
    CTEFLOAT        reduce using rule 80 (nodo9_dif -> .)
    CTECHAR         reduce using rule 80 (nodo9_dif -> .)
    TRUE            reduce using rule 80 (nodo9_dif -> .)
    FALSE           reduce using rule 80 (nodo9_dif -> .)

    nodo9_dif                      shift and go to state 167

state 147

    (67) nuevaexp -> exp nuevaexp_type . nodo10
    (75) nodo10 -> .

    AND             reduce using rule 75 (nodo10 -> .)
    OR              reduce using rule 75 (nodo10 -> .)
    LPARENTHESIS    reduce using rule 75 (nodo10 -> .)
    ID              reduce using rule 75 (nodo10 -> .)
    CTEINT          reduce using rule 75 (nodo10 -> .)
    CTEFLOAT        reduce using rule 75 (nodo10 -> .)
    CTECHAR         reduce using rule 75 (nodo10 -> .)
    TRUE            reduce using rule 75 (nodo10 -> .)
    FALSE           reduce using rule 75 (nodo10 -> .)
    RPARENTHESIS    reduce using rule 75 (nodo10 -> .)
    SEMICOLON       reduce using rule 75 (nodo10 -> .)

    nodo10                         shift and go to state 168

state 148

    (70) nuevaexp_type -> LESSEQUAL . nodo9_menorig exp
    (78) nodo9_menorig -> .

    LPARENTHESIS    reduce using rule 78 (nodo9_menorig -> .)
    ID              reduce using rule 78 (nodo9_menorig -> .)
    CTEINT          reduce using rule 78 (nodo9_menorig -> .)
    CTEFLOAT        reduce using rule 78 (nodo9_menorig -> .)
    CTECHAR         reduce using rule 78 (nodo9_menorig -> .)
    TRUE            reduce using rule 78 (nodo9_menorig -> .)
    FALSE           reduce using rule 78 (nodo9_menorig -> .)

    nodo9_menorig                  shift and go to state 169

state 149

    (83) asignacion_option -> ASSIGN expresion nodo8 . SEMICOLON

    SEMICOLON       shift and go to state 170


state 150

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET . ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON

    ASSIGN          shift and go to state 171


state 151

    (52) condicion -> IF LPARENTHESIS expresion RPARENTHESIS . nodo13 bloque condicion_option nodo15
    (57) nodo13 -> .

    LCURLY          reduce using rule 57 (nodo13 -> .)

    nodo13                         shift and go to state 172

state 152

    (102) termino_type_loop -> DIVISION nodo2_div . termino
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 173
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 153

    (101) termino_type_loop -> MULTIPLICATION nodo2_mult . termino
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 174
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 154

    (109) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS . nodo7
    (112) nodo7 -> .

    MULTIPLICATION  reduce using rule 112 (nodo7 -> .)
    DIVISION        reduce using rule 112 (nodo7 -> .)
    ADDITION        reduce using rule 112 (nodo7 -> .)
    SUBTRACTION     reduce using rule 112 (nodo7 -> .)
    SEMICOLON       reduce using rule 112 (nodo7 -> .)
    LESS            reduce using rule 112 (nodo7 -> .)
    GREATER         reduce using rule 112 (nodo7 -> .)
    LESSEQUAL       reduce using rule 112 (nodo7 -> .)
    GREATEREQUAL    reduce using rule 112 (nodo7 -> .)
    NOTEQUAL        reduce using rule 112 (nodo7 -> .)
    EQUAL           reduce using rule 112 (nodo7 -> .)
    AND             reduce using rule 112 (nodo7 -> .)
    OR              reduce using rule 112 (nodo7 -> .)
    LPARENTHESIS    reduce using rule 112 (nodo7 -> .)
    ID              reduce using rule 112 (nodo7 -> .)
    CTEINT          reduce using rule 112 (nodo7 -> .)
    CTEFLOAT        reduce using rule 112 (nodo7 -> .)
    CTECHAR         reduce using rule 112 (nodo7 -> .)
    TRUE            reduce using rule 112 (nodo7 -> .)
    FALSE           reduce using rule 112 (nodo7 -> .)
    RPARENTHESIS    reduce using rule 112 (nodo7 -> .)

    nodo7                          shift and go to state 175

state 155

    (93) exp_type_loop -> ADDITION nodo3_suma . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 176
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 156

    (94) exp_type_loop -> SUBTRACTION nodo3_resta . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 177
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 157

    (49) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS . nodo13 bloque nodo17
    (57) nodo13 -> .

    LCURLY          reduce using rule 57 (nodo13 -> .)

    nodo13                         shift and go to state 178

state 158

    (39) escritura_type -> QUOTE CTECHAR QUOTE .

    RPARENTHESIS    reduce using rule 39 (escritura_type -> QUOTE CTECHAR QUOTE .)


state 159

    (37) escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .

    ID              reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    IF              reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RETURN          reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    WHILE           reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)
    RCURLY          reduce using rule 37 (escritura -> PRINT LPARENTHESIS escritura_type RPARENTHESIS SEMICOLON .)


state 160

    (59) expresion_option -> AND nodo12_and . nuevaexp
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 179
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 161

    (58) expresion -> nuevaexp expresion_option nodo11 . expresion_loop
    (62) expresion_loop -> . expresion
    (63) expresion_loop -> .
    (58) expresion -> . nuevaexp expresion_option nodo11 expresion_loop
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    RPARENTHESIS    reduce using rule 63 (expresion_loop -> .)
    SEMICOLON       reduce using rule 63 (expresion_loop -> .)
    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    expresion_loop                 shift and go to state 180
    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 119
    expresion                      shift and go to state 181
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 162

    (60) expresion_option -> OR nodo12_or . nuevaexp
    (67) nuevaexp -> . exp nuevaexp_type nodo10
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    termino                        shift and go to state 94
    varcte                         shift and go to state 83
    factor                         shift and go to state 85
    factor_exp                     shift and go to state 86
    nuevaexp                       shift and go to state 182
    CTEBOOL                        shift and go to state 91
    exp                            shift and go to state 121
    factor_var                     shift and go to state 93

state 163

    (71) nuevaexp_type -> GREATEREQUAL nodo9_mayorig . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 183
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 164

    (69) nuevaexp_type -> GREATER nodo9_mayor . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 184
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 165

    (68) nuevaexp_type -> LESS nodo9_menor . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 185
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 166

    (73) nuevaexp_type -> EQUAL nodo9_igual . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    factor_exp                     shift and go to state 86
    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    termino                        shift and go to state 94
    exp                            shift and go to state 186
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 167

    (72) nuevaexp_type -> NOTEQUAL nodo9_dif . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 187
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 168

    (67) nuevaexp -> exp nuevaexp_type nodo10 .

    LPARENTHESIS    reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    ID              reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEINT          reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTEFLOAT        reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    CTECHAR         reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    TRUE            reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    FALSE           reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    RPARENTHESIS    reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    SEMICOLON       reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    AND             reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)
    OR              reduce using rule 67 (nuevaexp -> exp nuevaexp_type nodo10 .)


state 169

    (70) nuevaexp_type -> LESSEQUAL nodo9_menorig . exp
    (90) exp -> . termino nodo5 exp_loop
    (98) termino -> . factor nodo4 termino_loop
    (106) factor -> . factor_var
    (107) factor -> . factor_exp
    (108) factor_var -> . varcte nodo1
    (109) factor_exp -> . LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7
    (113) varcte -> . ID varcte_arr
    (114) varcte -> . CTEINT nodoCteE
    (115) varcte -> . CTEFLOAT nodoCteF
    (116) varcte -> . CTEBOOL nodoCteB
    (117) varcte -> . CTECHAR nodoCteC
    (120) CTEBOOL -> . TRUE
    (121) CTEBOOL -> . FALSE

    LPARENTHESIS    shift and go to state 88
    ID              shift and go to state 89
    CTEINT          shift and go to state 87
    CTEFLOAT        shift and go to state 84
    CTECHAR         shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 90

    varcte                         shift and go to state 83
    CTEBOOL                        shift and go to state 91
    factor_exp                     shift and go to state 86
    termino                        shift and go to state 94
    exp                            shift and go to state 188
    factor                         shift and go to state 85
    factor_var                     shift and go to state 93

state 170

    (83) asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .

    ID              reduce using rule 83 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    IF              reduce using rule 83 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    PRINT           reduce using rule 83 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RETURN          reduce using rule 83 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    WHILE           reduce using rule 83 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)
    RCURLY          reduce using rule 83 (asignacion_option -> ASSIGN expresion nodo8 SEMICOLON .)


state 171

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN . nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON
    (89) nodo8 -> .

    LBRACKET        reduce using rule 89 (nodo8 -> .)

    nodo8                          shift and go to state 189

state 172

    (52) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 . bloque condicion_option nodo15
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 190

state 173

    (102) termino_type_loop -> DIVISION nodo2_div termino .

    ADDITION        reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    SUBTRACTION     reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    SEMICOLON       reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESS            reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATER         reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    LESSEQUAL       reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    GREATEREQUAL    reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    NOTEQUAL        reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    EQUAL           reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    AND             reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    OR              reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    LPARENTHESIS    reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    ID              reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEINT          reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTEFLOAT        reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    CTECHAR         reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    TRUE            reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    FALSE           reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)
    RPARENTHESIS    reduce using rule 102 (termino_type_loop -> DIVISION nodo2_div termino .)


state 174

    (101) termino_type_loop -> MULTIPLICATION nodo2_mult termino .

    ADDITION        reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SUBTRACTION     reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    SEMICOLON       reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESS            reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATER         reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LESSEQUAL       reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    GREATEREQUAL    reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    NOTEQUAL        reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    EQUAL           reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    AND             reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    OR              reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    LPARENTHESIS    reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    ID              reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEINT          reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTEFLOAT        reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    CTECHAR         reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    TRUE            reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    FALSE           reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)
    RPARENTHESIS    reduce using rule 101 (termino_type_loop -> MULTIPLICATION nodo2_mult termino .)


state 175

    (109) factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .

    MULTIPLICATION  reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    DIVISION        reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ADDITION        reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SUBTRACTION     reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    AND             reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    OR              reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LPARENTHESIS    reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    ID              reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEINT          reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTEFLOAT        reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    CTECHAR         reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    TRUE            reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    FALSE           reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    RPARENTHESIS    reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    SEMICOLON       reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESS            reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATER         reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    LESSEQUAL       reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    GREATEREQUAL    reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    NOTEQUAL        reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)
    EQUAL           reduce using rule 109 (factor_exp -> LPARENTHESIS nodo6 expresion RPARENTHESIS nodo7 .)


state 176

    (93) exp_type_loop -> ADDITION nodo3_suma exp .

    SEMICOLON       reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESS            reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATER         reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LESSEQUAL       reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    GREATEREQUAL    reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    NOTEQUAL        reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    EQUAL           reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    AND             reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    OR              reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    LPARENTHESIS    reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    ID              reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEINT          reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTEFLOAT        reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    CTECHAR         reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    TRUE            reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    FALSE           reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)
    RPARENTHESIS    reduce using rule 93 (exp_type_loop -> ADDITION nodo3_suma exp .)


state 177

    (94) exp_type_loop -> SUBTRACTION nodo3_resta exp .

    SEMICOLON       reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESS            reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATER         reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LESSEQUAL       reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    GREATEREQUAL    reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    NOTEQUAL        reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    EQUAL           reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    AND             reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    OR              reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    LPARENTHESIS    reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    ID              reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEINT          reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTEFLOAT        reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    CTECHAR         reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    TRUE            reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    FALSE           reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)
    RPARENTHESIS    reduce using rule 94 (exp_type_loop -> SUBTRACTION nodo3_resta exp .)


state 178

    (49) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 . bloque nodo17
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 191

state 179

    (59) expresion_option -> AND nodo12_and nuevaexp .

    LPARENTHESIS    reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    ID              reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEINT          reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    CTEFLOAT        reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    CTECHAR         reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    TRUE            reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    FALSE           reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    RPARENTHESIS    reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)
    SEMICOLON       reduce using rule 59 (expresion_option -> AND nodo12_and nuevaexp .)


state 180

    (58) expresion -> nuevaexp expresion_option nodo11 expresion_loop .

    SEMICOLON       reduce using rule 58 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)
    RPARENTHESIS    reduce using rule 58 (expresion -> nuevaexp expresion_option nodo11 expresion_loop .)


state 181

    (62) expresion_loop -> expresion .

    RPARENTHESIS    reduce using rule 62 (expresion_loop -> expresion .)
    SEMICOLON       reduce using rule 62 (expresion_loop -> expresion .)


state 182

    (60) expresion_option -> OR nodo12_or nuevaexp .

    LPARENTHESIS    reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    ID              reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEINT          reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    CTEFLOAT        reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    CTECHAR         reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    TRUE            reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    FALSE           reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    RPARENTHESIS    reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)
    SEMICOLON       reduce using rule 60 (expresion_option -> OR nodo12_or nuevaexp .)


state 183

    (71) nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .

    AND             reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    OR              reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    LPARENTHESIS    reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    ID              reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEINT          reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTEFLOAT        reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    CTECHAR         reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    TRUE            reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    FALSE           reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    RPARENTHESIS    reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)
    SEMICOLON       reduce using rule 71 (nuevaexp_type -> GREATEREQUAL nodo9_mayorig exp .)


state 184

    (69) nuevaexp_type -> GREATER nodo9_mayor exp .

    AND             reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    OR              reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    LPARENTHESIS    reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    ID              reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEINT          reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTEFLOAT        reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    CTECHAR         reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    TRUE            reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    FALSE           reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    RPARENTHESIS    reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)
    SEMICOLON       reduce using rule 69 (nuevaexp_type -> GREATER nodo9_mayor exp .)


state 185

    (68) nuevaexp_type -> LESS nodo9_menor exp .

    AND             reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    OR              reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    LPARENTHESIS    reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    ID              reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEINT          reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTEFLOAT        reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    CTECHAR         reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    TRUE            reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    FALSE           reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    RPARENTHESIS    reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)
    SEMICOLON       reduce using rule 68 (nuevaexp_type -> LESS nodo9_menor exp .)


state 186

    (73) nuevaexp_type -> EQUAL nodo9_igual exp .

    AND             reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    OR              reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    LPARENTHESIS    reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    ID              reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEINT          reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTEFLOAT        reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    CTECHAR         reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    TRUE            reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    FALSE           reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    RPARENTHESIS    reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)
    SEMICOLON       reduce using rule 73 (nuevaexp_type -> EQUAL nodo9_igual exp .)


state 187

    (72) nuevaexp_type -> NOTEQUAL nodo9_dif exp .

    AND             reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    OR              reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    LPARENTHESIS    reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    ID              reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEINT          reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTEFLOAT        reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    CTECHAR         reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    TRUE            reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    FALSE           reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    RPARENTHESIS    reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)
    SEMICOLON       reduce using rule 72 (nuevaexp_type -> NOTEQUAL nodo9_dif exp .)


state 188

    (70) nuevaexp_type -> LESSEQUAL nodo9_menorig exp .

    AND             reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    OR              reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    LPARENTHESIS    reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    ID              reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEINT          reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTEFLOAT        reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    CTECHAR         reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    TRUE            reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    FALSE           reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    RPARENTHESIS    reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)
    SEMICOLON       reduce using rule 70 (nuevaexp_type -> LESSEQUAL nodo9_menorig exp .)


state 189

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 . LBRACKET asignacion_type RBRACKET SEMICOLON

    LBRACKET        shift and go to state 192


state 190

    (52) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque . condicion_option nodo15
    (53) condicion_option -> . ELSE nodo14 bloque
    (54) condicion_option -> .

    ELSE            shift and go to state 193
    ID              reduce using rule 54 (condicion_option -> .)
    IF              reduce using rule 54 (condicion_option -> .)
    PRINT           reduce using rule 54 (condicion_option -> .)
    RETURN          reduce using rule 54 (condicion_option -> .)
    WHILE           reduce using rule 54 (condicion_option -> .)
    RCURLY          reduce using rule 54 (condicion_option -> .)

    condicion_option               shift and go to state 194

state 191

    (49) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque . nodo17
    (51) nodo17 -> .

    ID              reduce using rule 51 (nodo17 -> .)
    IF              reduce using rule 51 (nodo17 -> .)
    PRINT           reduce using rule 51 (nodo17 -> .)
    RETURN          reduce using rule 51 (nodo17 -> .)
    WHILE           reduce using rule 51 (nodo17 -> .)
    RCURLY          reduce using rule 51 (nodo17 -> .)

    nodo17                         shift and go to state 195

state 192

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET . asignacion_type RBRACKET SEMICOLON
    (85) asignacion_type -> . CTEINT
    (86) asignacion_type -> . CTEFLOAT
    (87) asignacion_type -> . CTEINT COMA asignacion_type
    (88) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 196
    CTEFLOAT        shift and go to state 197

    asignacion_type                shift and go to state 198

state 193

    (53) condicion_option -> ELSE . nodo14 bloque
    (56) nodo14 -> .

    LCURLY          reduce using rule 56 (nodo14 -> .)

    nodo14                         shift and go to state 199

state 194

    (52) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option . nodo15
    (55) nodo15 -> .

    ID              reduce using rule 55 (nodo15 -> .)
    IF              reduce using rule 55 (nodo15 -> .)
    PRINT           reduce using rule 55 (nodo15 -> .)
    RETURN          reduce using rule 55 (nodo15 -> .)
    WHILE           reduce using rule 55 (nodo15 -> .)
    RCURLY          reduce using rule 55 (nodo15 -> .)

    nodo15                         shift and go to state 200

state 195

    (49) ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .

    ID              reduce using rule 49 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    IF              reduce using rule 49 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    PRINT           reduce using rule 49 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RETURN          reduce using rule 49 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    WHILE           reduce using rule 49 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)
    RCURLY          reduce using rule 49 (ciclo -> WHILE LPARENTHESIS nodo16 expresion RPARENTHESIS nodo13 bloque nodo17 .)


state 196

    (85) asignacion_type -> CTEINT .
    (87) asignacion_type -> CTEINT . COMA asignacion_type

    RBRACKET        reduce using rule 85 (asignacion_type -> CTEINT .)
    COMA            shift and go to state 201


state 197

    (86) asignacion_type -> CTEFLOAT .
    (88) asignacion_type -> CTEFLOAT . COMA asignacion_type

    RBRACKET        reduce using rule 86 (asignacion_type -> CTEFLOAT .)
    COMA            shift and go to state 202


state 198

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type . RBRACKET SEMICOLON

    RBRACKET        shift and go to state 203


state 199

    (53) condicion_option -> ELSE nodo14 . bloque
    (8) bloque -> . LCURLY bloque_est_loop RCURLY

    LCURLY          shift and go to state 63

    bloque                         shift and go to state 204

state 200

    (52) condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .

    ID              reduce using rule 52 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    IF              reduce using rule 52 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    PRINT           reduce using rule 52 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RETURN          reduce using rule 52 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    WHILE           reduce using rule 52 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)
    RCURLY          reduce using rule 52 (condicion -> IF LPARENTHESIS expresion RPARENTHESIS nodo13 bloque condicion_option nodo15 .)


state 201

    (87) asignacion_type -> CTEINT COMA . asignacion_type
    (85) asignacion_type -> . CTEINT
    (86) asignacion_type -> . CTEFLOAT
    (87) asignacion_type -> . CTEINT COMA asignacion_type
    (88) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 196
    CTEFLOAT        shift and go to state 197

    asignacion_type                shift and go to state 205

state 202

    (88) asignacion_type -> CTEFLOAT COMA . asignacion_type
    (85) asignacion_type -> . CTEINT
    (86) asignacion_type -> . CTEFLOAT
    (87) asignacion_type -> . CTEINT COMA asignacion_type
    (88) asignacion_type -> . CTEFLOAT COMA asignacion_type

    CTEINT          shift and go to state 196
    CTEFLOAT        shift and go to state 197

    asignacion_type                shift and go to state 206

state 203

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET . SEMICOLON

    SEMICOLON       shift and go to state 207


state 204

    (53) condicion_option -> ELSE nodo14 bloque .

    ID              reduce using rule 53 (condicion_option -> ELSE nodo14 bloque .)
    IF              reduce using rule 53 (condicion_option -> ELSE nodo14 bloque .)
    PRINT           reduce using rule 53 (condicion_option -> ELSE nodo14 bloque .)
    RETURN          reduce using rule 53 (condicion_option -> ELSE nodo14 bloque .)
    WHILE           reduce using rule 53 (condicion_option -> ELSE nodo14 bloque .)
    RCURLY          reduce using rule 53 (condicion_option -> ELSE nodo14 bloque .)


state 205

    (87) asignacion_type -> CTEINT COMA asignacion_type .

    RBRACKET        reduce using rule 87 (asignacion_type -> CTEINT COMA asignacion_type .)


state 206

    (88) asignacion_type -> CTEFLOAT COMA asignacion_type .

    RBRACKET        reduce using rule 88 (asignacion_type -> CTEFLOAT COMA asignacion_type .)


state 207

    (84) asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .

    ID              reduce using rule 84 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    IF              reduce using rule 84 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    PRINT           reduce using rule 84 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RETURN          reduce using rule 84 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    WHILE           reduce using rule 84 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)
    RCURLY          reduce using rule 84 (asignacion_option -> LBRACKET CTEINT RBRACKET ASSIGN nodo8 LBRACKET asignacion_type RBRACKET SEMICOLON .)

